(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("vue"), require("screenfull"), require("html2canvas"));
	else if(typeof define === 'function' && define.amd)
		define("relation-graph", ["vue", "screenfull", "html2canvas"], factory);
	else if(typeof exports === 'object')
		exports["relation-graph"] = factory(require("vue"), require("screenfull"), require("html2canvas"));
	else
		root["relation-graph"] = factory(root["Vue"], root["screenfull"], root["html2canvas"]);
})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_9__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_11__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
  Modified by Evan You @yyx990803
*/

var hasDocument = typeof document !== 'undefined'

if (typeof DEBUG !== 'undefined' && DEBUG) {
  if (!hasDocument) {
    throw new Error(
    'vue-style-loader cannot be used in a non-browser environment. ' +
    "Use { target: 'node' } in your Webpack config to indicate a server-rendering environment."
  ) }
}

var listToStyles = __webpack_require__(7)

/*
type StyleObject = {
  id: number;
  parts: Array<StyleObjectPart>
}

type StyleObjectPart = {
  css: string;
  media: string;
  sourceMap: ?string
}
*/

var stylesInDom = {/*
  [id: number]: {
    id: number,
    refs: number,
    parts: Array<(obj?: StyleObjectPart) => void>
  }
*/}

var head = hasDocument && (document.head || document.getElementsByTagName('head')[0])
var singletonElement = null
var singletonCounter = 0
var isProduction = false
var noop = function () {}
var options = null
var ssrIdKey = 'data-vue-ssr-id'

// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
// tags it will allow on a page
var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase())

module.exports = function (parentId, list, _isProduction, _options) {
  isProduction = _isProduction

  options = _options || {}

  var styles = listToStyles(parentId, list)
  addStylesToDom(styles)

  return function update (newList) {
    var mayRemove = []
    for (var i = 0; i < styles.length; i++) {
      var item = styles[i]
      var domStyle = stylesInDom[item.id]
      domStyle.refs--
      mayRemove.push(domStyle)
    }
    if (newList) {
      styles = listToStyles(parentId, newList)
      addStylesToDom(styles)
    } else {
      styles = []
    }
    for (var i = 0; i < mayRemove.length; i++) {
      var domStyle = mayRemove[i]
      if (domStyle.refs === 0) {
        for (var j = 0; j < domStyle.parts.length; j++) {
          domStyle.parts[j]()
        }
        delete stylesInDom[domStyle.id]
      }
    }
  }
}

function addStylesToDom (styles /* Array<StyleObject> */) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i]
    var domStyle = stylesInDom[item.id]
    if (domStyle) {
      domStyle.refs++
      for (var j = 0; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j])
      }
      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j]))
      }
      if (domStyle.parts.length > item.parts.length) {
        domStyle.parts.length = item.parts.length
      }
    } else {
      var parts = []
      for (var j = 0; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j]))
      }
      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }
    }
  }
}

function createStyleElement () {
  var styleElement = document.createElement('style')
  styleElement.type = 'text/css'
  head.appendChild(styleElement)
  return styleElement
}

function addStyle (obj /* StyleObjectPart */) {
  var update, remove
  var styleElement = document.querySelector('style[' + ssrIdKey + '~="' + obj.id + '"]')

  if (styleElement) {
    if (isProduction) {
      // has SSR styles and in production mode.
      // simply do nothing.
      return noop
    } else {
      // has SSR styles but in dev mode.
      // for some reason Chrome can't handle source map in server-rendered
      // style tags - source maps in <style> only works if the style tag is
      // created and inserted dynamically. So we remove the server rendered
      // styles and inject new ones.
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  if (isOldIE) {
    // use singleton mode for IE9.
    var styleIndex = singletonCounter++
    styleElement = singletonElement || (singletonElement = createStyleElement())
    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)
    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)
  } else {
    // use multi-style-tag mode in all other cases
    styleElement = createStyleElement()
    update = applyToTag.bind(null, styleElement)
    remove = function () {
      styleElement.parentNode.removeChild(styleElement)
    }
  }

  update(obj)

  return function updateStyle (newObj /* StyleObjectPart */) {
    if (newObj) {
      if (newObj.css === obj.css &&
          newObj.media === obj.media &&
          newObj.sourceMap === obj.sourceMap) {
        return
      }
      update(obj = newObj)
    } else {
      remove()
    }
  }
}

var replaceText = (function () {
  var textStore = []

  return function (index, replacement) {
    textStore[index] = replacement
    return textStore.filter(Boolean).join('\n')
  }
})()

function applyToSingletonTag (styleElement, index, remove, obj) {
  var css = remove ? '' : obj.css

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = replaceText(index, css)
  } else {
    var cssNode = document.createTextNode(css)
    var childNodes = styleElement.childNodes
    if (childNodes[index]) styleElement.removeChild(childNodes[index])
    if (childNodes.length) {
      styleElement.insertBefore(cssNode, childNodes[index])
    } else {
      styleElement.appendChild(cssNode)
    }
  }
}

function applyToTag (styleElement, obj) {
  var css = obj.css
  var media = obj.media
  var sourceMap = obj.sourceMap

  if (media) {
    styleElement.setAttribute('media', media)
  }
  if (options.ssrId) {
    styleElement.setAttribute(ssrIdKey, obj.id)
  }

  if (sourceMap) {
    // https://developer.chrome.com/devtools/docs/javascript-debugging
    // this makes source maps inside style tags work properly in Chrome
    css += '\n/*# sourceURL=' + sourceMap.sources[0] + ' */'
    // http://stackoverflow.com/a/26603875
    css += '\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'
  }

  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild)
    }
    styleElement.appendChild(document.createTextNode(css))
  }
}


/***/ }),
/* 2 */
/***/ (function(module, exports) {

/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file.
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

module.exports = function normalizeComponent (
  rawScriptExports,
  compiledTemplate,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier /* server only */
) {
  var esModule
  var scriptExports = rawScriptExports = rawScriptExports || {}

  // ES6 modules interop
  var type = typeof rawScriptExports.default
  if (type === 'object' || type === 'function') {
    esModule = rawScriptExports
    scriptExports = rawScriptExports.default
  }

  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (compiledTemplate) {
    options.render = compiledTemplate.render
    options.staticRenderFns = compiledTemplate.staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = injectStyles
  }

  if (hook) {
    var functional = options.functional
    var existing = functional
      ? options.render
      : options.beforeCreate

    if (!functional) {
      // inject component registration as beforeCreate hook
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    } else {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return existing(h, context)
      }
    }
  }

  return {
    esModule: esModule,
    exports: scriptExports,
    options: options
  }
}


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(4);


/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });

// EXTERNAL MODULE: ./src/core4vue/SeeksGraphIconfont.js
var SeeksGraphIconfont = __webpack_require__(8);
var SeeksGraphIconfont_default = /*#__PURE__*/__webpack_require__.n(SeeksGraphIconfont);

// EXTERNAL MODULE: external {"root":"Vue","commonjs":"vue","commonjs2":"vue","amd":"vue"}
var external___root___Vue___commonjs___vue___commonjs2___vue___amd___vue__ = __webpack_require__(9);
var external___root___Vue___commonjs___vue___commonjs2___vue___amd___vue___default = /*#__PURE__*/__webpack_require__.n(external___root___Vue___commonjs___vue___commonjs2___vue___amd___vue__);

// EXTERNAL MODULE: external {"root":"screenfull","commonjs":"screenfull","commonjs2":"screenfull","amd":"screenfull"}
var external___root___screenfull___commonjs___screenfull___commonjs2___screenfull___amd___screenfull__ = __webpack_require__(10);
var external___root___screenfull___commonjs___screenfull___commonjs2___screenfull___amd___screenfull___default = /*#__PURE__*/__webpack_require__.n(external___root___screenfull___commonjs___screenfull___commonjs2___screenfull___amd___screenfull__);

// EXTERNAL MODULE: external {"root":"html2canvas","commonjs":"html2canvas","commonjs2":"html2canvas","amd":"html2canvas"}
var external___root___html2canvas___commonjs___html2canvas___commonjs2___html2canvas___amd___html2canvas__ = __webpack_require__(11);
var external___root___html2canvas___commonjs___html2canvas___commonjs2___html2canvas___amd___html2canvas___default = /*#__PURE__*/__webpack_require__.n(external___root___html2canvas___commonjs___html2canvas___commonjs2___html2canvas___amd___html2canvas__);

// CONCATENATED MODULE: ./src/core4vue/SeeksGraphMath.js
var STAITC_MAP_ANGLE = 0;
var SeeksGraphMath = {
  getRectPoint: function (x1, y1, x2, y2, n1w, n1h, n2w, n2h) {
    var fx = x1 + n1w / 2;
    var fy = y1 + n1h / 2;
    var tx = x2 + n2w / 2;
    var ty = y2 + n2h / 2;
    var _ar_x = fx < tx ? 1 : -1;
    var _ar_y = fy < ty ? 1 : -1;
    if (ty === fy) {
      return { x: fx + _ar_x * n1w / 2, y: fy };
    }
    var __tan = Math.abs((tx - fx) / (ty - fy));
    var rectAngle = n1w / n1h;
    var __w = 0;
    var __h = 0;
    if (__tan < rectAngle) {
      __w = _ar_x * n1h / 2 * __tan;
      __h = _ar_y * n1h / 2;
    } else {
      __w = _ar_x * n1w / 2;
      __h = _ar_y * n1w / 2 / __tan;
    }
    return { x: fx + __w, y: fy + __h };
  },
  getRectPointBasic: function (x1, y1, x2, y2, n1w, n1h, n2w, n2h) {
    var fx = x1 + n1w / 2;
    var fy = y1 + n1h / 2;
    var tx = x2 + n2w / 2;
    var ty = y2 + n2h / 2;
    // var x = fx - tx
    // var y = fy - ty
    // var z = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))
    // var cos = y / z
    // var radina = Math.acos(cos)// 用反三角函数求弧度
    // var angle = Math.floor(180 / (Math.PI / radina))// 将弧度转换成角度
    // n1h = n1h + 10
    // n1w = n1w + 10

    var __tanA = ty === fy ? 0 : (tx - fx) / (ty - fy);
    if (__tanA === 0) __tanA = (tx - fx) / (ty - fy + 1);
    var rectAngle = n1w / n2h;
    var __w = 0;
    var __h = 0;
    var _case = '1';
    // var __A_angle = Math.atan(__tanA) / (Math.PI / 180)
    if (-1 * rectAngle < __tanA && __tanA < rectAngle) {
      _case = '2';
      if (fy < ty) {
        __w = n1h / 2 * __tanA;
        __h = n1h / 2;
      } else {
        __w = -1 * n1h / 2 * __tanA;
        __h = -1 * n1h / 2;
      }
    } else {
      if (fx < tx) {
        __w = 1 * n1w / 2;
        __h = 1 * n1w / 2 / __tanA;
      } else {
        __w = -1 * n1w / 2;
        __h = -1 * n1w / 2 / __tanA;
      }
      _case = '3';
    }
    // var __w = (n1h / 2) * Math.tan(__A_angle)
    // var __w = ty === fy ? parseInt(n1w / 2) : parseInt(((n1h / 2) * (tx - fx)) / (ty - fy))
    // var __h = tx === fx ? parseInt(n1h / 2) : parseInt((__w * (ty - fy)) / (tx - fx))
    return { x: fx + __w, y: fy + __h, _case };
  },
  getRectJoinPoint: function (x1, y1, x2, y2, n1w, n1h, n2w, n2h) {
    var _from_c_x = x1 + n1w / 2;
    var _from_c_y = y1 + n1h / 2;
    var _to_c_x = x2 + n2w / 2;
    var _to_c_y = y2 + n2h / 2;
    var _atan2 = parseInt(Math.atan2(_to_c_y - _from_c_y, _to_c_x - _from_c_x) * 180 / 3.14) + 135;
    if (_atan2 >= 0 && _atan2 < 90) {
      // top
      return { x: x1 + n1w / 2, y: y1 - 5 };
    } else if (_atan2 >= 90 && _atan2 < 180) {
      // right
      return { x: x1 + n1w + 5, y: y1 + n1h / 2 };
    } else if (_atan2 >= 180 && _atan2 < 270) {
      // bottom
      return { x: x1 + n1w / 2, y: y1 + n1h + 5 };
    } else {
      // left
      return { x: x1 - 5, y: y1 + n1h / 2 };
    }
  },
  getRectHJoinPoint: function (x1, y1, x2, y2, n1w, n1h, n2w) {
    var _hH = n1h / 2;
    // var _hW = n1w / 2
    if (x1 + n1w < x2) {
      return { x: x1 + n1w + 5, y: y1 + _hH };
    } else if (x1 + n1w < x2 + n2w) {
      return { x: x1 - 5, y: y1 + _hH };
    } else {
      return { x: x1 - 5, y: y1 + _hH };
    }
  },
  getRectVJoinPoint: function (x1, y1, x2, y2, n1w, n1h, n2w, n2h) {
    var _hW = n1w / 2;
    // var _hW = n1w / 2
    if (y1 + n1h < y2) {
      return { y: y1 + n1h + 5, x: x1 + _hW };
    } else if (y1 + n1h < y2 + n2h) {
      return { y: y1 - 5, x: x1 + _hW };
    } else {
      return { y: y1 - 5, x: x1 + _hW };
    }
  },
  getBorderPoint: function (x1, y1, x2, y2, n1w, n1h, n2w, n2h, n1style) {
    if (n1style === 0) {
      return this.getCirclePoint(x1, y1, x2, y2, n1w, n1h, n2w, n2h);
    } else {
      return this.getRectPoint(x1, y1, x2, y2, n1w, n1h, n2w, n2h);
    }
  },
  getBorderPoint4MultiLine: function (x1, y1, x2, y2, n1w, n1h, n2w, n2h, n1style, isReserve, allSize, indexOfAll) {
    if (n1style === 0) {
      return this.getCirclePoint4MultiLine(x1, y1, x2, y2, n1w, n1h, n2w, n2h, isReserve, allSize, indexOfAll);
    } else {
      return this.getRectPoint(x1, y1, x2, y2, n1w, n1h, n2w, n2h);
    }
  },
  getCirclePoint: function (x1, y1, x2, y2, n1w, n1h, n2w, n2h) {
    var fx = x2 + n2w / 2;
    var fy = y2 + n2h / 2;
    var tx = x1 + n1w / 2;
    var ty = y1 + n1h / 2;
    var buff_h = fx - tx;
    if (buff_h === 0) {
      return { x: tx, y: ty - n1h / 2 * (fy < ty ? 1 : -1) };
    }
    var buff_v = fy - ty;
    var k = buff_v / buff_h;
    // var m = ty - tx * k
    var __x = Math.sqrt(1 / (1 / Math.pow(n1w / 2, 2) + k ** 2 / Math.pow(n1h / 2, 2))) * (fx < tx ? 1 : -1);
    var __y = k * __x;
    // this.c = Math.sqrt(this.h * this.h + this.s * this.s)
    // // this.l = this.c - radius
    // this.v = (this.c - n1w / 2) * this.h / this.c * -1
    // this.t = (this.c - n1h / 2) * this.s / this.c * -1
    // alert(this.h+","+this.s+","+this.c+","+this.l+","+this.v+","+this.t);
    return { x: tx - __x, y: ty - __y };
  },
  getCirclePoint4MultiLine: function (x1, y1, x2, y2, n1w, n1h, n2w, n2h, isReserve, allSize, indexOfAll) {
    // console.log(indexOfAll, 'of', allSize, isReserve)
    if (isReserve) {
      indexOfAll = allSize - indexOfAll - 1;
      // console.log(indexOfAll, 'of', allSize, '|indexOfAll changed!')
    }
    var to_x = x2 + n2w / 2;
    var to_y = y2 + n2h / 2;
    var from_x = x1 + n1w / 2;
    var from_y = y1 + n1h / 2;
    var buff_h = to_x - from_x;
    if (buff_h === 0) {
      return { x: from_x, y: from_y - n1h / 2 * (to_y < from_y ? 1 : -1) };
    }
    var distance = 40 / (allSize + 1) * (indexOfAll + 1) - 20;
    var buff_v = to_y - from_y;
    var b = Math.sqrt(Math.pow(buff_h, 2) + Math.pow(buff_v, 2)) * distance / buff_h;
    var k = buff_v / buff_h;
    var m = n1w / 2;
    var n = n1h / 2;
    var __wow = to_x < from_x ? 1 : -1;
    var __x = (-1 * m ** 2 * k * b + m * n * Math.sqrt(n ** 2 + k ** 2 * m ** 2 - b ** 2, 2) / __wow) / (n ** 2 + m ** 2 * k ** 2);
    // var __x = Math.sqrt(1 / ((1 / Math.pow(n1w / 2, 2)) + (k ** 2 / Math.pow(n1h / 2, 2)))) * (to_x < from_x ? 1 : -1)
    var __y = k * __x + b;
    // this.c = Math.sqrt(this.h * this.h + this.s * this.s)
    // // this.l = this.c - radius
    // this.v = (this.c - n1w / 2) * this.h / this.c * -1
    // this.t = (this.c - n1h / 2) * this.s / this.c * -1
    // alert(this.h+","+this.s+","+this.c+","+this.l+","+this.v+","+this.t);
    return { x: from_x - __x, y: from_y - __y };
  },
  getCirclePointBasic: function (x1, y1, x2, y2, n1w, n1h, n2w, n2h, radius) {
    var fx = x1 + n1w / 2;
    var fy = y1 + n1h / 2;
    var tx = x2 + n2w / 2;
    var ty = y2 + n2h / 2;
    this.h = tx - fx;
    this.s = ty - fy;
    this.c = Math.sqrt(this.h * this.h + this.s * this.s);
    this.l = this.c - radius;
    this.v = this.l * this.h / this.c * -1;
    this.t = this.l * this.s / this.c * -1;
    // alert(this.h+","+this.s+","+this.c+","+this.l+","+this.v+","+this.t);
    return { x: tx + this.v, y: ty + this.t };
  },
  getCirclePointPlus: function (x1, y1, x2, y2, n1w, n1h, n2w, n2h) {
    var fx = x1 + n1w / 2;
    var fy = y1 + n1h / 2;
    var tx = x2 + n2w / 2;
    var ty = y2 + n2h / 2;
    this.h = tx - fx;
    this.s = ty - fy;
    this.c = Math.sqrt(this.h * this.h + this.s * this.s);
    // this.l = this.c - radius
    this.v = (this.c - n1w / 2) * this.h / this.c * -1;
    this.t = (this.c - n1h / 2) * this.s / this.c * -1;
    // alert(this.h+","+this.s+","+this.c+","+this.l+","+this.v+","+this.t);
    return { x: tx + this.v, y: ty + this.t };
  },
  getOvalPoint: function (c_x, c_y, c_r, c_i, c_n) {
    return {
      x: c_x + c_r * Math.sin((STAITC_MAP_ANGLE + c_i * (360 / c_n) + 0) * Math.PI / 180),
      y: c_y + c_r * Math.cos((STAITC_MAP_ANGLE + c_i * (360 / c_n) + 0) * Math.PI / 180) * -1
    };
  },
  getAngleType: function (buffer_x, buffer_y) {
    if (buffer_x >= 0 && buffer_y >= 0) {
      // 第一象限
      return 1;
    } else if (buffer_x < 0 && buffer_y >= 0) {
      // 第二象限
      return 2;
    } else if (buffer_x < 0 && buffer_y < 0) {
      // 第三象限
      return 3;
    } else if (buffer_x >= 0 && buffer_y < 0) {
      // 第三象限
      return 4;
    }
  },
  getTextAngle: function (fx, fy, tx, ty) {
    // 除数不能为0
    var tan = Math.atan(Math.abs((ty - fy) / (tx - fx))) * 180 / Math.PI;

    // return tan
    if (tx > fx && ty > fy) {// 第一象限
    } else if (tx > fx && ty < fy) {
      // 第二象限
      tan = -tan;
    } else if (tx < fx && ty > fy) {
      // 第三象限
      tan = 180 - tan;
    } else {
      tan = tan - 180;
    }
    if (Math.abs(tan) > 90) {
      tan = tan + 180;
    }
    // if (tan > 90 && tan < 270) {
    //   tan = 0
    // }
    return parseInt(tan);
  },
  getTreePointFromTop: function (c_x, c_y, c_height, c_i, c_n, sizehelper) {
    if (!c_x) {
      // if root
      return {
        x: (sizehelper.canvas_width - sizehelper.node_width) / 2,
        y: (sizehelper.canvas_height - sizehelper.node_height) / 2 - 200
      };
    }
    var sssss = {
      x: c_x - 300 + Math.max(600 / ((c_n === 1 ? 2 : c_n) - 1), 80) * c_i,
      y: c_y + c_height
    };
    return sssss;
  },
  getTreePointFromRight: function (c_x, c_y, c_height, c_i, c_n, sizehelper) {
    if (!c_x) {
      // if root
      return {
        x: (sizehelper.canvas_width - sizehelper.node_width) / 2 + 300,
        y: (sizehelper.canvas_height - sizehelper.node_height) / 2
      };
    }
    return {
      x: c_x - c_height,
      y: c_y - 200 + Math.max(400 / ((c_n === 1 ? 2 : c_n) - 1), 80) * c_i
    };
  },
  getTreePointFromBottom: function (c_x, c_y, c_height, c_i, c_n, sizehelper) {
    if (!c_x) {
      // if root
      return {
        x: (sizehelper.canvas_width - sizehelper.node_width) / 2,
        y: (sizehelper.canvas_height - sizehelper.node_height) / 2 + 200
      };
    }
    return {
      x: c_x - 300 + Math.max(600 / ((c_n === 1 ? 2 : c_n) - 1), 80) * c_i,
      y: c_y - c_height
    };
  },
  getTreePointFromLeft: function (c_x, c_y, c_height, c_i, c_n, sizehelper) {
    if (!c_x) {
      // if root
      return {
        x: (sizehelper.canvas_width - sizehelper.node_width) / 2 - 300,
        y: (sizehelper.canvas_height - sizehelper.node_height) / 2
      };
    }
    return {
      x: c_x + c_height,
      y: c_y - 200 + Math.max(400 / ((c_n === 1 ? 2 : c_n) - 1), 80) * c_i
    };
  },
  analysisNodes: function (willLayoutNodes, thisLevelNodes, thisDeep, analyticResult, config) {
    if (thisLevelNodes.length > analyticResult.max_length) {
      analyticResult.max_length = thisLevelNodes.length;
    }
    if (thisDeep > analyticResult.max_deep) {
      analyticResult.max_deep = thisDeep;
    }
    var __thisLOT_subling = {
      level: thisDeep,
      all_size: thisLevelNodes.length,
      all_strength: 0
    };
    var newLevelNodes = [];
    thisLevelNodes.forEach(thisNode => {
      if (!thisNode.lot) thisNode.lot = {};
      thisNode.lot.eached = true;
      thisNode.lot.subling = __thisLOT_subling;
      thisNode.lot.level = thisDeep;
      willLayoutNodes.push(thisNode);
    });
    var __thisLevel_index = 0;
    // var __prev_node
    thisLevelNodes.forEach(thisNode => {
      // console.log('Build node::', thisNode.name, thisNode.targetNodes.length)
      var __thisNode_child_size = 0;
      if (thisNode.targetNodes) {
        let __thisTargetIndex = 0;
        thisNode.targetNodes.forEach(thisTarget => {
          if (!thisTarget.lot) thisTarget.lot = { eached: false };
          if (!thisTarget.lot.eached) {
            if (SeeksGraphMath.isAllowShowNode(thisTarget)) {
              thisTarget.lot.eached = true;
              thisTarget.lot.parent = thisNode;
              thisTarget.lot.index_of_parent = __thisTargetIndex++;
              // thisTarget.lot.prevNode = __prev_node
              // if (__prev_node)__prev_node.lot.nextNode = thisTarget
              // __prev_node = thisTarget
              thisNode.lot.childs.push(thisTarget);
              newLevelNodes.push(thisTarget);
              __thisNode_child_size++;
            } else {
              thisNode.lot.childs.push(thisTarget);
              // console.log('hide node:', thisTarget.name, 'from:', thisNode.text)
            }
          }
        });
      }
      thisNode.lot.strength = __thisNode_child_size > 0 ? __thisNode_child_size : 1;
      __thisLOT_subling.all_strength += thisNode.lot.strength;
      thisNode.lot.strength_plus = __thisLOT_subling.all_strength;
      thisNode.lot.index_of_level = __thisLevel_index;
      thisNode.lot.childs_size = __thisNode_child_size;
      __thisLevel_index++;
    });
    if (__thisLOT_subling.all_strength > analyticResult.max_strength) {
      analyticResult.max_strength = __thisLOT_subling.all_strength;
    }
    // console.log(thisDeep, 'next level nodes:', newLevelNodes.length)
    if (newLevelNodes.length > 0) {
      // console.log('thisLevelNodes.length:', thisLevelNodes, thisLevelNodes.length)
      this.analysisNodes(willLayoutNodes, newLevelNodes, thisDeep + 1, analyticResult, config);
    } else {
      willLayoutNodes.forEach(thisNode => {
        if (thisNode.lot.childs_size > 0) {
          thisNode.lot.strengthWithChilds = 0;
        }
      });
      willLayoutNodes.forEach(thisNode => {
        if (thisNode.lot.childs_size === 0) {
          thisNode.lot.strengthWithChilds = 1;
          this.conductStrengthToParents(thisNode);
        }
      });
      this.analysisDataTree([willLayoutNodes[0]], 0);
      // willLayoutNodes.forEach(thisNode => {
      //   thisNode.text = thisNode.lot.strengthWithChilds_from + ':' + thisNode.lot.strengthWithChilds + '/' + thisNode.lot.strength
      // })
    }
  },
  analysisNodes4Didirectional: function (willLayoutNodes, thisLevelNodes, thisDeep, analyticResult, levelDirect) {
    if (thisLevelNodes.length > analyticResult.max_length) {
      analyticResult.max_length = thisLevelNodes.length;
    }
    if (thisDeep > analyticResult.max_deep) {
      analyticResult.max_deep = thisDeep;
    }
    var __thisLOT_subling = {
      level: thisDeep,
      all_size: thisLevelNodes.length,
      all_strength: 0
    };
    var newLevelNodes = [];
    thisLevelNodes.forEach(thisNode => {
      if (!thisNode.lot) thisNode.lot = {};
      thisNode.lot.eached = true;
      thisNode.lot.subling = __thisLOT_subling;
      thisNode.lot.level = thisDeep;
      willLayoutNodes.push(thisNode);
    });
    var __thisLevel_index = 0;
    // var __prev_node
    thisLevelNodes.forEach(thisNode => {
      var __thisNode_child_size = 0;
      if (levelDirect === 0) {
        // console.log('Build node::from::', thisNode.name, thisNode.targetNodes.length)
        let __thisTargetIndex = 0;
        thisNode.targetNodes.forEach(thisTarget => {
          if (!thisTarget.lot) thisTarget.lot = { eached: false };
          if (!thisTarget.lot.eached) {
            if (SeeksGraphMath.isAllowShowNode(thisTarget)) {
              thisTarget.lot.eached = true;
              thisTarget.lot.parent = thisNode;
              thisTarget.lot.index_of_parent = __thisTargetIndex++;
              // thisTarget.lot.prevNode = __prev_node
              // if (__prev_node)__prev_node.lot.nextNode = thisTarget
              // __prev_node = thisTarget
              thisNode.lot.childs.push(thisTarget);
              newLevelNodes.push(thisTarget);
              __thisNode_child_size++;
            } else {
              thisNode.lot.childs.push(thisTarget);
              // console.log('hide node:', thisTarget.text, 'from:', thisNode.text)
            }
          } else {
              // console.log('solved node:', thisTarget.text, 'from:', thisNode.text)
            }
        });
      } else if (levelDirect === -1) {
        // console.log('Build node::from::', thisNode.name, thisNode.targetFrom.length)
        let __thisTargetIndex = 0;
        thisNode.targetFrom.forEach(thisTarget => {
          if (!thisTarget.lot) thisTarget.lot = { eached: false };
          if (!thisTarget.lot.eached) {
            if (SeeksGraphMath.isAllowShowNode(thisTarget)) {
              thisTarget.lot.eached = true;
              thisTarget.lot.parent = thisNode;
              thisTarget.lot.index_of_parent = __thisTargetIndex++;
              // thisTarget.lot.prevNode = __prev_node
              // if (__prev_node)__prev_node.lot.nextNode = thisTarget
              // __prev_node = thisTarget
              thisNode.lot.childs.push(thisTarget);
              newLevelNodes.push(thisTarget);
              __thisNode_child_size++;
            } else {
              thisNode.lot.childs.push(thisTarget);
              // console.log('hide node:', thisTarget.name, 'from:', thisNode.text)
            }
          }
        });
      } else {
        // console.log('Build node::to::', thisNode.name, thisNode.targetTo.length)
        let __thisTargetIndex = 0;
        thisNode.targetTo.forEach(thisTarget => {
          if (!thisTarget.lot) thisTarget.lot = { eached: false };
          if (!thisTarget.lot.eached) {
            if (SeeksGraphMath.isAllowShowNode(thisTarget)) {
              thisTarget.lot.eached = true;
              thisTarget.lot.parent = thisNode;
              thisTarget.lot.index_of_parent = __thisTargetIndex++;
              // thisTarget.lot.prevNode = __prev_node
              // if (__prev_node)__prev_node.lot.nextNode = thisTarget
              // __prev_node = thisTarget
              thisNode.lot.childs.push(thisTarget);
              newLevelNodes.push(thisTarget);
              __thisNode_child_size++;
            } else {
              thisNode.lot.childs.push(thisTarget);
              // console.log('hide node:', thisTarget.name, 'from:', thisNode.text)
            }
          }
        });
      }
      thisNode.lot.strength = __thisNode_child_size > 0 ? __thisNode_child_size : 1;
      __thisLOT_subling.all_strength += thisNode.lot.strength;
      thisNode.lot.strength_plus = __thisLOT_subling.all_strength;
      thisNode.lot.index_of_level = __thisLevel_index;
      thisNode.lot.childs_size = __thisNode_child_size;
      __thisLevel_index++;
    });
    if (__thisLOT_subling.all_strength > analyticResult.max_strength) {
      analyticResult.max_strength = __thisLOT_subling.all_strength;
    }
    // console.log(thisDeep, 'next level nodes:', newLevelNodes.length)
    if (newLevelNodes.length > 0) {
      // console.log('thisLevelNodes.length:', thisLevelNodes, thisLevelNodes.length)
      SeeksGraphMath.analysisNodes4Didirectional(willLayoutNodes, newLevelNodes, thisDeep + (levelDirect === -1 ? -1 : 1), analyticResult, levelDirect);
    } else {
      willLayoutNodes.forEach(thisNode => {
        if (thisNode.lot.childs_size > 0) {
          thisNode.lot.strengthWithChilds = 0;
        }
      });
      willLayoutNodes.forEach(thisNode => {
        if (thisNode.lot.childs_size === 0) {
          thisNode.lot.strengthWithChilds = 1;
          SeeksGraphMath.conductStrengthToParents(thisNode);
        }
      });
      SeeksGraphMath.analysisDataTree([willLayoutNodes[0]], 0, levelDirect);
      // willLayoutNodes.forEach(thisNode => {
      //   thisNode.text = thisNode.lot.strengthWithChilds_from + ':' + thisNode.lot.strengthWithChilds + '/' + thisNode.lot.strength
      // })
    }
  },
  conductStrengthToParents(node) {
    if (node.lot.parent) {
      node.lot.parent.lot.strengthWithChilds += 1;
      this.conductStrengthToParents(node.lot.parent);
    }
  },
  analysisDataTree: function (thisLevelNodes, thisDeep, levelDirect) {
    if (levelDirect === undefined) levelDirect = 1;
    var newLevelNodes = [];
    var currentLevelStrengthWidthChilds = 0;
    thisLevelNodes.forEach(thisNode => {
      // console.log('Place node aaaaaa:', levelDirect, thisNode.text, (thisNode.lot.level < 0 ? -1 : 1))
      if (thisNode.lot.level === 0 || levelDirect === (thisNode.lot.level < 0 ? -1 : 1)) {
        if (thisNode.lot.childs_size > 0) {
          thisNode.lot.childs.forEach(thisTarget => {
            newLevelNodes.push(thisTarget);
          });
        }
        if (thisNode.lot.parent && currentLevelStrengthWidthChilds < thisNode.lot.parent.lot.strengthWithChilds_from) {
          currentLevelStrengthWidthChilds = thisNode.lot.parent.lot.strengthWithChilds_from;
        }
        thisNode.lot.strengthWithChilds_from = currentLevelStrengthWidthChilds;
        currentLevelStrengthWidthChilds += thisNode.lot.strengthWithChilds;
      }
    });
    // console.log(thisDeep, 'next level nodes:', newLevelNodes.length)
    if (newLevelNodes.length > 0) {
      this.analysisDataTree(newLevelNodes, thisDeep + levelDirect, levelDirect);
    }
  },
  // conductStrengthToParents(node) {
  //   if (node.lot.childs_size === 0) {
  //     return 1
  //   } else {
  //     var _sum = 0
  //     node.lot.childs.forEach(thisChild => {
  //       thisChild.lot.strengthWithChilds = this.conductStrengthToParents(thisChild)
  //       _sum += thisChild.lot.strengthWithChilds
  //     })
  //     return _sum
  //   }
  // },
  isAllowShowNode: function (thisNode) {
    const _r = thisNode.isShow !== false && thisNode.isHide !== true && (!thisNode.lot.parent || this.isAllowShowNode(thisNode.lot.parent, false) === true);
    // if (derict !== false && _r === false) console.log('hide node by:', thisNode.isShow !== false, thisNode.isHide !== true)
    return _r;
  }
};

/* harmony default export */ var core4vue_SeeksGraphMath = (SeeksGraphMath);
// CONCATENATED MODULE: ./src/core4vue/layouters/SeeksBidirectionalTreeLayouter.js


function SeeksBidirectionalTreeLayouter(layoutSetting, graphSetting) {
  this.graphSetting = graphSetting;
  this.config = layoutSetting || {};
  console.log('new SeeksBidirectionalTreeLayouter:', this.config);
  if (!this.config.from) this.config.from = 'left';
  if (this.config.levelDistance && typeof this.config.levelDistance === 'string') {
    this.config.levelDistanceArr = this.config.levelDistance.split(',').map(thisNum => parseInt(thisNum));
  }
  this.rootNode = null;
  this.allNodes = [];
  this.__origin_nodes = [];
  this.refresh = function () {
    console.log('SeeksBidirectionalTreeLayouter:refresh:nodes:', this.__origin_nodes.length);
    this.placeNodes(this.__origin_nodes, this.rootNode);
  };
  this.analysisNodes4Didirectional = function (willLayoutNodes, thisLevelNodes, thisDeep, analyticResult, levelDirect) {
    if (thisLevelNodes.length > analyticResult.max_length) {
      analyticResult.max_length = thisLevelNodes.length;
    }
    if (thisDeep > analyticResult.max_deep) {
      analyticResult.max_deep = thisDeep;
    }
    var __thisLOT_subling = {
      level: thisDeep,
      all_size: thisLevelNodes.length,
      all_strength: 0
    };
    var newLevelNodes = [];
    thisLevelNodes.forEach(thisNode => {
      if (!thisNode.lot) thisNode.lot = {};
      thisNode.lot.eached = true;
      thisNode.lot.subling = __thisLOT_subling;
      thisNode.lot.level = thisDeep;
      willLayoutNodes.push(thisNode);
    });
    var __thisLevel_index = 0;
    // var __prev_node
    thisLevelNodes.forEach(thisNode => {
      var __thisNode_child_size = 0;
      // console.log('Build node::', thisNode.text, thisNode.targetNodes.length)
      if (levelDirect === -1) {
        // console.log('Build node::from::', thisNode.text, thisNode.targetFrom.length)
        let __thisTargetIndex = 0;
        thisNode.targetFrom.forEach(thisTarget => {
          if (!thisTarget.lot) thisTarget.lot = { eached: false };
          if (!thisTarget.lot.eached) {
            if (core4vue_SeeksGraphMath.isAllowShowNode(thisTarget)) {
              thisTarget.lot.eached = true;
              thisTarget.lot.parent = thisNode;
              thisTarget.lot.index_of_parent = __thisTargetIndex++;
              // thisTarget.lot.prevNode = __prev_node
              // if (__prev_node)__prev_node.lot.nextNode = thisTarget
              // __prev_node = thisTarget
              thisNode.lot.childs.push(thisTarget);
              newLevelNodes.push(thisTarget);
              __thisNode_child_size++;
            } else {
              thisNode.lot.childs.push(thisTarget);
              // console.log('hide node:', thisTarget.name, 'from:', thisNode.text)
            }
          }
        });
      } else {
        // console.log('Build node::to::', thisNode.text, thisNode.targetTo.length)
        let __thisTargetIndex = 0;
        thisNode.targetTo.forEach(thisTarget => {
          if (!thisTarget.lot) thisTarget.lot = { eached: false };
          if (!thisTarget.lot.eached) {
            if (core4vue_SeeksGraphMath.isAllowShowNode(thisTarget)) {
              thisTarget.lot.eached = true;
              thisTarget.lot.parent = thisNode;
              thisTarget.lot.index_of_parent = __thisTargetIndex++;
              // thisTarget.lot.prevNode = __prev_node
              // if (__prev_node)__prev_node.lot.nextNode = thisTarget
              // __prev_node = thisTarget
              thisNode.lot.childs.push(thisTarget);
              newLevelNodes.push(thisTarget);
              __thisNode_child_size++;
            } else {
              thisNode.lot.childs.push(thisTarget);
              // console.log('hide node:', thisTarget.name, 'from:', thisNode.text)
            }
          }
        });
      }
      thisNode.lot.strength = __thisNode_child_size > 0 ? __thisNode_child_size : 1;
      __thisLOT_subling.all_strength += thisNode.lot.strength;
      thisNode.lot.strength_plus = __thisLOT_subling.all_strength;
      thisNode.lot.index_of_level = __thisLevel_index;
      thisNode.lot.childs_size = __thisNode_child_size;
      __thisLevel_index++;
    });
    if (__thisLOT_subling.all_strength > analyticResult.max_strength) {
      analyticResult.max_strength = __thisLOT_subling.all_strength;
    }
    // console.log(thisDeep, 'next level nodes:', newLevelNodes.length)
    if (newLevelNodes.length > 0) {
      // console.log('thisLevelNodes.length:', thisLevelNodes, thisLevelNodes.length)
      this.analysisNodes4Didirectional(willLayoutNodes, newLevelNodes, thisDeep + levelDirect, analyticResult, levelDirect);
    } else {
      willLayoutNodes.forEach(thisNode => {
        if (thisNode.lot.childs_size > 0) {
          thisNode.lot.strengthWithChilds = 0;
        }
      });
      willLayoutNodes.forEach(thisNode => {
        if (thisNode.lot.childs_size === 0) {
          thisNode.lot.strengthWithChilds = 1;
          core4vue_SeeksGraphMath.conductStrengthToParents(thisNode);
        }
      });
      core4vue_SeeksGraphMath.analysisDataTree([willLayoutNodes[0]], 0, levelDirect);
      // willLayoutNodes.forEach(thisNode => {
      //   thisNode.text = thisNode.lot.strengthWithChilds_from + ':' + thisNode.lot.strengthWithChilds + '/' + thisNode.lot.strength
      // })
    }
  };
  this.placeNodes = function (allNodes, rootNode) {
    console.log('SeeksBidirectionalTreeLayouter:placeNodes');
    if (!rootNode) {
      console.error('root is null');
      return;
    } else {
      console.log('layout by root:', rootNode);
    }
    this.__origin_nodes = allNodes;
    this.rootNode = rootNode;
    allNodes.forEach(thisNode => {
      // thisNode.lot = { eached: false }
      thisNode.lot.eached = false;
      thisNode.lot.notLeafNode = false;
      thisNode.lot.childs = [];
      // thisNode.lot.parent = undefined
      thisNode.lot.index_of_parent = 0;
      thisNode.lot.strength = 0;
      thisNode.lot.strengthWithChilds_from = 0;
      thisNode.lot.strengthWithChilds = 0;
      thisNode.lot.prevNode = undefined;
      thisNode.lot.nextNode = undefined;
      thisNode.lot.placed = false;
    });
    // this.rootNode.fixed = true
    this.allNodes = [];
    var analyticResult = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    this.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, analyticResult, -1);
    this.placeNodesPosition(this.rootNode, this.allNodes, analyticResult);
    this.allNodes = [];
    analyticResult = {
      max_deep: 1,
      max_length: 1,
      max_strength: 1
    };
    this.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, analyticResult, 1);
    this.placeNodesPosition(this.rootNode, this.allNodes, analyticResult);

    // console.log('根据数据调整画板高度')
    // if (this.config.from === 'left' || this.config.from === 'right') {
    //   let __suitableHeight = analyticResult.max_strength * 50 + 100
    //   if (__suitableHeight < this.graphSetting.viewSize.height + 300)__suitableHeight = this.graphSetting.viewSize.height + 300
    //   this.graphSetting.canvasSize.height = __suitableHeight
    //   let __suitableWidth = analyticResult.max_deep * 1000 + 600
    //   if (__suitableWidth < this.graphSetting.viewSize.width + 500)__suitableWidth = this.graphSetting.viewSize.width + 500
    //   this.graphSetting.canvasSize.width = __suitableWidth
    // } else {
    //   let __suitableWidth = analyticResult.max_strength * 320 + 1000
    //   if (__suitableWidth < this.graphSetting.viewSize.width + 500)__suitableWidth = this.graphSetting.viewSize.width + 500
    //   this.graphSetting.canvasSize.width = __suitableWidth
    //   let __suitableHeight = analyticResult.max_deep * 400 + 200
    //   if (__suitableHeight < this.graphSetting.viewSize.height + 300)__suitableHeight = this.graphSetting.viewSize.height + 300
    //   this.graphSetting.canvasSize.height = __suitableHeight
    // }
    // if (this.graphSetting.heightByContent) {
    //   console.log('根据数据调整视窗高度')
    //   if (this.config.from === 'left' || this.config.from === 'right') {
    //     this.graphSetting.viewSize.height = this.graphSetting.canvasSize.height
    //   } else {
    //     this.graphSetting.viewSize.height = analyticResult.max_deep * 500 + 300
    //   }
    // }
    // this.graphSetting.canvasOffset.x = this.graphSetting.viewNVInfo.width / 2 - 100
    // this.graphSetting.canvasOffset.y = this.graphSetting.viewNVInfo.height / 2 - 100
  };
  this.placeNodesPosition = function (rootNode, allNodes, analyticResult) {
    var __mapWidth = this.graphSetting.viewSize.width;
    var __mapHeight = this.graphSetting.viewSize.height;
    // console.log('analysisNodes:', analyticResult, allNodes)
    // this.graphSetting.canvasOffset.x = 0
    // this.graphSetting.canvasOffset.y = 0
    var __offsetX = rootNode.offset_x || 0;
    var __offsetY = rootNode.offset_y || 0;
    // console.log('#############Seeks graph viewSize:Tree layout:', this.graphSetting.viewSize.width, this.graphSetting.viewSize.height)
    // console.log('[layout canvasOffset]', __mapHeight, this.graphSetting, this.graphSetting.canvasSize, this.config)
    // console.log('[Layout:AnalyticResult]', analyticResult)
    if (rootNode.fixed !== true) {
      var _center_offset_x = parseInt(this.config.centerOffset_x) || 0;
      var _center_offset_y = parseInt(this.config.centerOffset_y) || 0;
      if (this.config.from === 'top') {
        rootNode.lot.x = (__mapWidth - rootNode.el.offsetWidth) / 2 + _center_offset_x;
        rootNode.lot.y = parseInt(__mapHeight * 0.3 - rootNode.el.offsetHeight) + _center_offset_y;
      } else if (this.config.from === 'bottom') {
        rootNode.lot.x = (__mapWidth - rootNode.el.offsetWidth) / 2 + _center_offset_x;
        rootNode.lot.y = parseInt(__mapHeight * 0.7 - rootNode.el.offsetHeight) + _center_offset_y;
      } else if (this.config.from === 'right') {
        rootNode.lot.x = parseInt(__mapWidth * 0.7 - rootNode.el.offsetWidth) / 2 + _center_offset_x;
        rootNode.lot.y = parseInt(__mapHeight / 2 - rootNode.el.offsetHeight / 2) + _center_offset_y;
      } else {
        rootNode.lot.x = parseInt(__mapWidth * 0.3 - rootNode.el.offsetWidth) / 2 + _center_offset_x;
        rootNode.lot.y = parseInt(__mapHeight / 2 - rootNode.el.offsetHeight / 2) + _center_offset_y;
      }
      console.log('设置根节点位置:', rootNode.text, rootNode.x, rootNode.y, this.graphSetting.canvasSize.width, this.graphSetting.canvasSize.height, this.graphSetting.canvasOffset.x, this.graphSetting.canvasOffset.y);
      rootNode.x = rootNode.lot.x + __offsetX;
      rootNode.y = rootNode.lot.y + __offsetY;
    } else {
      console.log('固定位置的rootNode:', rootNode.text, rootNode.x, rootNode.y);
      if (rootNode.origin_x === undefined) {
        rootNode.origin_x = rootNode.x;
        rootNode.origin_y = rootNode.y;
      }
      rootNode.lot.x = rootNode.origin_x;
      rootNode.lot.y = rootNode.origin_y;
      rootNode.x = rootNode.lot.x + __offsetX;
      rootNode.y = rootNode.lot.y + __offsetY;
      console.log('固定位置的rootNode:', rootNode.text, rootNode.x, rootNode.y);
    }
    rootNode.lot.placed = true;
    var dynamicSizeConfig = {
      __mapWidth,
      __mapHeight
    };
    this.placeRelativePosition(rootNode, analyticResult, dynamicSizeConfig);
    allNodes.forEach(thisNode => {
      // if (rootNode === thisNode) {
      //   var _root_offset_x = this.config.root_offset_x || 0
      //   thisNode.x = thisNode.x + _root_offset_x
      //   return
      // }
      if (thisNode.fixed === true) {
        thisNode.lot.placed = true;
        return;
      }
      if (!core4vue_SeeksGraphMath.isAllowShowNode(thisNode)) return;
      // console.log(thisNode.text, thisNode.offset_x, thisNode.offset_y)
      var __offsetX = thisNode.offset_x || 0;
      var __offsetY = thisNode.offset_y || 0;
      thisNode.x = thisNode.offset_x + thisNode.lot.x + __offsetX;
      thisNode.y = thisNode.offset_y + thisNode.lot.y + __offsetY;
      thisNode.lot.placed = true;
    });
  };
  this.placeRelativePosition = function (rootNode, analyticResult, dynamicSizeConfig) {
    if (this.config.from === 'left' || this.config.from === 'right') {
      const __min_per_height = this.config.min_per_height || 80;
      const __max_per_height = this.config.max_per_height || 400;
      const __min_per_width = this.config.min_per_width || 430;
      const __max_per_width = this.config.max_per_width || 650;
      let __per_width = parseInt((dynamicSizeConfig.__mapWidth - 10) / (analyticResult.max_deep + 2));
      if (__per_width < __min_per_width) __per_width = __min_per_width;
      if (__per_width > __max_per_width) __per_width = __max_per_width;
      let __per_height = parseInt(dynamicSizeConfig.__mapHeight / (analyticResult.max_strength + 1));
      if (__per_height < __min_per_height) __per_height = __min_per_height;
      if (__per_height > __max_per_height) __per_height = __max_per_height;
      this.allNodes.forEach(thisNode => {
        if (thisNode.fixed === true) return;
        if (thisNode.lot.placed === true) return;
        if (thisNode === rootNode) return;
        // console.log('Place node:', thisNode.text, thisNode)
        // console.log('Place node lot:', thisNode.lot.subling.level, thisNode.lot.index_of_level, 'of', thisNode.lot.subling.all_size, thisNode.lot.subling.all_strength)
        if (this.config.from === 'right') {
          thisNode.lot.x = rootNode.lot.x - this.getLevelDistance(thisNode, thisNode.lot.subling.level, __per_width);
        } else {
          thisNode.lot.x = rootNode.lot.x + this.getLevelDistance(thisNode, thisNode.lot.subling.level, __per_width);
        }
      });
      this.allNodes.forEach(thisNode => {
        if (thisNode.fixed === true) return;
        if (thisNode.lot.level !== 0) {
          thisNode.lot.y = rootNode.lot.y + __per_height * (analyticResult.max_strength / -2 + thisNode.lot.strengthWithChilds_from + thisNode.lot.strengthWithChilds / 2);
        }
      });
      // this.allNodes.forEach(thisNode => {
      //   if (thisNode.fixed === true) return
      //   if (thisNode.lot.level === 1) {
      //     thisNode.lot.y = __per_height * (thisNode.lot.strength_plus - thisNode.lot.strength + (thisNode.lot.strength - 1) / 2)
      //   }
      // })
      // this.allNodes.forEach(thisNode => {
      //   if (thisNode.fixed === true) return
      //   if (thisNode.lot.level > 1) {
      //     // thisNode.lot.y = __per_height * (thisNode.lot.strength_plus - thisNode.lot.strength + (thisNode.lot.strength - 1) / 2)
      //     thisNode.lot.y = __per_height * (thisNode.lot.parent.lot.strength_plus - thisNode.lot.parent.lot.strength + thisNode.lot.index_of_parent)
      //     // thisNode.text = thisNode.lot.parent.lot.strength_plus + '-' + thisNode.lot.parent.lot.strength + '+' + thisNode.lot.index_of_parent
      //   }
      // })
    } else {
      const __min_per_height = this.config.min_per_height || 250;
      const __max_per_height = this.config.max_per_height || 400;
      const __min_per_width = this.config.min_per_width || 250;
      const __max_per_width = this.config.max_per_width || 500;
      var __per_width = parseInt((dynamicSizeConfig.__mapWidth - 10) / (analyticResult.max_strength + 2));
      if (__per_width < __min_per_width) __per_width = __min_per_width;
      if (__per_width > __max_per_width) __per_width = __max_per_width;
      var __per_height = parseInt((dynamicSizeConfig.__mapHeight - 10) / (analyticResult.max_deep + 2));
      if (__per_height < __min_per_height) __per_height = __min_per_height;
      if (__per_height > __max_per_height) __per_height = __max_per_height;
      this.allNodes.forEach(thisNode => {
        if (thisNode.fixed === true) return;
        if (thisNode.lot.placed === true) return;
        if (thisNode === rootNode) return;
        // console.log('Place node:', thisNode.text, thisNode)
        // console.log('Place node lot:', thisNode.lot.subling.level, thisNode.lot.index_of_level, 'of', thisNode.lot.subling.all_size, thisNode.lot.subling.all_strength)
        if (this.config.from === 'bottom') {
          thisNode.lot.y = rootNode.lot.y - this.getLevelDistance(thisNode, thisNode.lot.subling.level, __per_height);
        } else {
          // console.log('Place node xxxx:', rootNode.lot.y, thisNode.lot.subling.level, __per_height)
          thisNode.lot.y = rootNode.lot.y + this.getLevelDistance(thisNode, thisNode.lot.subling.level, __per_height);
        }
      });
      this.allNodes.forEach(thisNode => {
        if (thisNode.fixed === true) return;
        if (thisNode.lot.level !== 0) {
          // console.log('Place node xxxx:', thisNode.lot.strengthWithChilds_from, thisNode.lot.strengthWithChilds, __per_width)
          thisNode.lot.x = -58 + rootNode.lot.x + __per_width * (analyticResult.max_strength / -2 + thisNode.lot.strengthWithChilds_from + thisNode.lot.strengthWithChilds / 2);
          // thisNode.lot.x = rootNode.lot.x
        }
      });
      // this.allNodes.forEach(thisNode => {
      //   if (thisNode.fixed === true) return
      //   if (thisNode.lot.level === 1) {
      //     thisNode.lot.x = __per_width * (thisNode.lot.strength_plus - thisNode.lot.strength + thisNode.lot.strength / 2)
      //   }
      // })
      // this.allNodes.forEach(thisNode => {
      //   if (thisNode.fixed === true) return
      //   if (thisNode.lot.level > 1) {
      //     thisNode.lot.x = __per_width * (thisNode.lot.parent.lot.strength_plus - thisNode.lot.parent.lot.strength + thisNode.lot.index_of_parent)
      //   }
      // })
    }
  };
  this.getLevelDistance = function (node, level, perSize) {
    if (this.config.levelDistanceArr && this.config.levelDistanceArr.length > 0) {
      var _distance = 0;
      for (let i = 0; i < level; i++) {
        var _thisLevelDistance = this.config.levelDistanceArr[i] || 100;
        _distance += _thisLevelDistance;
      }
      return _distance;
    } else {
      return level * perSize;
    }
  };
}

/* harmony default export */ var layouters_SeeksBidirectionalTreeLayouter = (SeeksBidirectionalTreeLayouter);
// CONCATENATED MODULE: ./src/core4vue/layouters/SeeksCenterLayouter.js


function SeeksCenterLayouter(layoutSetting, graphSetting) {
  this.graphSetting = graphSetting;
  this.config = layoutSetting || {};
  this.rootNode = null;
  this.allNodes = [];
  this.__origin_nodes = [];
  this.refresh = function () {
    if (window.SeeksGraphDebug) console.log('SeeksCenterLayouter:refresh');
    this.placeNodes(this.__origin_nodes, this.rootNode);
  };
  this.placeNodes = function (allNodes, rootNode) {
    if (window.SeeksGraphDebug) console.log('SeeksCenterLayouter:placeNodes');
    if (!rootNode) {
      console.log('root is null:', rootNode);
      return;
    } else {
      if (window.SeeksGraphDebug) console.log('layout by root:', rootNode);
    }
    this.__origin_nodes = allNodes;
    this.rootNode = rootNode;
    allNodes.forEach(thisNode => {
      // thisNode.lot = { eached: false }
      thisNode.lot.eached = false;
      thisNode.lot.notLeafNode = false;
      thisNode.lot.childs = [];
      // thisNode.lot.parent = undefined
      thisNode.lot.index_of_parent = 0;
      thisNode.lot.strength = 0;
      thisNode.lot.prevNode = undefined;
      thisNode.lot.nextNode = undefined;
      thisNode.lot.placed = false;
    });
    this.allNodes = [];
    var analyticResult = {
      max_deep: 1,
      max_length: 1
    };
    core4vue_SeeksGraphMath.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, analyticResult, 0);
    // console.log('analysisNodes:', analyticResult)
    // if (this.graphSetting.heightByContent) {
    //   console.log('根据内容调整高度')
    //   var __suitableHeight = analyticResult.max_deep * 2 * 300 + 500
    //   this.graphSetting.viewSize.height = __suitableHeight
    // }
    if (window.SeeksGraphDebug) console.log('调整画布大小');
    // var __per_width = parseInt((__mapWidth - 10) / (analyticResult.max_deep + 2))
    // var __per_height = parseInt((__mapHeight - 10) / (analyticResult.max_length + 1))
    // console.log('per:', __per_width, __per_height)
    // var __level2_current_length = 0
    // this.allNodes.forEach(thisNode => {
    //   if (thisNode.lot.subling.level === 1 && thisNode.lot.childs_size > 0) {
    //     __level2_current_length += thisNode.lot.childs_size
    //     var __thisNodeLength = __level2_current_length + parseInt((thisNode.lot.childs_size / 2).toFixed(0))
    //     thisNode.lot.strength_plus = __level2_current_length
    //     console.log('level2 parents:', thisNode.name, thisNode.lot.childs_size, { strength_plus: thisNode.lot.strength_plus, __thisNodeLength, strength: thisNode.lot.childs_size, __level2_current_length })
    //   }
    // })
    // var __currentLevel = 0
    var __mapWidth = this.graphSetting.viewSize.width;
    var __mapHeight = this.graphSetting.viewSize.height;
    rootNode.lot.x = parseInt((__mapWidth - rootNode.el.offsetWidth) / 2);
    rootNode.lot.y = parseInt((__mapHeight - rootNode.el.offsetHeight) / 2);
    // this.rootNode.lot.x = 0
    // this.rootNode.lot.y = 0
    // if (this.rootNode.lot.y > 400) {
    //   this.rootNode.lot.y = 400
    // }
    // console.log('[layout canvasOffset]', this.graphSetting.viewSize, this.graphSetting.canvasSize)
    this.placeRelativePosition(this.rootNode, analyticResult);
    this.allNodes.forEach(thisNode => {
      if (thisNode.fixed === true) return;
      if (!core4vue_SeeksGraphMath.isAllowShowNode(thisNode)) return;
      var __offsetX = thisNode.offset_x || 0;
      var __offsetY = thisNode.offset_y || 0;
      thisNode.x = thisNode.lot.x + __offsetX;
      thisNode.y = thisNode.lot.y + __offsetY;
      thisNode.lot.placed = true;
    });
    // var __graphIndex = 1
    // allNodes.forEach(thisNode => {
    //   // thisNode.lot = { eached: false }
    //   if (!SeeksGraphMath.isAllowShowNode(thisNode)) return
    //   if (thisNode.lot.placed === false) {
    //     this.allNodes = []
    //     var analyticResult = {
    //       max_deep: 1,
    //       max_length: 1
    //     }
    //     SeeksGraphMath.analysisNodes(this.allNodes, [thisNode], 0, analyticResult, { prettyLevelPosition: this.graphSetting.prettyLevelPosition })
    //     thisNode.lot.x = this.rootNode.lot.x
    //     thisNode.lot.y = this.rootNode.lot.y + (__graphIndex++ * 1200)
    //     this.graphSetting.canvasSize.height += 1200
    //     this.placeRelativePosition(thisNode)
    //     this.allNodes.forEach(thisNode => {
    //       thisNode.x = thisNode.lot.x - __offsetX
    //       thisNode.y = thisNode.lot.y - __offsetY
    //       thisNode.lot.placed = true
    //     })
    //   }
    // })
    console.log('Start Auto Layout.....');
    // this.autoLayout(true)
    // console.log('layout from root:', analyticResult.max_deep, analyticResult.max_length)
    // rootNode.x = (this.graphSetting.canvasSize.width - this.graphSetting.nodeSize.width) / 2
    // rootNode.y = (this.graphSetting.canvasSize.height - this.graphSetting.nodeSize.height) / 2
    // rootNode.placed = true
    // // rootNode.name = rootNode.x + ',' + rootNode.y
    // var newLevelNodes = []
    // newLevelNodes.push(rootNode)
    // this.setPlace(newLevelNodes, 0, rootNode)
  };
  this.placeRelativePosition = function (rootNode, analyticResult) {
    var distance_coefficient = this.config.distance_coefficient === undefined ? 1 : this.config.distance_coefficient;
    var __leve1_min_r = parseInt((this.graphSetting.viewSize.height + this.graphSetting.viewSize.width) / analyticResult.max_deep * 0.2) * distance_coefficient;
    if (window.SeeksGraphDebug) console.log('analyticResult:', analyticResult, __leve1_min_r, this.config.distance_coefficient);
    if (__leve1_min_r < 150 * distance_coefficient) __leve1_min_r = 150 * distance_coefficient;
    var __level1_r = 0;
    this.allNodes.forEach(thisNode => {
      if (thisNode.lot.subling.level === 1) {
        __level1_r = parseInt(thisNode.lot.subling.all_size * 50 / Math.PI / 2);
        if (__level1_r < __leve1_min_r) __level1_r = __leve1_min_r;
        // if (__level1_r > 500)__level1_r = 500
        const _point = core4vue_SeeksGraphMath.getOvalPoint(rootNode.lot.x, rootNode.lot.y, thisNode.lot.subling.level * __level1_r, thisNode.lot.strength_plus - thisNode.lot.strength / 2, thisNode.lot.subling.all_strength);
        // const _point = SeeksGraphMath.getOvalPoint(this.rootNode.x, this.rootNode.y, thisNode.lot.subling.level * __level1_r, thisNode.lot.index_of_level, thisNode.lot.subling.all_size)
        thisNode.lot.x = _point.x;
        thisNode.lot.y = _point.y;
      }
    });
    var __level_r = parseInt(300 * distance_coefficient);
    this.allNodes.forEach(thisNode => {
      if (thisNode.lot.subling.level > 1) {
        var __area_start = thisNode.lot.parent.lot.strength_plus - thisNode.lot.parent.lot.strength;
        var __area_end = thisNode.lot.parent.lot.strength_plus;
        var __buff = (__area_end - __area_start) / (thisNode.lot.parent.lot.childs_size + 1) * (thisNode.lot.index_of_parent + 1);
        const _point = core4vue_SeeksGraphMath.getOvalPoint(rootNode.lot.x, rootNode.lot.y, (thisNode.lot.subling.level - 1) * __level_r + __level1_r, __area_start + __buff, thisNode.lot.parent.lot.subling.all_strength);
        thisNode.lot.x = _point.x;
        thisNode.lot.y = _point.y;
      }
    });
  };
  this.layoutTimes = 0;
  // var ___this = this
  this.autoLayout = function (forceLayout) {
    if (forceLayout) {
      this.layoutTimes = 0;
    }
    console.log('this.layoutTimes:', this.layoutTimes);
    if (this.layoutTimes > 300) {
      this.graphSetting.autoLayouting = false;
      return;
    }
    this.layoutTimes++;
    this.__origin_nodes.forEach(thisNode => {
      thisNode.Fx = 0;
      thisNode.Fy = 0;
    });
    var __by_node = true; // parseInt(this.layoutTimes / 10) % 2 === 1
    var __by_line = true; // parseInt(this.layoutTimes / 10) % 2 === 0
    if (__by_node) {
      for (const i in this.__origin_nodes) {
        var __node1 = this.__origin_nodes[i];
        // if (__node1.text === '宣洁')console.log('宣洁:', __node1.x, __node1.y)
        if (__node1.lot.placed === true) {
          // var __thisNode = this.__origin_nodes[i]
          // __thisNode.targetNodes.forEach(thisTN_level1 => {
          //   this.addGravityByNode(__thisNode, thisTN_level1)
          //   thisTN_level1.targetNodes.forEach(thisTN_level2 => {
          //     this.addGravityByNode(__thisNode, thisTN_level2)
          //   })
          // })
          // 循环点，综合点与其他所有点点斥力及方向
          for (var j in this.__origin_nodes) {
            var __node2 = this.__origin_nodes[j];
            if (__node2.lot.placed === true) {
              // 循环点，计算i点与j点点斥力及方向
              if (i !== j) {
                // if (this.allNodes[i].lot.level === this.allNodes[j].lot.level) {
                this.addGravityByNode(__node1, __node2);
                // }
              }
            }
          }
        }
      }
    }
    if (__by_line) {
      for (const i in this.__origin_nodes) {
        // 循环线,设置每个点承受点力及力点方向
        if (this.__origin_nodes[i].lot.parent) {
          this.addElasticByLine(this.__origin_nodes[i].lot.parent, this.__origin_nodes[i]);
          // break
        }
      }
    }
    // if (this.layoutTimes % 5 === 0) { // 为提高布局效率，计算五次后更新位置
    for (const i in this.__origin_nodes) {
      this.applyToNodePosition(this.__origin_nodes[i]);
    }
    // }
    window.setTimeout(function () {
      this.autoLayout();
    }.bind(this), 30);
  };
  this.stop = function () {
    this.layoutTimes = 1000;
  };
  this.addElasticByLine = function (node1, node2) {
    var length = Math.sqrt(Math.pow(node1.y - node2.y, 2) + Math.pow(node1.x - node2.x, 2));
    if (length > 1000) {
      length = 1000;
    }
    var Kf = length < 30 ? 0 : (length - 30) * 0.05;
    var Kf_1 = Kf;
    var Kf_2 = Kf;
    // var Kf_1 = Kf / node1.lot.childs.length
    // var Kf_2 = Kf / node2.lot.childs.length
    var _buff_x = (node1.x - node2.x) / length;
    var _buff_y = (node1.y - node2.y) / length;
    this.addFtoNode(node1, _buff_x * Kf_1 * -1, _buff_y * Kf_1 * -1, 1);
    this.addFtoNode(node2, _buff_x * Kf_2, _buff_y * Kf_2, 1);
  };
  this.addGravityByNode = function (node1, node2) {
    var length = Math.sqrt(Math.pow(node1.y - node2.y, 2) + Math.pow(node1.x - node2.x, 2));
    var zero_length = 300;
    var Kf = length > zero_length ? 0 : (zero_length - length) * 0.03;
    if (zero_length < 30) {
      Kf = Kf * 100;
    }
    // if (length < 100)Kf = Kf * 2
    var _buff_x = (node1.x - node2.x) / length;
    var _buff_y = (node1.y - node2.y) / length;
    // if (_buff_x < 30)_buff_x = 1
    // if (_buff_y < 30)_buff_y = 1
    // console.log({ Kf, _buff_x, _buff_y, zero_length })
    this.addFtoNode(node1, _buff_x * Kf, _buff_y * Kf, 0);
    this.addFtoNode(node2, _buff_x * Kf * -1, _buff_y * Kf * -1, 0);
  };
  this.getNodeFWeight = function (node) {
    var level = node.lot.level;
    if (level > 7) level = 7;
    if (level < 0) level = 0;
    return (8 - level) / 8;
  };
  this.addFtoNode = function (node, x, y) {
    // console.log('Add F:', node.text, type, parseInt(x), parseInt(y))
    if (isNaN(x) || isNaN(y)) {
      return;
    }
    x = x / node.lot.strength;
    y = y / node.lot.strength;
    if (x > 50) x = 50;
    if (y > 50) y = 50;
    if (x < -50) x = -50;
    if (y < -50) y = -50;
    // if (isNaN(node.Fx)) {
    //   if (node.text === '宣洁')console.log('宣洁!!!NaN B buff x:', x, node.lot.strength, node)
    // }
    node.Fx += x;
    node.Fy += y;
    // if (isNaN(node.Fx)) {
    //   if (node.text === '宣洁')console.log('宣洁!!!NaN A buff x:', x, node.lot.strength, node)
    // }
  };
  this.applyToNodePosition = function (node) {
    // if (!node.lot.childs || node.lot.childs.length === 0) {
    //   return
    // }
    // if (node.lot.level === 0) {
    //   return
    // }
    // console.log('F add:', node.name, node.Fx, node.Fy)
    const __buff_x = parseInt(node.Fx);
    const __buff_y = parseInt(node.Fy);
    // console.log('F add:2:', node.name, __buff_x, __buff_y)
    node.x = node.x + __buff_x;
    node.y = node.y + __buff_y;
    // if (isNaN(node.x)) {
    //   if (node.text === '宣洁')console.log('!!!NaN x:', node.text, __buff_x, node.Fx, node)
    // }
    // node.name = __buff_x + ',' + __buff_y
    // if (node.id === '8') {
    //   console.log(node.id, __buff_x, __buff_y)
    // // console.log(node.x, node.y)
    // }
    node.Fx = 0;
    node.Fy = 0;
  };
}

/* harmony default export */ var layouters_SeeksCenterLayouter = (SeeksCenterLayouter);
// CONCATENATED MODULE: ./src/core4vue/layouters/SeeksCircleLayouter.js


function SeeksCircleLayouter_SeeksCenterLayouter(layoutSetting, setting) {
  this.setting = setting;
  this.config = layoutSetting || {};
  this.__max_deep = 1;
  this.__max_length = 1;
  this.checkMaxDeepAndLength = function (thisLevelNodes, thisDeep) {
    if (thisLevelNodes.length > this.__max_length) {
      this.__max_length = thisLevelNodes.length;
    }
    if (thisDeep > this.__max_deep) {
      this.__max_deep = thisDeep;
    }
    var __thisLOT_subling = {
      level: thisDeep,
      all_size: thisLevelNodes.length,
      all_strength: 0
    };
    var newLevelNodes = [];
    thisLevelNodes.forEach(thisNode => {
      if (!thisNode.lot) thisNode.lot = {};
      thisNode.lot.eached = true;
      thisNode.lot.subling = __thisLOT_subling;
      this.allNodes.push(thisNode);
    });
    var __thisLevel_index = 0;
    var __prev_node;
    thisLevelNodes.forEach(thisNode => {
      // console.log('Build node::', thisNode.name, thisNode.targetNodes.length)
      var __thisNode_child_size = 0;
      if (thisNode.targetNodes) {
        thisNode.targetNodes.forEach(thisTarget => {
          console.log('child node::', thisTarget.type, thisTarget.lot.eached);
          if (!thisTarget.lot) thisTarget.lot = { eached: false };
          if (thisTarget.type === 'node' && thisTarget.targetNodes.length <= 1) {
            if (!thisTarget.lot.eached) {
              thisTarget.lot.parent = thisNode;
              thisTarget.lot.index_of_p_childs = __thisNode_child_size;
              thisTarget.lot.prevNode = __prev_node;
              if (__prev_node) __prev_node.lot.nextNode = thisTarget;
              __prev_node = thisTarget;
              thisNode.lot.childs.push(thisTarget);
              thisNode.lot.eached = true;
              newLevelNodes.push(thisTarget);
              __thisNode_child_size++;
            }
          } else {
            thisTarget.lot.notLeafNode = true;
          }
        });
        thisNode.targetNodes.forEach(thisTarget => {
          if (thisTarget.lot.notLeafNode) {
            if (!thisTarget.lot) thisTarget.lot = { eached: false };
            if (!thisTarget.lot.eached) {
              thisTarget.lot.parent = thisNode;
              thisTarget.lot.index_of_p_childs = __thisNode_child_size;
              thisTarget.lot.prevNode = __prev_node;
              if (__prev_node) __prev_node.lot.nextNode = thisTarget;
              __prev_node = thisTarget;
              thisNode.lot.childs.push(thisTarget);
              thisNode.lot.eached = true;
              newLevelNodes.push(thisTarget);
              __thisNode_child_size++;
            }
          }
        });
      }
      thisNode.lot.strength = __thisNode_child_size > 0 ? __thisNode_child_size : 1;
      __thisLOT_subling.all_strength += thisNode.lot.strength;
      thisNode.lot.strength_plus = __thisLOT_subling.all_strength;
      thisNode.lot.level_index = __thisLevel_index;
      thisNode.lot.childs_size = __thisNode_child_size;
      __thisLevel_index++;
    });
    // console.log('next level nodes:', newLevelNodes.length)
    if (newLevelNodes.length > 0) {
      // console.log('thisLevelNodes.length:', thisLevelNodes, thisLevelNodes.length)
      this.checkMaxDeepAndLength(newLevelNodes, thisDeep + 1);
    }
  };
  this.rootNode = null;
  this.allNodes = [];
  this.__origin_nodes = [];
  this.refresh = function () {
    this.placeNodes(this.__origin_nodes, this.rootNode);
  };
  this.placeNodes = function (allNodes, rootNode) {
    if (!rootNode) {
      console.log('root is null:', rootNode);
      return;
    } else {
      console.log('layout by root:', rootNode);
    }
    this.__origin_nodes = allNodes;
    this.rootNode = rootNode;
    allNodes.forEach(thisNode => {
      // thisNode.lot = { eached: false }
      thisNode.lot.eached = false;
      thisNode.lot.notLeafNode = false;
      thisNode.lot.childs = [];
      thisNode.lot.parent = undefined;
      thisNode.lot.index_of_p_childs = 0;
      thisNode.lot.strength = 0;
      thisNode.lot.prevNode = undefined;
      thisNode.lot.nextNode = undefined;
    });
    this.allNodes = [];
    console.log('max before:', this.__max_deep, this.__max_length);
    this.checkMaxDeepAndLength([this.rootNode], 0);
    console.log('max after:', this.__max_deep, this.__max_length);
    // if (this.setting.heightByContent) {
    //   console.log('根据内容调整高度')
    //   var __suitableHeight = this.__max_length * 40 + 100
    //   if (__suitableHeight > this.setting.viewSize.height) {
    //     this.setting.viewSize.height = __suitableHeight
    //   }
    //   if (setting.viewSize.height > this.setting.canvasSize.height / 2) {
    //     this.setting.canvasSize.height = this.setting.viewSize.height * 2
    //   }
    // }
    this.setting.canvasSize.width = 4000;
    this.setting.canvasSize.height = 4000;
    if (this.setting.heightByContent) {
      console.log('根据数据调整视窗高度');
      this.setting.viewSize.height = 1600;
    }
    this.setting.resetViewSize(this.setting);
    var __mapWidth = this.setting.viewSize.width;
    var __mapHeight = this.setting.viewSize.height;
    var __offsetX = this.setting.canvasOffset.x;
    var __offsetY = this.setting.canvasOffset.y;
    // var __per_width = parseInt((__mapWidth - 10) / (this.__max_deep + 2))
    // var __per_height = parseInt((__mapHeight - 10) / (this.__max_length + 1))
    // console.log('per:', __per_width, __per_height)
    // var __level2_current_length = 0
    // this.allNodes.forEach(thisNode => {
    //   if (thisNode.lot.subling.level === 1 && thisNode.lot.childs_size > 0) {
    //     __level2_current_length += thisNode.lot.childs_size
    //     var __thisNodeLength = __level2_current_length + parseInt((thisNode.lot.childs_size / 2).toFixed(0))
    //     thisNode.lot.strength_plus = __level2_current_length
    //     console.log('level2 parents:', thisNode.name, thisNode.lot.childs_size, { strength_plus: thisNode.lot.strength_plus, __thisNodeLength, strength: thisNode.lot.childs_size, __level2_current_length })
    //   }
    // })
    // var __currentLevel = 0
    var __center = {
      x: __mapWidth / 2 - __offsetX,
      y: __mapHeight / 2 - __offsetY
    };
    if (__center.y > 800 - __offsetY) {
      __center.y = 800 - __offsetY;
    }
    var __all_size = this.allNodes.length;
    var __circle_r = __all_size * 90 / Math.PI / 2;
    if (__circle_r < 200) __circle_r = 200;
    if (__circle_r > 800) __circle_r = 800;
    this.allNodes.forEach((thisNode, _index) => {
      const _point = core4vue_SeeksGraphMath.getOvalPoint(__center.x, __center.y, __circle_r, _index, __all_size);
      thisNode.x = _point.x;
      thisNode.y = _point.y;
      // console.log('Place node:', thisNode.name, thisNode.x, thisNode.y)
      // thisNode.name = (thisNode.lp_level_index + 1) + '/' + subling_size
    });
    // this.allNodes.forEach(thisNode => {
    //   if (thisNode.lot.subling.level === 1 && thisNode.lot.childs_size > 0) {
    //     var _c_first = thisNode.lot.childs[0]
    //     var _c_last = thisNode.lot.childs[thisNode.lot.childs.length - 1]
    //     var _new_y = parseInt((_c_first.y + _c_last.y) / 2)
    //     thisNode.y = _new_y
    //   }
    // })
    // this.adjustLevel2Y(__mapHeight)
    console.log('Start Auto Layout.....');
    // this.autoLayout(true)
    // console.log('layout from root:', this.__max_deep, this.__max_length)
    // rootNode.x = (this.setting.canvasSize.width - this.setting.nodeSize.width) / 2
    // rootNode.y = (this.setting.canvasSize.height - this.setting.nodeSize.height) / 2
    // rootNode.placed = true
    // // rootNode.name = rootNode.x + ',' + rootNode.y
    // var newLevelNodes = []
    // newLevelNodes.push(rootNode)
    // this.setPlace(newLevelNodes, 0, rootNode)
  };
  this.adjustLevel2Y = function (__mapHeight) {
    for (let i = 0; i < this.allNodes.length; i++) {
      var thisNode = this.allNodes[i];
      if (thisNode.lot.subling.level === 1 && thisNode.lot.childs_size === 0) {
        var __per_height = parseInt(__mapHeight / (thisNode.lot.subling.all_size + 1));
        if (__per_height > 70) __per_height = 70;
        console.log(__per_height, __mapHeight, thisNode.lot.subling.all_size, thisNode.lot.subling.all_strength, thisNode.lot.strength);
        for (let j = 0; j < this.allNodes.length; j++) {
          var thisLevel2Node = this.allNodes[j];
          if (thisLevel2Node.lot.subling.level === 1 && thisLevel2Node !== thisNode) {
            var __y_diff = Math.abs(thisNode.y - thisLevel2Node.y);
            if (__y_diff < __per_height - 2) {
              console.log('__y_diff', thisNode.name, thisLevel2Node.name, __y_diff);
              // if (thisLevel2Node.lot.childs_size > 0 && i > 0) {
              //   thisLevel2Node.y = this.allNodes[i - 1].y + __per_height
              // }
              thisNode.y = thisLevel2Node.y + __per_height;
              i--;
              break;
            }
          }
        }
      }
    }
  };
  this.layoutTimes = 0;
  // var ___this = this
  this.autoLayout = function (forceLayout) {
    if (forceLayout) {
      this.layoutTimes = 0;
    }
    console.log('this.layoutTimes:', this.layoutTimes);
    if (this.layoutTimes > 300) {
      setting.autoLayouting = false;
      return;
    }
    this.layoutTimes++;
    this.allNodes.forEach(thisNode => {
      thisNode.Fx = 0;
      thisNode.Fy = 0;
    });
    var __by_node = true; // parseInt(this.layoutTimes / 10) % 2 === 1
    var __by_line = true; // parseInt(this.layoutTimes / 10) % 2 === 0
    if (__by_node) {
      for (const i in this.allNodes) {
        // 循环点，综合点与其他所有点点斥力及方向
        for (var j in this.allNodes) {
          // 循环点，计算i点与j点点斥力及方向
          if (i !== j) {
            // if (this.allNodes[i].lot.subling.level === this.allNodes[j].lot.subling.level) {
            this.addGravityByNode(this.allNodes[i], this.allNodes[j]);
            // }
          }
        }
      }
    }
    if (__by_line) {
      for (const i in this.allNodes) {
        // 循环线,设置每个点承受点力及力点方向
        if (this.allNodes[i].lot.parent) {
          this.addElasticByLine(this.allNodes[i].lot.parent, this.allNodes[i]);
          // break
        }
      }
    }
    // if (this.layoutTimes % 1 === 0) { // 为提高布局效率，计算五次后更新位置
    for (const i in this.allNodes) {
      this.applyToNodePosition(this.allNodes[i]);
    }
    // }
    window.setTimeout(function () {
      this.autoLayout();
    }.bind(this), 30);
  };
  this.stop = function () {
    this.layoutTimes = 1000;
  };
  this.addElasticByLine = function (n1, n2) {
    var length = Math.sqrt(Math.pow(n1.y - n2.y, 2) + Math.pow(n1.x - n2.x, 2));
    var Kf = length < 30 ? 0 : (length - 30) * 0.01;
    this.addFtoNode(n1, (n1.x - n2.x) * Kf * -1, (n1.y - n2.y) * Kf * -1);
    this.addFtoNode(n2, (n2.x - n1.x) * Kf * -1, (n2.y - n1.y) * Kf * -1);
  };
  this.addGravityByNode = function (node1, node2) {
    var length = Math.sqrt(Math.pow(node1.y - node2.y, 2) + Math.pow(node1.x - node2.x, 2));
    var Kf = length > 300 ? 0 : (300 - length) * 0.02;
    // if (length < 100)Kf = Kf * 2
    var _buff_x = node1.x - node2.x;
    var _buff_y = node1.y - node2.y;
    if (_buff_x === 0) _buff_x = 1;
    if (_buff_y === 0) _buff_y = 1;
    this.addFtoNode(node1, _buff_x * Kf, _buff_y * Kf);
    this.addFtoNode(node2, _buff_x * -1 * Kf, _buff_y * -1 * Kf);
  };
  this.addFtoNode = function (node, x, y) {
    node.Fx += x;
    node.Fy += y;
  };
  this.applyToNodePosition = function (node) {
    // if (!node.lot.childs || node.lot.childs.length === 0) {
    //   return
    // }
    if (this.rootNode === node) {
      return;
    }
    // console.log('F add:', node.name, node.Fx, node.Fy)
    if (node.Fx > 1000) node.Fx = 3000;
    if (node.Fy > 1000) node.Fy = 3000;
    if (node.Fx < -1000) node.Fx = -3000;
    if (node.Fy < -1000) node.Fy = -3000;
    const __buff_x = parseInt(node.Fx * 0.02);
    const __buff_y = parseInt(node.Fy * 0.02);
    // console.log('F add:2:', node.name, __buff_x, __buff_y)
    node.x = node.x + __buff_x;
    node.y = node.y + __buff_y;
    // node.name = __buff_x + ',' + __buff_y
    // if (node.id === '8') {
    //   console.log(node.id, __buff_x, __buff_y)
    // // console.log(node.x, node.y)
    // }
    node.Fx = 0;
    node.Fy = 0;
  };
}

/* harmony default export */ var SeeksCircleLayouter = (SeeksCircleLayouter_SeeksCenterLayouter);
// CONCATENATED MODULE: ./src/core4vue/layouters/SeeksAutoLayouter.js


function SeeksAutoLayouter(layoutSetting, graphSetting) {
  this.graphSetting = graphSetting;
  this.config = layoutSetting || {};
  this.rootNode = null;
  this.allNodes = [];
  this.__origin_nodes = [];
  this.refresh = function () {
    this.placeNodes(this.__origin_nodes, this.rootNode);
  };
  this.placeNodes = function (allNodes, rootNode) {
    if (!rootNode) {
      console.log('root is null:', rootNode);
      return;
    } else {
      if (window.SeeksGraphDebug) console.log('layout by root:', rootNode);
    }
    this.__origin_nodes = allNodes;
    this.rootNode = rootNode;
    allNodes.forEach(thisNode => {
      // thisNode.lot = { eached: false }
      thisNode.lot.eached = false;
      thisNode.lot.notLeafNode = false;
      thisNode.lot.childs = [];
      // thisNode.lot.parent = undefined
      thisNode.lot.index_of_parent = 0;
      thisNode.lot.strength = 0;
      thisNode.lot.prevNode = undefined;
      thisNode.lot.nextNode = undefined;
      thisNode.lot.placed = false;
    });
    this.allNodes = [];
    var analyticResult = {
      max_deep: 1,
      max_length: 1
    };
    core4vue_SeeksGraphMath.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, analyticResult, 0);
    // console.log('analysisNodes:', analyticResult)
    // if (this.graphSetting.heightByContent) {
    //   console.log('根据内容调整高度')
    //   var __suitableHeight = analyticResult.max_deep * 2 * 300 + 500
    //   this.graphSetting.viewSize.height = __suitableHeight
    // }
    if (window.SeeksGraphDebug) console.log('调整画布大小');
    // var __per_width = parseInt((__mapWidth - 10) / (analyticResult.max_deep + 2))
    // var __per_height = parseInt((__mapHeight - 10) / (analyticResult.max_length + 1))
    // console.log('per:', __per_width, __per_height)
    // var __level2_current_length = 0
    // this.allNodes.forEach(thisNode => {
    //   if (thisNode.lot.subling.level === 1 && thisNode.lot.childs_size > 0) {
    //     __level2_current_length += thisNode.lot.childs_size
    //     var __thisNodeLength = __level2_current_length + parseInt((thisNode.lot.childs_size / 2).toFixed(0))
    //     thisNode.lot.strength_plus = __level2_current_length
    //     console.log('level2 parents:', thisNode.name, thisNode.lot.childs_size, { strength_plus: thisNode.lot.strength_plus, __thisNodeLength, strength: thisNode.lot.childs_size, __level2_current_length })
    //   }
    // })
    // var __currentLevel = 0
    var __mapWidth = this.graphSetting.viewSize.width;
    var __mapHeight = this.graphSetting.viewSize.height;
    rootNode.lot.x = parseInt((__mapWidth - rootNode.el.offsetWidth) / 2);
    rootNode.lot.y = parseInt((__mapHeight - rootNode.el.offsetHeight) / 2);
    // this.rootNode.lot.x = 0
    // this.rootNode.lot.y = 0
    // if (this.rootNode.lot.y > 400) {
    //   this.rootNode.lot.y = 400
    // }
    if (window.SeeksGraphDebug) console.log('[layout canvasOffset]', this.graphSetting.viewSize, this.graphSetting.canvasSize);
    this.placeRelativePosition(this.rootNode);
    this.allNodes.forEach(thisNode => {
      if (thisNode.fixed === true) return;
      if (!core4vue_SeeksGraphMath.isAllowShowNode(thisNode)) return;
      thisNode.x = thisNode.lot.x;
      thisNode.y = thisNode.lot.y;
      thisNode.lot.placed = true;
    });
    // var __graphIndex = 1
    // allNodes.forEach(thisNode => {
    //   // thisNode.lot = { eached: false }
    //   if (!SeeksGraphMath.isAllowShowNode(thisNode)) return
    //   if (thisNode.lot.placed === false) {
    //     this.allNodes = []
    //     var analyticResult = {
    //       max_deep: 1,
    //       max_length: 1
    //     }
    //     SeeksGraphMath.analysisNodes(this.allNodes, [thisNode], 0, analyticResult, { prettyLevelPosition: this.graphSetting.prettyLevelPosition })
    //     thisNode.lot.x = this.rootNode.lot.x
    //     thisNode.lot.y = this.rootNode.lot.y + (__graphIndex++ * 1200)
    //     this.graphSetting.canvasSize.height += 1200
    //     this.placeRelativePosition(thisNode)
    //     this.allNodes.forEach(thisNode => {
    //       thisNode.x = thisNode.lot.x - __offsetX
    //       thisNode.y = thisNode.lot.y - __offsetY
    //       thisNode.lot.placed = true
    //     })
    //   }
    // })
    if (window.SeeksGraphDebug) console.log('Start Auto Layout.....');
    this.autoLayout(true);
    // console.log('layout from root:', analyticResult.max_deep, analyticResult.max_length)
    // rootNode.x = (this.graphSetting.canvasSize.width - this.graphSetting.nodeSize.width) / 2
    // rootNode.y = (this.graphSetting.canvasSize.height - this.graphSetting.nodeSize.height) / 2
    // rootNode.placed = true
    // // rootNode.name = rootNode.x + ',' + rootNode.y
    // var newLevelNodes = []
    // newLevelNodes.push(rootNode)
    // this.setPlace(newLevelNodes, 0, rootNode)
  };
  this.placeRelativePosition = function (rootNode) {
    var __level1_r = 80;
    this.allNodes.forEach(thisNode => {
      if (thisNode.lot.subling.level === 1) {
        __level1_r = thisNode.lot.subling.all_size * 20 / Math.PI / 2;
        if (__level1_r < 80) __level1_r = 80;
        // if (__level1_r > 500)__level1_r = 500
        const _point = core4vue_SeeksGraphMath.getOvalPoint(rootNode.lot.x, rootNode.lot.y, thisNode.lot.subling.level * __level1_r, thisNode.lot.strength_plus - thisNode.lot.strength / 2, thisNode.lot.subling.all_strength);
        // const _point = SeeksGraphMath.getOvalPoint(this.rootNode.x, this.rootNode.y, thisNode.lot.subling.level * __level1_r, thisNode.lot.index_of_level, thisNode.lot.subling.all_size)
        thisNode.lot.x = _point.x;
        thisNode.lot.y = _point.y;
      }
    });
    this.allNodes.forEach(thisNode => {
      if (thisNode.lot.subling.level > 1) {
        var __area_start = thisNode.lot.parent.lot.strength_plus - thisNode.lot.parent.lot.strength;
        var __area_end = thisNode.lot.parent.lot.strength_plus;
        var __buff = (__area_end - __area_start) / (thisNode.lot.parent.lot.childs_size + 1) * (thisNode.lot.index_of_parent + 1);
        const _point = core4vue_SeeksGraphMath.getOvalPoint(rootNode.lot.x, rootNode.lot.y, (thisNode.lot.subling.level - 1) * 80 + __level1_r, __area_start + __buff, thisNode.lot.parent.lot.subling.all_strength);
        thisNode.lot.x = _point.x;
        thisNode.lot.y = _point.y;
      }
    });
  };
  this.layoutTimes = 0;
  // var ___this = this
  this.autoLayout = function (forceLayout) {
    if (forceLayout) {
      this.layoutTimes = 0;
    }
    if (window.SeeksGraphDebug) console.log('this.layoutTimes:', this.layoutTimes);
    if (this.layoutTimes > 300) {
      this.graphSetting.autoLayouting = false;
      return;
    }
    this.layoutTimes++;
    this.__origin_nodes.forEach(thisNode => {
      thisNode.Fx = 0;
      thisNode.Fy = 0;
    });
    var __by_node = true; // parseInt(this.layoutTimes / 10) % 2 === 1
    var __by_line = true; // parseInt(this.layoutTimes / 10) % 2 === 0
    if (__by_node) {
      for (const i in this.__origin_nodes) {
        var __node1 = this.__origin_nodes[i];
        // if (__node1.text === '宣洁')console.log('宣洁:', __node1.x, __node1.y)
        if (__node1.lot.placed === true) {
          // var __thisNode = this.__origin_nodes[i]
          // __thisNode.targetNodes.forEach(thisTN_level1 => {
          //   this.addGravityByNode(__thisNode, thisTN_level1)
          //   thisTN_level1.targetNodes.forEach(thisTN_level2 => {
          //     this.addGravityByNode(__thisNode, thisTN_level2)
          //   })
          // })
          // 循环点，综合点与其他所有点点斥力及方向
          for (var j in this.__origin_nodes) {
            var __node2 = this.__origin_nodes[j];
            if (__node2.lot.placed === true) {
              // 循环点，计算i点与j点点斥力及方向
              if (i !== j) {
                // if (this.allNodes[i].lot.level === this.allNodes[j].lot.level) {
                this.addGravityByNode(__node1, __node2);
                // }
              }
            }
          }
        }
      }
    }
    if (__by_line) {
      for (const i in this.__origin_nodes) {
        // 循环线,设置每个点承受点力及力点方向
        if (this.__origin_nodes[i].lot.parent) {
          this.addElasticByLine(this.__origin_nodes[i].lot.parent, this.__origin_nodes[i]);
          // break
        }
      }
    }
    // if (this.layoutTimes % 5 === 0) { // 为提高布局效率，计算五次后更新位置
    for (const i in this.__origin_nodes) {
      this.applyToNodePosition(this.__origin_nodes[i]);
    }
    // }
    window.setTimeout(function () {
      this.autoLayout();
    }.bind(this), 30);
  };
  this.stop = function () {
    this.layoutTimes = 1000;
  };
  this.addElasticByLine = function (node1, node2) {
    var length = Math.sqrt(Math.pow(node1.y - node2.y, 2) + Math.pow(node1.x - node2.x, 2));
    if (length > 1000) {
      length = 1000;
    }
    var Kf = length < 30 ? 0 : (length - 30) * 0.05;
    var Kf_1 = Kf;
    var Kf_2 = Kf;
    // var Kf_1 = Kf / node1.lot.childs.length
    // var Kf_2 = Kf / node2.lot.childs.length
    var _buff_x = (node1.x - node2.x) / length;
    var _buff_y = (node1.y - node2.y) / length;
    this.addFtoNode(node1, _buff_x * Kf_1 * -1, _buff_y * Kf_1 * -1, 1);
    this.addFtoNode(node2, _buff_x * Kf_2, _buff_y * Kf_2, 1);
  };
  this.addGravityByNode = function (node1, node2) {
    var length = Math.sqrt(Math.pow(node1.y - node2.y, 2) + Math.pow(node1.x - node2.x, 2));
    var zero_length = 300;
    var Kf = length > zero_length ? 0 : (zero_length - length) * 0.03;
    if (zero_length < 30) {
      Kf = Kf * 100;
    }
    // if (length < 100)Kf = Kf * 2
    var _buff_x = (node1.x - node2.x) / length;
    var _buff_y = (node1.y - node2.y) / length;
    // if (_buff_x < 30)_buff_x = 1
    // if (_buff_y < 30)_buff_y = 1
    // console.log({ Kf, _buff_x, _buff_y, zero_length })
    this.addFtoNode(node1, _buff_x * Kf, _buff_y * Kf, 0);
    this.addFtoNode(node2, _buff_x * Kf * -1, _buff_y * Kf * -1, 0);
  };
  this.getNodeFWeight = function (node) {
    var level = node.lot.level;
    if (level > 7) level = 7;
    if (level < 0) level = 0;
    return (8 - level) / 8;
  };
  this.addFtoNode = function (node, x, y) {
    // console.log('Add F:', node.text, type, parseInt(x), parseInt(y))
    if (isNaN(x) || isNaN(y)) {
      return;
    }
    x = x / node.lot.strength;
    y = y / node.lot.strength;
    if (x > 50) x = 50;
    if (y > 50) y = 50;
    if (x < -50) x = -50;
    if (y < -50) y = -50;
    // if (isNaN(node.Fx)) {
    //   if (node.text === '宣洁')console.log('宣洁!!!NaN B buff x:', x, node.lot.strength, node)
    // }
    node.Fx += x;
    node.Fy += y;
    // if (isNaN(node.Fx)) {
    //   if (node.text === '宣洁')console.log('宣洁!!!NaN A buff x:', x, node.lot.strength, node)
    // }
  };
  this.applyToNodePosition = function (node) {
    // if (!node.lot.childs || node.lot.childs.length === 0) {
    //   return
    // }
    // if (node.lot.level === 0) {
    //   return
    // }
    // console.log('F add:', node.name, node.Fx, node.Fy)
    const __buff_x = parseInt(node.Fx);
    const __buff_y = parseInt(node.Fy);
    // console.log('F add:2:', node.name, __buff_x, __buff_y)
    node.x = node.x + __buff_x;
    node.y = node.y + __buff_y;
    // if (isNaN(node.x)) {
    //   if (node.text === '宣洁')console.log('!!!NaN x:', node.text, __buff_x, node.Fx, node)
    // }
    // node.name = __buff_x + ',' + __buff_y
    // if (node.id === '8') {
    //   console.log(node.id, __buff_x, __buff_y)
    // // console.log(node.x, node.y)
    // }
    node.Fx = 0;
    node.Fy = 0;
  };
}

/* harmony default export */ var layouters_SeeksAutoLayouter = (SeeksAutoLayouter);
// CONCATENATED MODULE: ./src/core4vue/layouters/SeeksFixedLayouter.js


function SeeksFixedLayouter(layoutSetting, graphSetting) {
  this.graphSetting = graphSetting;
  this.config = layoutSetting || {};
  this.rootNode = null;
  this.allNodes = [];
  this.__origin_nodes = [];
  this.refresh = function () {
    this.placeNodes(this.__origin_nodes, this.rootNode);
  };
  this.placeNodes = function (allNodes, rootNode) {
    if (!rootNode) {
      console.log('root is null:', rootNode);
      return;
    } else {
      if (window.SeeksGraphDebug) console.log('layout by root:', rootNode);
    }
    this.__origin_nodes = allNodes;
    this.rootNode = rootNode;
    allNodes.forEach(thisNode => {
      // thisNode.lot = { eached: false }
      thisNode.lot.eached = false;
      thisNode.lot.notLeafNode = false;
      thisNode.lot.childs = [];
      // thisNode.lot.parent = undefined
      thisNode.lot.index_of_parent = 0;
      thisNode.lot.strength = 0;
      thisNode.lot.prevNode = undefined;
      thisNode.lot.nextNode = undefined;
      thisNode.lot.placed = false;
    });
    this.allNodes = [];
    var analyticResult = {
      max_deep: 1,
      max_length: 1
    };
    core4vue_SeeksGraphMath.analysisNodes4Didirectional(this.allNodes, [this.rootNode], 0, analyticResult, 0);
    if (window.SeeksGraphDebug) console.log('[layout canvasOffset]', this.graphSetting.viewSize, this.graphSetting.canvasSize);
  };
}

/* harmony default export */ var layouters_SeeksFixedLayouter = (SeeksFixedLayouter);
// CONCATENATED MODULE: ./src/core4vue/SeeksRGLayouters.js






var SeeksRGLayouters = {
  createLayout(layoutSetting, _graphSetting) {
    _graphSetting.canvasZoom = 100;
    _graphSetting.layoutClassName = layoutSetting.layoutClassName;
    _graphSetting.layoutLabel = layoutSetting.label;
    _graphSetting.layoutName = layoutSetting.layoutName;
    _graphSetting.layoutDirection = layoutSetting.layoutDirection;

    if (layoutSetting.useLayoutStyleOptions === true) {
      _graphSetting.defaultExpandHolderPosition = layoutSetting.defaultExpandHolderPosition;
      _graphSetting.defaultJunctionPoint = layoutSetting.defaultJunctionPoint;

      _graphSetting.defaultNodeColor = layoutSetting.defaultNodeColor;
      _graphSetting.defaultNodeFontColor = layoutSetting.defaultNodeFontColor;
      _graphSetting.defaultNodeBorderColor = layoutSetting.defaultNodeBorderColor;
      _graphSetting.defaultNodeBorderWidth = layoutSetting.defaultNodeBorderWidth;
      _graphSetting.defaultLineColor = layoutSetting.defaultLineColor;
      _graphSetting.defaultLineWidth = layoutSetting.defaultLineWidth;
      _graphSetting.defaultLineShape = layoutSetting.defaultLineShape;
      _graphSetting.defaultNodeShape = layoutSetting.defaultNodeShape;
      _graphSetting.defaultNodeWidth = layoutSetting.defaultNodeWidth;
      _graphSetting.defaultNodeHeight = layoutSetting.defaultNodeHeight;
      _graphSetting.defaultLineMarker = layoutSetting.defaultLineMarker;
      _graphSetting.defaultShowLineLabel = layoutSetting.defaultShowLineLabel;
    }
    var _layout = null;
    if (layoutSetting.layoutName === 'SeeksBidirectionalTreeLayouter' || layoutSetting.layoutName === 'tree') {
      _layout = new layouters_SeeksBidirectionalTreeLayouter(layoutSetting, _graphSetting);
    } else if (layoutSetting.layoutName === 'SeeksCenterLayouter' || layoutSetting.layoutName === 'center') {
      _layout = new layouters_SeeksCenterLayouter(layoutSetting, _graphSetting);
    } else if (layoutSetting.layoutName === 'SeeksCircleLayouter' || layoutSetting.layoutName === 'circle') {
      _layout = new SeeksCircleLayouter(layoutSetting, _graphSetting);
    } else if (layoutSetting.layoutName === 'SeeksAutoLayouter' || layoutSetting.layoutName === 'force') {
      _layout = new layouters_SeeksAutoLayouter(layoutSetting, _graphSetting);
    } else if (layoutSetting.layoutName === 'SeeksFixedLayouter' || layoutSetting.layoutName === 'fixed') {
      _layout = new layouters_SeeksFixedLayouter(layoutSetting, _graphSetting);
    }
    _graphSetting.isNeedShowAutoLayoutButton = layoutSetting.allowAutoLayoutIfSupport !== false && _layout.autoLayout !== undefined;
    return _layout;
  },
  switchLayout(layoutLabelOrSetting, _graphSetting) {
    const __origin_nodes = _graphSetting.layouter ? _graphSetting.layouter.__origin_nodes : [];
    const __rootNode = _graphSetting.layouter ? _graphSetting.layouter.rootNode : null;
    if (typeof layoutLabelOrSetting === 'string') {
      for (var thisLayoutSetting in _graphSetting.layouts) {
        if (thisLayoutSetting.label === layoutLabelOrSetting) {
          layoutLabelOrSetting = thisLayoutSetting;
          break;
        }
      }
    }
    _graphSetting.layouter = SeeksRGLayouters.createLayout(layoutLabelOrSetting, _graphSetting);
    _graphSetting.layouter.__origin_nodes = __origin_nodes;
    _graphSetting.layouter.rootNode = __rootNode;
  }
};
/* harmony default export */ var core4vue_SeeksRGLayouters = (SeeksRGLayouters);
// CONCATENATED MODULE: ./src/core4vue/SeeksRGUtils.js
var __tmp_basePosition = { x: 0, y: 0 };
var __tmp_positionModel = { x: 0, y: 0 };
var __ondraged;
var __start_info = { x: 0, y: 0 };
var SeeksRGUtils = {
  startDrag(e, positionModel, ondraged) {
    __ondraged = ondraged;
    // console.log('startDrag:', __tmp_basePosition, e.clientX, e.clientY)
    __tmp_positionModel = positionModel;
    __start_info.x = __tmp_positionModel.x;
    __start_info.y = __tmp_positionModel.y;
    __tmp_basePosition.x = parseInt(__tmp_positionModel.x) - e.clientX;
    __tmp_basePosition.y = parseInt(__tmp_positionModel.y) - e.clientY;
    document.body.addEventListener('mousemove', SeeksRGUtils.onNodeMove);
    document.body.addEventListener('mouseup', SeeksRGUtils.onNodeDragend);
  },
  onNodeMove(e) {
    // console.log('move', __tmp_basePosition, e.clientX, e.clientY)
    __tmp_positionModel.x = e.clientX + __tmp_basePosition.x;
    __tmp_positionModel.y = e.clientY + __tmp_basePosition.y;
  },
  onNodeDragend() {
    // console.log('onNodeDragend', __tmp_positionModel.x - __start_info.x, __tmp_positionModel.y - __start_info.y)
    document.body.removeEventListener('mousemove', SeeksRGUtils.onNodeMove);
    document.body.removeEventListener('mouseup', SeeksRGUtils.onNodeDragend);
    if (__ondraged) {
      __ondraged(__tmp_positionModel.x - __start_info.x, __tmp_positionModel.y - __start_info.y);
    }
  },
  transName4Circle(name) {
    var _thisLevel = 0;
    var _thisLevelCharsArr = [];
    var result = [];
    for (var i = 0; i < name.length; i++) {
      _thisLevelCharsArr.push(name[i]);
      if (_thisLevelCharsArr.length === circle_node_text_set[_thisLevel]) {
        result.push(_thisLevelCharsArr.join(''));
        _thisLevel++;
        _thisLevelCharsArr = [];
      }
    }
    if (_thisLevelCharsArr.length > 0) {
      result.push(_thisLevelCharsArr.join(''));
    }
    // if (result.length < 3) {
    //   result.unshift('')
    //   if (result.length < 3) {
    //     result.unshift('')
    //     if (result.length < 3) {
    //       result.unshift('')
    //     }
    //   }
    // }
    return result.join('<br>');
  },
  getColorId(color) {
    color = color.replace('#', '');
    color = color.replace('(', '');
    color = color.replace(')', '');
    color = color.replace(/,/, '-');
    return color;
  }
};
SeeksRGUtils.json2Node = function (originData) {
  if (originData.id === undefined) throw Error('node must has option[id]:', originData);
  originData.text = originData.text || originData.name || originData.id;
  var jsonData = {
    id: originData.id,
    text: originData.text !== undefined ? originData.text : '',
    type: originData.type !== undefined ? originData.type : 'node',
    isShow: originData.isShow !== undefined ? originData.isShow : true,
    isHide: originData.isHide !== undefined ? originData.isHide : false,
    expanded: originData.expanded !== undefined ? originData.expanded : true,
    selected: originData.selected !== undefined ? originData.selected : false,
    styleClass: originData.styleClass !== undefined ? originData.styleClass : '',
    targetNodes: originData.targetNodes !== undefined ? originData.targetNodes : [],
    targetFrom: originData.targetFrom !== undefined ? originData.targetFrom : [],
    targetTo: originData.targetTo !== undefined ? originData.targetTo : [],
    nodeShape: originData.nodeShape !== undefined ? originData.nodeShape : undefined,
    borderWidth: originData.borderWidth !== undefined ? originData.borderWidth : undefined,
    borderColor: originData.borderColor !== undefined ? originData.borderColor : undefined,
    fontColor: originData.fontColor !== undefined ? originData.fontColor : undefined,
    color: originData.color !== undefined ? originData.color : undefined,
    opacity: originData.opacity !== undefined ? originData.opacity : 1,
    fixed: originData.fixed !== undefined ? originData.fixed : false,
    width: originData.width !== undefined ? originData.width : undefined,
    height: originData.height !== undefined ? originData.height : undefined,
    x: originData.x !== undefined ? originData.x : 0,
    y: originData.y !== undefined ? originData.y : 0,
    Fx: originData.Fx !== undefined ? originData.Fx : 0,
    Fy: originData.Fy !== undefined ? originData.Fy : 0,
    offset_x: originData.offset_x !== undefined ? originData.offset_x : 0,
    offset_y: originData.offset_y !== undefined ? originData.offset_y : 0,
    expandHolderPosition: originData.expandHolderPosition !== undefined ? originData.expandHolderPosition : undefined,
    innerHTML: originData.innerHTML !== undefined ? originData.innerHTML : undefined,
    html: originData.html !== undefined ? originData.html : undefined,
    disableDefaultClickEffect: originData.disableDefaultClickEffect !== undefined ? originData.disableDefaultClickEffect : undefined,
    disableDrag: originData.disableDrag !== undefined ? originData.disableDrag : false,
    data: originData.data !== undefined ? originData.data : {}
  };
  if (jsonData.lot === undefined) jsonData.lot = { childs: [], parent: undefined, eached: false, strength: 0 };
  if (jsonData.lot.childs === undefined) jsonData.lot.childs = [];
  if (jsonData.lot.parent === undefined) jsonData.lot.parent = undefined;
  if (jsonData.lot.eached === undefined) jsonData.lot.eached = false;
  if (jsonData.lot.strength === undefined) jsonData.lot.strength = 0;
  if (jsonData.el === undefined) jsonData.el = { offsetWidth: 50, offsetHeight: 50 };
  if (jsonData.width !== undefined) jsonData.el.offsetWidth = jsonData.width;
  if (jsonData.height !== undefined) jsonData.el.offsetHeight = jsonData.height;
  return jsonData;
};
SeeksRGUtils.json2Link = function (originData) {
  if (originData.from === undefined) throw Error('error,link must has option[from]:', originData);
  if (originData.to === undefined) throw Error('error,link must has option[to]:', originData);
  if (typeof originData.from !== 'string') throw Error('error link from, must be string:', originData);
  if (typeof originData.to !== 'string') throw Error('error link to, must be string:', originData);
  var jsonData = {
    text: originData.text !== undefined ? originData.text : '',
    color: originData.color !== undefined ? originData.color : undefined,
    fontColor: originData.fontColor !== undefined ? originData.fontColor : undefined,
    lineWidth: originData.lineWidth !== undefined ? originData.lineWidth : undefined,
    lineShape: originData.lineShape !== undefined ? originData.lineShape : undefined,
    styleClass: originData.styleClass !== undefined ? originData.styleClass : undefined,
    isHide: originData.isHide !== undefined ? originData.isHide : false,
    arrow: originData.arrow !== undefined ? originData.arrow : undefined,
    isHideArrow: originData.isHideArrow !== undefined ? originData.isHideArrow : undefined,
    hidden: originData.hidden !== undefined ? originData.hidden : false,
    lineDirection: originData.lineDirection !== undefined ? originData.lineDirection : undefined,
    reverseText: originData.reverseText !== undefined ? originData.reverseText : undefined,
    data: originData.data !== undefined ? originData.data : {}
  };
  return jsonData;
};

SeeksRGUtils.getPosition = function (el) {
  if (el.parentElement) {
    return SeeksRGUtils.getPosition(el.parentElement) + el.offsetTop;
  }
  return el.offsetTop;
};
var _ignore_node_keys = ['Fx', 'Fy', 'appended', 'el', 'targetFrom', 'targetNodes', 'targetTo', 'type', 'lot', 'seeks_id'];
SeeksRGUtils.transNodeToJson = function (node, nodes) {
  if (!node) return;
  var _node_json = {};
  Object.keys(node).forEach(thisKey => {
    if (_ignore_node_keys.indexOf(thisKey) === -1) {
      if (node[thisKey] !== undefined) {
        _node_json[thisKey] = node[thisKey];
      }
    }
  });
  nodes.push(_node_json);
};
var _ignore_link_keys = ['arrow', 'id', 'reverseText', 'isReverse'];
SeeksRGUtils.transLineToJson = function (line, links) {
  if (!line) return;
  line.relations.forEach(thisRelation => {
    var _link_json = {};
    Object.keys(thisRelation).forEach(thisKey => {
      if (_ignore_link_keys.indexOf(thisKey) === -1) {
        if (thisRelation[thisKey] !== undefined) {
          _link_json[thisKey] = thisRelation[thisKey];
        }
      }
    });
    links.push(_link_json);
  });
};
var circle_node_text_set = [4, 5, 6, 4, 2, 100];
/* harmony default export */ var core4vue_SeeksRGUtils = (SeeksRGUtils);
// CONCATENATED MODULE: ./src/core4vue/SeeksRGStore.js
const SeeksStoreManager = {
  createDefaultConfig(userGraphSetting) {
    var _graphSetting = {
      instanceId: 'SeeksGraph',
      debug: true,
      allowShowSettingPanel: false,
      backgrounImage: '',
      disableZoom: false,
      disableDragNode: false,
      moveToCenterWhenResize: true,
      defaultFocusRootNode: true,
      allowShowZoomMenu: true,
      backgrounImageNoRepeat: false,
      allowShowMiniToolBar: true,
      allowShowMiniView: false,
      allowShowMiniNameFilter: true,
      fullscreen: false,
      allowSwitchLineShape: false,
      allowSwitchJunctionPoint: false,
      isMoveByParentNode: false,
      checkedNodeId: '',
      checkedLineId: '',
      layouts: [],
      layoutLabel: '',
      layoutName: 'tree',
      layoutClassName: '',
      layoutDirection: 'h',
      defaultExpandHolderPosition: 'hide',
      autoLayouting: false,
      layouter: undefined,
      allowAutoLayoutIfSupport: true,
      isNeedShowAutoLayoutButton: false,
      canvasZoom: 100,
      defaultNodeColor: '#67C23A',
      defaultNodeFontColor: '#ffffff',
      defaultNodeBorderColor: '#90EE90',
      defaultNodeBorderWidth: 5,
      defaultLineColor: '#dddddd',
      defaultLineWidth: 1,
      defaultLineShape: 1,
      defaultNodeShape: 0,
      defaultNodeWidth: undefined,
      defaultNodeHeight: undefined,
      defaultShowLineLabel: true,
      showSingleNode: true,
      showNodeLabel: true,
      showNodeShortLabel: true,
      hideNodeContentByZoom: false,
      defaultJunctionPoint: 'border',
      viewSize: { width: 300, height: 300 },
      viewELSize: { width: 1300, height: 800, left: 0, top: 100 },
      viewNVInfo: { width: 1300, height: 800, x: 0, y: 100 },
      canvasNVInfo: { width: 1300, height: 800, x: 0, y: 100 },
      // NMViewCenter: { x: 0, y: 0 },
      // NMCanvasCenter: { x: 0, y: 0 },
      defaultLineMarker: {
        markerWidth: 12,
        markerHeight: 12,
        refX: 6,
        refY: 6,
        color: undefined,
        data: 'M2,2 L10,6 L2,10 L6,6 L2,2'
      },
      // defaultLineMarker: {
      //   markerWidth: 6,
      //   markerHeight: 6,
      //   refX: 3,
      //   refY: 3,
      //   color: undefined,
      //   data: 'M 0 0, V 6, L 4 3, Z'
      // },
      // defaultLineMarker: { // 另一种箭头样式
      //   markerWidth: 15,
      //   markerHeight: 15,
      //   refX: 50,
      //   refY: 7,
      //   color: '#128bed',
      //   data: 'M 14 7 L 1 .3 L 4 7 L .4 13 L 14 7, Z'
      // },
      canvasSize: {
        width: 2000,
        height: 2000
      },
      canvasOffset: {
        x: 25,
        y: 27,
        zoom_buff_x: 0,
        zoom_buff_y: 0
      },
      resetViewSize: config => {
        // config.canvasOffset.x = parseInt(config.viewSize.width - config.canvasSize.width) / 2
        // config.canvasOffset.y = parseInt(config.viewSize.height - config.canvasSize.height) / 2
        config.canvasOffset.x = config.viewNVInfo.width / 2 - 100;
        config.canvasOffset.y = config.viewNVInfo.height / 2 - 100;
      }
    };
    var _debug = userGraphSetting.debug !== true ? false : true;
    if (_debug) console.log('user instance graphSetting:', userGraphSetting);
    if (window) {
      window.SeeksGraphDebug = _debug;
    }
    if (userGraphSetting) {
      Object.keys(userGraphSetting).forEach(key => {
        var _thisUserValue = userGraphSetting[key];
        if (typeof _thisUserValue === 'object') {
          if (window.SeeksGraphDebug) console.log('user setting object:', key, _thisUserValue);
          var _objectValue = _graphSetting[key];
          if (_objectValue) {
            if (_objectValue && !Array.isArray(_objectValue) && _thisUserValue) {
              Object.keys(_objectValue).forEach(l2Key => {
                if (window.SeeksGraphDebug) console.log('   user setting:', key + '.' + l2Key, _thisUserValue[l2Key]);
                _objectValue[l2Key] = _thisUserValue[l2Key];
              });
            } else if (Array.isArray(_objectValue)) {
              if (window.SeeksGraphDebug) console.log('   user setting array:', key, 'size:', _thisUserValue.length);
              var _new_arr = [];
              _thisUserValue.forEach(thisItem => {
                if (window.SeeksGraphDebug) console.log('   user setting array:', key, 'push:', thisItem);
                if (thisItem && typeof thisItem === 'object') {
                  _new_arr.push(JSON.parse(JSON.stringify(thisItem)));
                } else {
                  _new_arr.push(thisItem);
                }
              });
              _graphSetting[key] = _new_arr;
              // if (window.SeeksGraphDebug) console.log('   user setting array:', key, 'copy size:', _new_arr.length)
            } else {
              if (window.SeeksGraphDebug) console.log('user setting value:', key);
              _graphSetting[key] = _thisUserValue;
            }
          } else {
            console.log('ignore option:', key);
          }
        } else {
          if (window.SeeksGraphDebug) console.log('user setting:', key, _thisUserValue);
          _graphSetting[key] = _thisUserValue;
        }
      });
    }
    if (!_graphSetting.layouts || _graphSetting.layouts.length === 0) {
      _graphSetting.layouts = [{
        label: '中心',
        layoutName: 'center',
        layoutDirection: 'v',
        defaultExpandHolderPosition: 'hide',
        defaultNodeShape: 0,
        defaultLineShape: 1,
        defaultJunctionPoint: 'border'
      }];
    }
    if (!Array.isArray(_graphSetting.layouts)) {
      _graphSetting.layouts = [_graphSetting.layouts];
    }
    _graphSetting.layouts.forEach(thisLayout => {
      SeeksStoreManager.appendDefaultOptions4Layout(thisLayout);
    });
    return _graphSetting;
  },
  appendDefaultOptions4Layout(thisLayout) {
    if (thisLayout.useLayoutStyleOptions === undefined) thisLayout.useLayoutStyleOptions = false;
    if (thisLayout.defaultNodeColor === undefined) thisLayout.defaultNodeColor = '#FFC5A6';
    if (thisLayout.defaultNodeFontColor === undefined) thisLayout.defaultNodeFontColor = '#000000';
    if (thisLayout.defaultNodeBorderColor === undefined) thisLayout.defaultNodeBorderColor = '#efefef';
    if (thisLayout.defaultNodeBorderWidth === undefined) thisLayout.defaultNodeBorderWidth = 1;
    if (thisLayout.defaultLineColor === undefined) thisLayout.defaultLineColor = '#FD8B37';
    if (thisLayout.defaultLineWidth === undefined) thisLayout.defaultLineWidth = 1;
    // if (thisLayout.defaultLineShape === undefined) thisLayout.defaultLineShape = 2
    // if (thisLayout.defaultNodeShape === undefined) thisLayout.defaultNodeShape = 1
    if (thisLayout.defaultNodeWidth === undefined) thisLayout.defaultNodeWidth = undefined;
    if (thisLayout.defaultNodeHeight === undefined) thisLayout.defaultNodeHeight = undefined;
    if (thisLayout.defaultShowLineLabel === undefined) thisLayout.defaultShowLineLabel = true;
    if (thisLayout.defaultExpandHolderPosition === undefined) thisLayout.defaultExpandHolderPosition = undefined;
    if (thisLayout.defaultJunctionPoint === undefined) thisLayout.defaultJunctionPoint = undefined;
    if (thisLayout.defaultLineMarker === undefined) {
      thisLayout.defaultLineMarker = {
        markerWidth: 12,
        markerHeight: 12,
        refX: 6,
        refY: 6,
        color: undefined,
        data: 'M2,2 L10,6 L2,10 L6,6 L2,2'
      };
    }
    if (thisLayout.layoutName === 'SeeksCenterLayouter' || thisLayout.layoutName === 'center') {
      if (thisLayout.label === undefined) thisLayout.label = '中心';
      if (thisLayout.layoutClassName === undefined) thisLayout.layoutClassName = 'seeks-layout-' + thisLayout.layoutName;
      if (thisLayout.defaultNodeShape === undefined) thisLayout.defaultNodeShape = 0;
      if (thisLayout.defaultLineShape === undefined) thisLayout.defaultLineShape = 1;
      if (thisLayout.defaultExpandHolderPosition === undefined) thisLayout.defaultExpandHolderPosition = 'hide';
      if (thisLayout.defaultJunctionPoint === undefined) thisLayout.defaultJunctionPoint = 'border';
      if (thisLayout.layoutDirection === undefined) thisLayout.layoutDirection = 'h';
      if (thisLayout.centerOffset_x === undefined) thisLayout.centerOffset_x = 0;
      if (thisLayout.centerOffset_y === undefined) thisLayout.centerOffset_y = 0;
      if (thisLayout.levelDistance === undefined) thisLayout.levelDistance = '';
      if (thisLayout.min_per_width === undefined) thisLayout.min_per_width = 30;
      if (thisLayout.max_per_width === undefined) thisLayout.max_per_width = 200;
      if (thisLayout.min_per_height === undefined) thisLayout.min_per_height = 100;
      if (thisLayout.max_per_height === undefined) thisLayout.max_per_height = 500;
    } else if (thisLayout.layoutName === 'SeeksBidirectionalTreeLayouter' || thisLayout.layoutName === 'tree') {
      if (thisLayout.label === undefined) thisLayout.label = '树状';
      if (thisLayout.layoutClassName === undefined) thisLayout.layoutClassName = 'seeks-layout-' + thisLayout.layoutName;
      if (thisLayout.defaultNodeShape === undefined) thisLayout.defaultNodeShape = 1;
      if (thisLayout.defaultLineShape === undefined) thisLayout.defaultLineShape = 2;
      if (thisLayout.defaultExpandHolderPosition === undefined) thisLayout.defaultExpandHolderPosition = 'hide';
      if (thisLayout.defaultJunctionPoint === undefined) thisLayout.defaultJunctionPoint = 'ltrb';
      if (thisLayout.layoutDirection === undefined) thisLayout.layoutDirection = 'h';
      if (thisLayout.centerOffset_x === undefined) thisLayout.centerOffset_x = 0;
      if (thisLayout.centerOffset_y === undefined) thisLayout.centerOffset_y = 0;
      if (thisLayout.from === undefined) thisLayout.from = 'top';
      if (thisLayout.levelDistance === undefined) thisLayout.levelDistance = '';
      if (thisLayout.min_per_width === undefined) thisLayout.min_per_width = 30;
      if (thisLayout.max_per_width === undefined) thisLayout.max_per_width = 200;
      if (thisLayout.min_per_height === undefined) thisLayout.min_per_height = 100;
      if (thisLayout.max_per_height === undefined) thisLayout.max_per_height = 500;
      if (thisLayout.from === 'top' || thisLayout.from === 'bottom') thisLayout.layoutDirection = 'v';
    }
  },
  createNewStore(userGraphSetting) {
    if (window.SeeksGraphDebug) console.log('Create new GraphSetting:');
    var _graphSetting = SeeksStoreManager.createDefaultConfig(userGraphSetting);
    return new SeeksRGStore(_graphSetting);
  }
};
function SeeksRGStore(_graphSetting) {
  this.graphSetting = _graphSetting;
  this.resetViewSize = function () {
    // state.graphSetting.canvasOffset.x = parseInt(state.graphSetting.viewSize.width - state.graphSetting.canvasSize.width) / 2
    // state.graphSetting.canvasOffset.y = parseInt(state.graphSetting.viewSize.height - state.graphSetting.canvasSize.height) / 2
    this.graphSetting.canvasOffset.x = 0; // state.graphSetting.viewNVInfo.width / 2 - 100
    this.graphSetting.canvasOffset.y = 0; // state.graphSetting.viewNVInfo.height / 2 - 100
    // console.log('resetViewSize:', state.graphSetting.viewSize.width, state.graphSetting.canvasSize.width, state.graphSetting.canvasZoom / 100, state.graphSetting.canvasSize.width * (state.graphSetting.canvasZoom / 100), state.graphSetting.canvasOffset.x)
  };
  this.getOptions = function () {
    var _options = {};
    var _ignore = ['layouter', 'autoLayouting', 'canvasNVInfo', 'canvasOffset', 'canvasZoom', 'fullscreen', 'instanceId', 'layoutClassName', 'layoutDirection', 'layoutLabel', 'layoutName', 'resetViewSize', 'viewELSize', 'viewNVInfo', 'viewSize', 'canvasSize'];
    Object.keys(this.graphSetting).forEach(thisKey => {
      if (_ignore.indexOf(thisKey) === -1) {
        _options[thisKey] = this.graphSetting[thisKey];
      }
    });
    return _options;
  };
  console.log('relation-graph instance full option:', this.getOptions());
}
/* harmony default export */ var core4vue_SeeksRGStore = (SeeksStoreManager);
// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&index=0!./src/core4vue/SeeksRGNode.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

// import SeeksRGStore from './SeeksRGStore'
// import SeeksGraphMath from './SeeksGraphMath'

// import Velocity from 'velocity-animate'
// import { mapState } from 'vuex'
// var _parent = this.$parent
// function isAllowShowNode(isShow, isHide, parent) {
//   const _r = isShow !== false && isHide !== true && (!parent || isAllowShowNode(parent.isShow, parent.isHide, parent.lot.parent) === true)
//   return _r
// }
/* harmony default export */ var SeeksRGNode = ({
  name: 'SeeksRGNode',
  components: {},
  props: {
    graphSetting: {
      mustUseProp: true,
      default: () => {
        return {};
      },
      type: Object
    },
    nodeProps: {
      mustUseProp: true,
      default: () => {
        return {};
      },
      type: Object
    },
    onNodeClick: {
      mustUseProp: false,
      default: () => {
        return () => {};
      },
      type: Function
    }
  },
  data() {
    return {
      hovering: false,
      borderColor: '',
      dragging: false
    };
  },
  computed: {
    expandButtonClass() {
      return this.nodeProps.expanded === false ? 'c-expanded' : 'c-collapsed';
    }
  },
  // show() {
  //
  // },
  watch: {
    // 'nodeProps.isShow': function(v) {
    //   console.log('nodeProps.isShow:', v)
    //   if (v === true) {
    //     this.$nextTick(() => {
    //       this.nodeProps.el.offsetWidth = this.$refs.seeksRGNode.offsetWidth
    //       this.nodeProps.el.offsetHeight = this.$refs.seeksRGNode.offsetHeight
    //       console.log('node 挂载 el size:', this.$refs.seeksRGNode.offsetWidth, this.$refs.seeksRGNode.offsetHeight)
    //     })
    //   }
    // }
  },
  created() {
    // Vue.version
  },
  mounted() {
    this.refreshNodeProperties();
    // this.leave(this.$refs.seeksRGNode)
    // console.log('node show:', this.nodeProps.text, this.$parent.$slots.node)
  },
  beforeDestroy() {
    const elx = this.$refs.seeksRGNode;
    elx.remove();
  },
  methods: {
    refreshNodeProperties() {
      this.nodeProps.el = this.$refs.seeksRGNode;
      // console.log('node 挂载 el:', this.nodeProps.text, this.nodeProps.el.offsetWidth, this.nodeProps.el.offsetHeight)
      // this.$nextTick(() => {
      //   this.nodeProps.el.offsetWidth = this.$refs.seeksRGNode.offsetWidth
      //   this.nodeProps.el.offsetHeight = this.$refs.seeksRGNode.offsetHeight
      //   console.log('node 挂载 el size:', this.$refs.seeksRGNode.offsetWidth, this.$refs.seeksRGNode.offsetHeight)
      // })
      // this.nodeProps.em = true
      // if (this.nodeProps.style === 0) {
      //   this.nodeProps.name = SeeksRGUtils.transName4Circle(this.nodeProps.name, this.nodeProps.el.offsetWidth)
      //   console.log('resize node name:', this.name)
      // }
      // this.nodeProps.el_width = this.$refs.seeksRGNode.offsetWidth
      // this.nodeProps.el_height = this.$refs.seeksRGNode.offsetHeight
      // var __this = this
      // setInterval(function() {
      //   __this.nodeProps.x = __this.nodeProps.x
      //   __this.nodeProps.y = __this.nodeProps.y
      // }, 1000)
    },
    getNodeName() {
      // if (this.hovering) return 'N-' + this.nodeProps.seeks_id
      if (this.hovering) {
        return this.nodeProps.text;
      }
      if (this.nodeProps.width === undefined && this.nodeProps.nodeShape !== 0) {
        return this.nodeProps.text;
      }
      var _w = this.nodeProps.el.offsetWidth;
      var _h = this.nodeProps.el.offsetHeight;
      var _num_l = parseInt((_w - 20) / 20);
      var _num_c = parseInt((_h - 20) / 20);
      if (_num_l === -1 || _num_c === -1) {
        return this.nodeProps.text;
      }
      var _length = _num_l * _num_c * 2;
      var _text_arr = [];
      var _current_length = 0;
      for (var i = 0; i < this.nodeProps.text.length; i++) {
        var _thisChar = this.nodeProps.text[i];
        var _charCode = _thisChar.charCodeAt(0);
        var _charLength = 1;
        if (_charCode < 0 || _charCode > 255) {
          _charLength = 2;
        }
        if (_current_length + _charLength > _length) {
          return _text_arr.join('') + '...';
        } else {
          _current_length += _charLength;
          _text_arr.push(_thisChar);
        }
      }
      return _text_arr.join('');
      // return _num_l + '/' + _num_c
      // return this.nodeProps.text
    },
    expandOrCollapseNode(e) {
      if (this.nodeProps.expanded === false) {
        this.nodeProps.expanded = true;
        this.nodeProps.lot.childs.forEach(thisNode => {
          thisNode.isShow = true;
        });
        this.$parent.onNodeExpandEvent(this.nodeProps, e);
      } else {
        this.nodeProps.expanded = false;
        this.nodeProps.lot.childs.forEach(thisNode => {
          thisNode.isShow = false;
        });
        this.$parent.onNodeCollapseEvent(this.nodeProps, e);
      }
    },
    onDragStart(e) {
      if (this.graphSetting.disableDragNode || this.nodeProps.disableDrag) {
        return;
      }
      this.dragging = true;
      this.hovering = false;
      core4vue_SeeksRGUtils.startDrag(e, this.nodeProps, this.onNodeDraged);
    },
    onNodeDraged(x, y) {
      if (this.graphSetting.isMoveByParentNode) {
        this.nodeProps.lot.childs.forEach(thisCnode => {
          thisCnode.x += x;
          thisCnode.y += y;
        });
      }
      if (Math.abs(x) + Math.abs(y) > 6) {
        setTimeout(function () {
          if (window.SeeksGraphDebug) console.log('delay end dragging', this.dragging);
          this.dragging = false;
        }.bind(this), 100);
      } else {
        this.dragging = false;
      }
    },
    onMouseHover() {
      if (this.dragging) {
        return;
      }
      this.hovering = true;
    },
    onMouseOut() {
      this.hovering = false;
    },
    onclick(e) {
      if (this.dragging) {
        return;
      }
      if (!this.nodeProps.disableDefaultClickEffect) {
        this.graphSetting.checkedNodeId = this.nodeProps.id;
      }
      if (this.onNodeClick) {
        this.onNodeClick(this.nodeProps, e);
      }
    },
    // beforeEnter(el) {
    //   console.log('beforeEnter')
    //   el.style.opacity = 0
    //   el.style.transformOrigin = 'left'
    // },
    // enter(el, done) {
    //   console.log('enter')
    //   Velocity(el, { opacity: 1, fontSize: '1.4em' }, { duration: 300 })
    //   Velocity(el, { fontSize: '1em' }, { complete: done })
    // },
    // leave(el, done) {
    //   console.log('leave')
    //   Velocity(el, { translateX: '0px', rotateZ: '360deg' }, { duration: 600 })
    //   // Velocity(el, { rotateZ: '180deg' }, { loop: 1 })
    //   // Velocity(el, {
    //   //   rotateZ: '45deg',
    //   //   translateY: '30px',
    //   //   translateX: '30px',
    //   //   opacity: 0
    //   // }, { complete: done })
    // },
    getLightColor(col) {
      // if (this.borderColor !== '') {
      //   return this.borderColor
      // }
      if (col[0] === '#') {
        var _s = col.substring(1);
        if (_s.length === 3) {
          _s = _s[0] + _s[0] + _s[1] + _s[1] + _s[2] + _s[2];
        }
        var _rgb_arr = [parseInt(_s[0] + '' + _s[1], 16), parseInt(_s[2] + '' + _s[3], 16), parseInt(_s[4] + '' + _s[5], 16)];
        if (window.SeeksGraphDebug) console.log('getLightColor1:', col, ':', _rgb_arr.join(','));
        col = 'rgb(' + _rgb_arr.join(',') + ')';
      }
      var _st = col.substring(col.indexOf('(') + 1);
      _st = _st.substring(0, _st.indexOf(')'));
      var _rgb_string = _st.split(',');
      // console.log('getLightColor444:', _st, ':', _rgb_string.join(','))
      if (_rgb_string.length >= 3) {
        var _rgb_number = [parseInt(parseInt(_rgb_string[0]) * 0.9), parseInt(parseInt(_rgb_string[1]) * 0.9), parseInt(parseInt(_rgb_string[2]) * 0.9)];
        if (window.SeeksGraphDebug) console.log('getLightColor2:', col, ':', _rgb_number.join(','));
        this.borderColor = 'rgb(' + _rgb_number.join(',') + ', 0.3)';
        return this.borderColor;
      } else {
        this.borderColor = col;
        return col;
      }
    },
    isAllowShowNode(thisNode) {
      const _r = thisNode.isShow !== false && thisNode.isHide !== true && (!thisNode.lot.parent || this.isAllowShowNode(thisNode.lot.parent, false) === true);
      return _r;
    }
  }
});
// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{"id":"data-v-a252e0a6","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/core4vue/SeeksRGNode.vue
var render = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: _vm.isAllowShowNode(_vm.nodeProps),
      expression: "isAllowShowNode(nodeProps)"
    }],
    ref: "seeksRGNode",
    staticClass: "rel-node-peel",
    style: {
      left: _vm.nodeProps.x + "px",
      top: _vm.nodeProps.y + "px",
      opacity: _vm.nodeProps.opacity > 1 ? _vm.nodeProps.opacity / 100 : _vm.nodeProps.opacity
    },
    on: {
      mousedown: function ($event) {
        if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "left", 37, $event.key, ["Left", "ArrowLeft"])) {
          return null;
        }
        if ("button" in $event && $event.button !== 0) {
          return null;
        }
        $event.stopPropagation();
        return _vm.onDragStart($event);
      },
      mouseover: function ($event) {
        $event.stopPropagation();
        return _vm.onMouseHover($event);
      },
      mouseout: function ($event) {
        $event.stopPropagation();
        return _vm.onMouseOut($event);
      },
      click: function ($event) {
        $event.stopPropagation();
        return _vm.onclick($event);
      }
    }
  }, [_vm.nodeProps.expandHolderPosition && _vm.nodeProps.expandHolderPosition !== "hide" || _vm.graphSetting.defaultExpandHolderPosition && _vm.graphSetting.defaultExpandHolderPosition !== "hide" && _vm.nodeProps.lot.childs && _vm.nodeProps.lot.childs.length > 0 ? _c("div", {
    staticClass: "c-btn-open-close",
    class: ["c-expand-positon-" + (_vm.nodeProps.expandHolderPosition || _vm.graphSetting.defaultExpandHolderPosition)]
  }, [_c("span", {
    class: _vm.expandButtonClass,
    style: {
      "background-color": _vm.nodeProps.color || _vm.graphSetting.defaultNodeColor
    },
    on: {
      click: function ($event) {
        $event.stopPropagation();
        return _vm.expandOrCollapseNode($event);
      }
    }
  })]) : _vm._e(), _vm._v(" "), _vm.nodeProps.html ? _c("div", { domProps: { innerHTML: _vm._s(_vm.nodeProps.html) } }) : _c("div", {
    staticClass: "rel-node",
    class: ["rel-node-shape-" + (_vm.nodeProps.nodeShape === undefined ? _vm.graphSetting.defaultNodeShape : _vm.nodeProps.nodeShape), "rel-node-type-" + _vm.nodeProps.type, _vm.nodeProps.id === _vm.graphSetting.checkedNodeId ? "rel-node-checked" : "", _vm.nodeProps.selected ? "rel-node-selected" : "", _vm.nodeProps.styleClass, _vm.hovering ? "rel-node-hover" : "", _vm.nodeProps.innerHTML ? "rel-diy-node" : ""],
    style: {
      "background-color": _vm.nodeProps.color === undefined ? _vm.graphSetting.defaultNodeColor : _vm.nodeProps.color,
      color: _vm.nodeProps.fontColor === undefined ? _vm.graphSetting.defaultNodeFontColor : _vm.nodeProps.fontColor,
      border: (_vm.nodeProps.borderColor || _vm.graphSetting.defaultNodeBorderColor) + " solid " + (_vm.nodeProps.borderWidth || _vm.graphSetting.defaultNodeBorderWidth) + "px",
      width: (_vm.nodeProps.width || _vm.graphSetting.defaultNodeWidth) + "px",
      height: (_vm.nodeProps.height || _vm.graphSetting.defaultNodeHeight) + "px"
    }
  }, [!(_vm.graphSetting.hideNodeContentByZoom === true && _vm.graphSetting.canvasZoom < 40) ? [_vm._t("node", [!_vm.nodeProps.innerHTML ? _c("div", {
    staticClass: "c-node-text",
    style: {
      color: _vm.nodeProps.fontColor || _vm.graphSetting.defaultNodeFontColor
    }
  }, [_c("span", {
    domProps: {
      innerHTML: _vm._s(_vm.getNodeName())
    }
  })]) : _c("div", {
    domProps: {
      innerHTML: _vm._s(_vm.nodeProps.innerHTML)
    }
  })], { node: _vm.nodeProps })] : _vm._e()], 2)]);
};
var staticRenderFns = [];
render._withStripped = true;
var esExports = { render: render, staticRenderFns: staticRenderFns };
/* harmony default export */ var core4vue_SeeksRGNode = (esExports);
if (false) {
  module.hot.accept();
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api").rerender("data-v-a252e0a6", esExports);
  }
}
// CONCATENATED MODULE: ./src/core4vue/SeeksRGNode.vue
var disposed = false
function injectStyle (ssrContext) {
  if (disposed) return
  __webpack_require__(12)
}
var normalizeComponent = __webpack_require__(2)
/* script */


/* template */

/* template functional */
var __vue_template_functional__ = false
/* styles */
var __vue_styles__ = injectStyle
/* scopeId */
var __vue_scopeId__ = null
/* moduleIdentifier (server only) */
var __vue_module_identifier__ = null
var Component = normalizeComponent(
  SeeksRGNode,
  core4vue_SeeksRGNode,
  __vue_template_functional__,
  __vue_styles__,
  __vue_scopeId__,
  __vue_module_identifier__
)
Component.options.__file = "src/core4vue/SeeksRGNode.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-a252e0a6", Component.options)
  } else {
    hotAPI.reload("data-v-a252e0a6", Component.options)
  }
  module.hot.dispose(function (data) {
    disposed = true
  })
})()}

/* harmony default export */ var src_core4vue_SeeksRGNode = (Component.exports);

// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&index=0!./src/core4vue/SeeksRGLink.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

// import SeeksRGStore from './SeeksRGStore'

// import Velocity from 'velocity-animate'
// import { mapState } from 'vuex'
// var _parent = this.$parent
const JUNCTION_POINT_STYLE = {
  border: 'border',
  ltrb: 'ltrb',
  tb: 'tb',
  lr: 'lr'
};
/* harmony default export */ var SeeksRGLink = ({
  name: 'SeeksRGLink',
  props: {
    graphSetting: {
      mustUseProp: true,
      default: () => {
        return {};
      },
      type: Object
    },
    lineProps: {
      mustUseProp: true,
      default: () => {
        return {};
      },
      type: Object
    },
    onLineClick: {
      mustUseProp: false,
      default: () => {
        return () => {};
      },
      type: Function
    }
  },
  data() {
    return {
      is_flashing: false
    };
  },
  show() {
    this.isShow = true;
  },
  watch: {},
  mounted() {
    // this.refresh()
    // var __this = this
    // setInterval(this.onLineClick, 1000)
  },
  // beforeDestroy() {
  //   const elx = this.$refs.seeksRGLink
  //   elx.remove()
  // },
  methods: {
    getTextTransform(thisRelation, x, y, rotate) {
      if (!x || !y) {
        return 'translate(0,0)';
      }
      var __lineShape = thisRelation.lineShape === undefined ? this.graphSetting.defaultLineShape : thisRelation.lineShape;
      if (__lineShape === 1 || __lineShape === 4) {
        return 'translate(' + x + ',' + y + ')rotate(' + (rotate || 0) + ')';
      } else {
        return 'translate(' + x + ',' + y + ')';
      }
    },
    getArrow(isHideArrow, arrow, color) {
      // console.log('xxxxxxxxxxxx')
      if (isHideArrow) {
        return 'none';
      } else {
        var _arrow = this.$parent.getLineArrow(color);
        return 'url(\'#' + _arrow + '\')';
      }
    },
    createLinePath(from, to, ri, relationData) {
      // console.log('redrawLine:', this.lineProps.fromNode.id, this.lineProps.toNode.id, ri)
      // console.log('_point:', _point)
      if (!ri) ri = 0;
      var __lineShape = relationData.lineShape === undefined ? this.graphSetting.defaultLineShape : relationData.lineShape;
      var __lineDirection = relationData.lineDirection === undefined ? this.graphSetting.layoutDirection : relationData.lineDirection;
      var from_x = from.x;
      var from_y = from.y;
      var to_x = to.x;
      var to_y = to.y;
      if (isNaN(from_x) || isNaN(from_y)) {
        console.error('error start node:', from);
        relationData.textPositon.x = 50;
        relationData.textPositon.y = 50;
        relationData.textPositon.rotate = 0;
        return 'M 0 0 L 100 100';
      }
      if (isNaN(to_x) || isNaN(to_y)) {
        console.error('error start point:', from);
        relationData.textPositon.x = 50;
        relationData.textPositon.y = 50;
        relationData.textPositon.rotate = 0;
        return 'M 0 0 L 100 100';
      }
      var f_W = from.el.offsetWidth || from.width || from.w;
      var f_H = from.el.offsetHeight || from.height || from.h;
      if (isNaN(f_W) || isNaN(f_H)) {
        // console.log('error from node size:', f_W, f_H)
        relationData.textPositon.x = 50;
        relationData.textPositon.y = 50;
        relationData.textPositon.rotate = 0;
        return 'M 0 0 L 100 100';
      }
      var t_W = to.el.offsetWidth || to.width || to.w;
      var t_H = to.el.offsetHeight || to.height || to.h;
      if (isNaN(t_W) || isNaN(t_H)) {
        // console.log('error to node size:', f_W, f_H)
        relationData.textPositon.x = 50;
        relationData.textPositon.y = 50;
        relationData.textPositon.rotate = 0;
        return 'M 0 0 L 100 100';
      }
      if (relationData.isReverse) {
        [from_x, from_y, to_x, to_y, f_W, f_H, t_W, t_H] = [to_x, to_y, from_x, from_y, t_W, t_H, f_W, f_H];
      }
      var __params4start = [from_x, from_y, to_x, to_y, f_W, f_H, t_W, t_H, this.graphSetting.defaultNodeShape, relationData.isReverse, this.lineProps.relations.length, ri];
      var __params4end = [to_x, to_y, from_x, from_y, t_W, t_H, f_W, f_H, this.graphSetting.defaultNodeShape, !relationData.isReverse, this.lineProps.relations.length, ri];
      var __start, __end;
      var _junctionPointStyle = this.graphSetting.defaultJunctionPoint;
      if (!_junctionPointStyle) {
        _junctionPointStyle = JUNCTION_POINT_STYLE.border;
      }
      if (_junctionPointStyle === JUNCTION_POINT_STYLE.border) {
        __start = core4vue_SeeksGraphMath.getBorderPoint4MultiLine(...__params4start);
        __end = core4vue_SeeksGraphMath.getBorderPoint4MultiLine(...__params4end);
      } else if (_junctionPointStyle === JUNCTION_POINT_STYLE.ltrb) {
        __start = core4vue_SeeksGraphMath.getRectJoinPoint(...__params4start);
        __end = core4vue_SeeksGraphMath.getRectJoinPoint(...__params4end);
      } else if (_junctionPointStyle === JUNCTION_POINT_STYLE.tb) {
        __start = core4vue_SeeksGraphMath.getRectVJoinPoint(...__params4start);
        __end = core4vue_SeeksGraphMath.getRectVJoinPoint(...__params4end);
      } else if (_junctionPointStyle === JUNCTION_POINT_STYLE.lr) {
        __start = core4vue_SeeksGraphMath.getRectHJoinPoint(...__params4start);
        __end = core4vue_SeeksGraphMath.getRectHJoinPoint(...__params4end);
      }
      var fx = __start.x;
      var fy = __start.y;
      var tx = __end.x;
      var ty = __end.y;
      if (isNaN(fx) || isNaN(fy)) {
        console.error('error start point:', from);
        relationData.textPositon.x = 50;
        relationData.textPositon.y = 50;
        relationData.textPositon.rotate = 0;
        return 'M 0 0 L 100 100';
      }
      if (isNaN(tx) || isNaN(ty)) {
        console.error('error end point:', to);
        relationData.textPositon.x = 50;
        relationData.textPositon.y = 50;
        relationData.textPositon.rotate = 0;
        return 'M 0 0 L 100 100';
      }
      var __buff_x = __end.x - __start.x;
      var __buff_y = __end.y - __start.y;
      var __buff_type = __end.x > __start.x ? 1 : -1;
      if (__lineDirection === 'v') {
        __buff_type = __end.y > __start.y ? 1 : -1;
      }
      var __path = '';
      if (__lineShape === 4) {
        const distanceRate = 60 / (this.lineProps.relations.length + 1) * (ri + 1) - 30;
        if (__lineDirection === 'v') {
          __buff_y = __buff_y - (__buff_type * 33 + distanceRate);
          relationData.textPositon.x = fx + __buff_x + 5;
          relationData.textPositon.y = fy + __buff_type * 40 + distanceRate;
          relationData.textPositon.rotate = 90;
          __path = 'M ' + fx + ' ' + fy + ' v' + (__buff_type * 33 + distanceRate) + ' h' + (__buff_x + distanceRate) + ' v' + __buff_y;
        } else {
          if (relationData.reverseText === true) {
            relationData.textPositon.x = fx + __buff_type * 10 - (__buff_type < 0 ? 30 : 0);
            relationData.textPositon.y = fy - 5;
            __buff_x = __buff_x - __buff_type * 120;
            __path = 'M ' + fx + ' ' + fy + ' h' + __buff_type * 120 + ' v' + __buff_y + ' h' + __buff_x;
          } else {
            relationData.textPositon.x = fx + __buff_type * 50 - (__buff_type < 0 ? 30 : 0);
            relationData.textPositon.y = fy + __buff_y - 5 + distanceRate;
            __buff_x = __buff_x - (__buff_type * 33 + distanceRate);
            __buff_y = __buff_y + __buff_type * distanceRate;
            __path = 'M ' + fx + ' ' + fy + ' h' + (__buff_type * 33 + distanceRate) + ' v' + __buff_y + ' h' + __buff_x;
          }
        }
      } else if (__lineShape === 2) {
        // var __buff_type_x = __end.x > __start.x ? 1 : -1
        const __buff_type_y = __end.y > __start.y ? 1 : -1;
        const _base = Math.abs(__buff_x) + Math.abs(__buff_y);
        relationData.textPositon.x = parseInt(__end.x - __buff_x / _base * 60 - 20);
        relationData.textPositon.y = parseInt(__end.y - __buff_y / _base * 60 - 20 * __buff_type_y);
        const distanceRate = 1 / (this.lineProps.relations.length + 1) * (ri + 1) - 0.5 + 0.5;
        if (__lineDirection === 'v') {
          __path = 'M' + fx + ',' + fy + ' c' + 0 + ',' + __buff_type * 30 + ' ' + __buff_x * distanceRate + ',' + __buff_type * -10 + ' ' + __buff_x + ',' + __buff_y;
        } else {
          __path = 'M' + fx + ',' + fy + ' c' + __buff_type * 30 + ',' + 0 + ' ' + __buff_type * -10 + ',' + __buff_y * distanceRate + ' ' + __buff_x + ',' + __buff_y;
        }
      } else if (__lineShape === 6) {
        // const __buff_type_x = __end.x > __start.x ? 1 : -1
        const __buff_type_y = __end.y > __start.y ? 1 : -1;
        const _base = Math.abs(__buff_x) + Math.abs(__buff_y);
        relationData.textPositon.x = parseInt(__end.x - __buff_x / _base * 60 - 20);
        relationData.textPositon.y = parseInt(__end.y - __buff_y / _base * 60 - 20 * __buff_type_y);
        if (__lineDirection === 'v') {
          __path = 'M' + fx + ',' + fy + ' c' + 0 + ',' + __buff_y / 2 + ' ' + __buff_x + ',' + __buff_y / 2 + ' ' + __buff_x + ',' + __buff_y;
        } else {
          __path = 'M' + fx + ',' + fy + ' c' + __buff_x / 2 + ',' + 0 + ' ' + __buff_x / 2 + ',' + __buff_y + ' ' + __buff_x + ',' + __buff_y;
        }
      } else if (__lineShape === 3) {
        relationData.textPositon.x = __end.x - __buff_type * 63;
        relationData.textPositon.y = __end.y + 3;
        const distanceRate = 1 / (this.lineProps.relations.length + 1) * (ri + 1) - 0.5 + 0.5;
        if (__lineDirection === 'v') {
          __path = 'M' + fx + ',' + fy + ' c' + 0 + ',' + __buff_y * distanceRate + ' ' + 0 + ',' + 0 + ' ' + __buff_x + ',' + __buff_y;
        } else {
          // console.log('start:', __start, __end, __buff_x, __buff_y)
          __path = 'M' + fx + ',' + fy + ' c' + __buff_type * 30 + ',' + 0 + ' ' + __buff_type * -10 + ',' + __buff_y * distanceRate + ' ' + __buff_x + ',' + __buff_y;
        }
      } else if (__lineShape === 5) {
        // relationData.text.x = __start.x + __buff_x / 2 - 33
        // relationData.text.y = __start.y + __buff_y / 2 - 3
        relationData.textPositon.x = __end.x - __buff_type * 63;
        relationData.textPositon.y = __end.y + 3;
        const distanceRate = 1 / (this.lineProps.relations.length + 1) * (ri + 1) - 0.5 + 0.5;
        if (__lineDirection === 'v') {
          __path = 'M' + fx + ',' + fy + ' c' + 0 + ',' + 0 + ' ' + 0 + ',' + __buff_y * distanceRate + ' ' + __buff_x + ',' + __buff_y; // 鱼尾
        } else {
          __path = 'M' + fx + ',' + fy + ' c' + 0 + ',' + 0 + ' ' + __buff_x * distanceRate + ',' + 0 + ' ' + __buff_x + ',' + __buff_y; // 鱼尾
        }
        // __path = 'M' + fx + ',' + fy + ' c' + (0) + ',' + (0) + ' ' + (0) + ',' + (__buff_y * 0.5) + ' ' + __buff_x + ',' + __buff_y
        // __path = 'M' + fx + ',' + fy + ' c' + (0) + ',' + (0) + ' ' + (-100) + ',' + (__buff_y * 0.5) + ' ' + __buff_x + ',' + __buff_y
        // __path = 'M' + fx + ',' + fy + ' c' + (30) + ',' + (0) + ' ' + (-10) + ',' + (__buff_y * 0.5) + ' ' + __buff_x + ',' + __buff_y
        // __path = 'M' + fx + ',' + fy + ' c' + (50) + ',' + (0) + ' ' + (-50) + ',' + (__buff_y * 0.5) + ' ' + __buff_x + ',' + __buff_y
        // __path = 'M' + fx + ',' + fy + ' c' + (100) + ',' + (0) + ' ' + (10) + ',' + (__buff_y * 0.5) + ' ' + __buff_x + ',' + __buff_y
        // __path = 'M' + fx + ',' + fy + ' c' + (0) + ',' + (0) + ' ' + (__buff_x * 0.5) + ',' + (0) + ' ' + __buff_x + ',' + __buff_y // 类似鱼尾
        // __path = 'M' + fx + ',' + fy + ' c' + (__buff_x * 0.5) + ',' + (0) + ' ' + (0) + ',' + (0) + ' ' + __buff_x + ',' + __buff_y // 三角
        // __path = 'M' + fx + ',' + fy + ' c' + (0) + ',' + (0) + ' ' + (__buff_x * 0.5) + ',' + (0) + ' ' + __buff_x + ',' + __buff_y // 鱼尾
        // __path = 'M' + fx + ',' + fy + ' c' + (50) + ',' + (__buff_y * 0.5) + ' ' + (0) + ',' + (0) + ' ' + __buff_x + ',' + __buff_y //
        // __path = 'M' + fx + ',' + fy + ' c' + (50) + ',' + (__buff_y * 0.5) + ' ' + (0) + ',' + (0) + ' ' + __buff_x + ',' + __buff_y
      } else {
        var _angle_type = core4vue_SeeksGraphMath.getAngleType(__buff_x, __buff_y);
        relationData.textPositon.rotate = core4vue_SeeksGraphMath.getTextAngle(fx, fy, tx, ty);
        var _xxx = _angle_type === 2 || _angle_type === 4 ? -1 : 1;
        var _x = (__buff_y === 0 ? -50 : Math.sin(Math.atan(__buff_x / __buff_y)) * 10 / Math.sin(90)) * _xxx;
        var _y = __buff_x === 0 ? -50 : Math.sin(Math.atan(__buff_y / __buff_x)) * 10 / Math.sin(90);
        relationData.textPositon.x = parseInt(__start.x + __buff_x / 2 - _x);
        relationData.textPositon.y = parseInt(__start.y + __buff_y / 2 - _y);
        if (isNaN(relationData.textPositon.rotate)) {
          relationData.textPositon.rotate = 0;
          console.log('NaN rotate:', relationData);
        }
        // this.lineProps.text = relationData.text.rotate
        __path = 'M ' + fx + ' ' + fy + ' L ' + tx + ' ' + ty;
      }
      return __path;
    },
    onClick(e) {
      // RGStore.commit('setCurrentLineId', this.lineProps.id)
      this.graphSetting.checkedLineId = this.lineProps.seeks_id;
      this.lineProps.fromNode.selected = true;
      this.lineProps.toNode.selected = true;
      // Velocity(this.$refs.seeksRGLink, { strokDashoffset: 50 }, { duration: 3000, loop: 5 })
      setTimeout(function () {
        this.lineProps.fromNode.selected = false;
        this.lineProps.toNode.selected = false;
      }.bind(this), 2000);
      if (this.onLineClick) {
        this.onLineClick(this.lineProps, e);
      }
    },
    isAllowShowNode: function (thisNode) {
      const _r = thisNode.isShow !== false && thisNode.isHide !== true && (!thisNode.lot.parent || this.isAllowShowNode(thisNode.lot.parent, false) === true);
      // if (derict !== false && _r === false) console.log('be hide node:', thisNode.text)
      return _r;
    },
    flash() {}
  }
});
// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{"id":"data-v-99d854b6","hasScoped":false,"buble":{"transforms":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/core4vue/SeeksRGLink.vue
var SeeksRGLink_render = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _vm.lineProps.isHide !== true && _vm.isAllowShowNode(_vm.lineProps.fromNode) && _vm.isAllowShowNode(_vm.lineProps.toNode) ? _c("g", { ref: "seeksRGLink", attrs: { transform: "translate(0,0)" } }, [_vm._l(_vm.lineProps.relations, function (thisRelation, ri) {
    return [thisRelation.isHide === false ? _c("g", { key: "l-" + thisRelation.id }, [_c("path", {
      staticClass: "c-rg-line",
      class: [thisRelation.styleClass, _vm.graphSetting.checkedLineId == _vm.lineProps.seeks_id ? "c-rg-line-checked" : ""],
      style: {
        "stroke-width": (thisRelation.lineWidth ? thisRelation.lineWidth : _vm.graphSetting.defaultLineWidth) + "px"
      },
      attrs: {
        d: _vm.createLinePath(_vm.lineProps.fromNode, _vm.lineProps.toNode, ri, thisRelation),
        stroke: thisRelation.color ? thisRelation.color : _vm.graphSetting.defaultLineColor,
        "marker-end": _vm.getArrow(thisRelation.isHideArrow, thisRelation.arrow, thisRelation.color),
        fill: "none"
      },
      on: {
        click: function ($event) {
          return _vm.onClick($event);
        }
      }
    }), _vm._v(" "), _vm.graphSetting.defaultShowLineLabel && _vm.graphSetting.canvasZoom > 40 ? _c("g", {
      attrs: {
        transform: _vm.getTextTransform(thisRelation, thisRelation.textPositon.x, thisRelation.textPositon.y, thisRelation.textPositon.rotate)
      }
    }, [_c("text", {
      key: "t-" + thisRelation.id,
      staticClass: "c-rg-link-text",
      style: {
        fill: thisRelation.fontColor ? thisRelation.fontColor : thisRelation.color ? thisRelation.color : undefined
      },
      attrs: { x: 0, y: 0 },
      on: {
        click: function ($event) {
          return _vm.onClick($event);
        }
      }
    }, [_vm._v("\n          " + _vm._s(thisRelation.text) + "\n        ")])]) : _vm._e()]) : _vm._e()];
  })], 2) : _vm._e();
};
var SeeksRGLink_staticRenderFns = [];
SeeksRGLink_render._withStripped = true;
var SeeksRGLink_esExports = { render: SeeksRGLink_render, staticRenderFns: SeeksRGLink_staticRenderFns };
/* harmony default export */ var core4vue_SeeksRGLink = (SeeksRGLink_esExports);
if (false) {
  module.hot.accept();
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api").rerender("data-v-99d854b6", SeeksRGLink_esExports);
  }
}
// CONCATENATED MODULE: ./src/core4vue/SeeksRGLink.vue
var SeeksRGLink_disposed = false
function SeeksRGLink_injectStyle (ssrContext) {
  if (SeeksRGLink_disposed) return
  __webpack_require__(14)
}
var SeeksRGLink_normalizeComponent = __webpack_require__(2)
/* script */


/* template */

/* template functional */
var SeeksRGLink___vue_template_functional__ = false
/* styles */
var SeeksRGLink___vue_styles__ = SeeksRGLink_injectStyle
/* scopeId */
var SeeksRGLink___vue_scopeId__ = null
/* moduleIdentifier (server only) */
var SeeksRGLink___vue_module_identifier__ = null
var SeeksRGLink_Component = SeeksRGLink_normalizeComponent(
  SeeksRGLink,
  core4vue_SeeksRGLink,
  SeeksRGLink___vue_template_functional__,
  SeeksRGLink___vue_styles__,
  SeeksRGLink___vue_scopeId__,
  SeeksRGLink___vue_module_identifier__
)
SeeksRGLink_Component.options.__file = "src/core4vue/SeeksRGLink.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-99d854b6", SeeksRGLink_Component.options)
  } else {
    hotAPI.reload("data-v-99d854b6", SeeksRGLink_Component.options)
  }
  module.hot.dispose(function (data) {
    SeeksRGLink_disposed = true
  })
})()}

/* harmony default export */ var src_core4vue_SeeksRGLink = (SeeksRGLink_Component.exports);

// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&index=0!./src/GraphSettingPanel.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


// import SeeksRGStore from './core4vue/SeeksRGStore'
// import { mapState } from 'vuex'
// var _parent = this.$parent
// console.log('GraphSettingPanel.vue:', _parent)
/* harmony default export */ var GraphSettingPanel = ({
  name: 'GraphSettingPanel',
  props: {
    graphSetting: {
      mustUseProp: true,
      default: () => {
        return {};
      },
      type: Object
    }
  },
  data() {
    return {
      search_text: '',
      showSettingPanel: false,
      currentLayoutName: ''
    };
  },
  // computed: mapState({
  //   graphSetting: () => _parent.graphSetting
  // }),
  // watch: {
  //   'graphSetting.layoutName': function(newV, oldV) {
  //     console.log('change layout:', newV, oldV)
  //     SeeksRGLayouters.switchLayout(newV, this.graphSetting)
  //     this.$parent.refresh()
  //   }
  // },
  methods: {
    toggleSettingPanel() {
      this.showSettingPanel = !this.showSettingPanel;
    },
    toggleAutoLayout() {
      if (this.graphSetting.autoLayouting) {
        if (!this.graphSetting.layouter.autoLayout) {
          console.log('当前布局不支持自动布局！');
        } else {
          this.graphSetting.layouter.autoLayout(true);
        }
      } else {
        if (!this.graphSetting.layouter.stop) {
          console.log('当前布局不支持自动布局stop！');
        } else {
          this.graphSetting.layouter.stop();
        }
      }
    },
    switchLayout() {
      if (window.SeeksGraphDebug) console.log('change layout:', this.currentLayoutName);
      core4vue_SeeksRGLayouters.switchLayout(this.currentLayoutName, this.graphSetting);
      this.refresh();
    },
    refresh() {
      this.$parent.refresh();
    }
  }
});
// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{"id":"data-v-337fb259","hasScoped":true,"buble":{"transforms":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/GraphSettingPanel.vue
var GraphSettingPanel_render = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", [_c("div", {
    staticClass: "c-setting-panel-button",
    class: [_vm.$parent.isNeedFixedTools ? "c-fixedLayout" : ""],
    on: { click: _vm.toggleSettingPanel }
  }, [_c("i", { staticClass: "el-icon-setting" })]), _vm._v(" "), _vm.showSettingPanel ? _c("div", {
    staticClass: "c-setting-panel",
    class: [_vm.$parent.isNeedFixedTools ? "c-fixedLayout" : ""]
  }) : _vm._e()]);
};
var GraphSettingPanel_staticRenderFns = [];
GraphSettingPanel_render._withStripped = true;
var GraphSettingPanel_esExports = { render: GraphSettingPanel_render, staticRenderFns: GraphSettingPanel_staticRenderFns };
/* harmony default export */ var selectortype_template_index_0_src_GraphSettingPanel = (GraphSettingPanel_esExports);
if (false) {
  module.hot.accept();
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api").rerender("data-v-337fb259", GraphSettingPanel_esExports);
  }
}
// CONCATENATED MODULE: ./src/GraphSettingPanel.vue
var GraphSettingPanel_disposed = false
function GraphSettingPanel_injectStyle (ssrContext) {
  if (GraphSettingPanel_disposed) return
  __webpack_require__(16)
}
var GraphSettingPanel_normalizeComponent = __webpack_require__(2)
/* script */


/* template */

/* template functional */
var GraphSettingPanel___vue_template_functional__ = false
/* styles */
var GraphSettingPanel___vue_styles__ = GraphSettingPanel_injectStyle
/* scopeId */
var GraphSettingPanel___vue_scopeId__ = "data-v-337fb259"
/* moduleIdentifier (server only) */
var GraphSettingPanel___vue_module_identifier__ = null
var GraphSettingPanel_Component = GraphSettingPanel_normalizeComponent(
  GraphSettingPanel,
  selectortype_template_index_0_src_GraphSettingPanel,
  GraphSettingPanel___vue_template_functional__,
  GraphSettingPanel___vue_styles__,
  GraphSettingPanel___vue_scopeId__,
  GraphSettingPanel___vue_module_identifier__
)
GraphSettingPanel_Component.options.__file = "src/GraphSettingPanel.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-337fb259", GraphSettingPanel_Component.options)
  } else {
    hotAPI.reload("data-v-337fb259", GraphSettingPanel_Component.options)
  }
  module.hot.dispose(function (data) {
    GraphSettingPanel_disposed = true
  })
})()}

/* harmony default export */ var src_GraphSettingPanel = (GraphSettingPanel_Component.exports);

// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&index=0!./src/GraphMiniView.vue
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var GraphMiniView = ({
  name: 'GraphMiniView',
  props: {
    graphSetting: {
      mustUseProp: true,
      default: () => {
        return {};
      },
      type: Object
    }
  },
  data() {
    return {
      zoom: 1
    };
  },
  mounted() {},
  methods: {
    getPositionData() {
      var _c_width = 100;
      var _r = _c_width / this.graphSetting.canvasNVInfo.width;
      var _width = this.graphSetting.viewNVInfo.width * _r;
      var _height = this.graphSetting.viewNVInfo.height * _r;
      var _view_x = (this.graphSetting.viewNVInfo.x - this.graphSetting.canvasNVInfo.x) * _r;
      var _view_y = (this.graphSetting.viewNVInfo.y - this.graphSetting.canvasNVInfo.y) * _r;
      if (_width > 100) {
        _height = _height * 100 / _width;
        _view_x = _view_x * 100 / _width;
        _view_y = _view_y * 100 / _width;
        this.zoom = 100 / _width;
        _width = 100;
      } else {
        this.zoom = 1;
      }
      // console.log('Mini View style:', _view_center_x, _canvas_center_x)
      var style = {
        width: _width + 'px',
        height: _height + 'px',
        'margin-left': _view_x + 'px',
        'margin-top': _view_y + 'px'
      };
      return style;
    },
    isAllowShowNode(nodeData) {
      return core4vue_SeeksGraphMath.isAllowShowNode(nodeData);
    }
  }
});
// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{"id":"data-v-fe70423e","hasScoped":true,"buble":{"transforms":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/GraphMiniView.vue
var GraphMiniView_render = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", { ref: "miniView", staticClass: "c-mini-graph" }, [_c("div", {
    staticClass: "c-mini-canvas",
    style: {
      width: 100 * _vm.zoom + "px",
      height: _vm.graphSetting.canvasNVInfo.height * 100 / _vm.graphSetting.canvasNVInfo.width * _vm.zoom + "px"
    }
  }, [_vm._l(_vm.$parent.nodeViewList, function (thisNode) {
    return [_vm.isAllowShowNode(thisNode) ? _c("div", {
      key: thisNode.id,
      staticClass: "c-mini-node",
      style: {
        "margin-left": thisNode.x * 100 / _vm.graphSetting.canvasSize.width * _vm.zoom + "px",
        "margin-top": thisNode.y * 100 / _vm.graphSetting.canvasSize.width * _vm.zoom + "px"
      }
    }) : _vm._e()];
  })], 2), _vm._v(" "), _c("div", { staticClass: "c-mini-view", style: _vm.getPositionData() }, [_c("i", { staticClass: "el-icon-view" })])]);
};
var GraphMiniView_staticRenderFns = [];
GraphMiniView_render._withStripped = true;
var GraphMiniView_esExports = { render: GraphMiniView_render, staticRenderFns: GraphMiniView_staticRenderFns };
/* harmony default export */ var selectortype_template_index_0_src_GraphMiniView = (GraphMiniView_esExports);
if (false) {
  module.hot.accept();
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api").rerender("data-v-fe70423e", GraphMiniView_esExports);
  }
}
// CONCATENATED MODULE: ./src/GraphMiniView.vue
var GraphMiniView_disposed = false
function GraphMiniView_injectStyle (ssrContext) {
  if (GraphMiniView_disposed) return
  __webpack_require__(18)
}
var GraphMiniView_normalizeComponent = __webpack_require__(2)
/* script */


/* template */

/* template functional */
var GraphMiniView___vue_template_functional__ = false
/* styles */
var GraphMiniView___vue_styles__ = GraphMiniView_injectStyle
/* scopeId */
var GraphMiniView___vue_scopeId__ = "data-v-fe70423e"
/* moduleIdentifier (server only) */
var GraphMiniView___vue_module_identifier__ = null
var GraphMiniView_Component = GraphMiniView_normalizeComponent(
  GraphMiniView,
  selectortype_template_index_0_src_GraphMiniView,
  GraphMiniView___vue_template_functional__,
  GraphMiniView___vue_styles__,
  GraphMiniView___vue_scopeId__,
  GraphMiniView___vue_module_identifier__
)
GraphMiniView_Component.options.__file = "src/GraphMiniView.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-fe70423e", GraphMiniView_Component.options)
  } else {
    hotAPI.reload("data-v-fe70423e", GraphMiniView_Component.options)
  }
  module.hot.dispose(function (data) {
    GraphMiniView_disposed = true
  })
})()}

/* harmony default export */ var src_GraphMiniView = (GraphMiniView_Component.exports);

// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&index=0!./src/GraphMiniToolBar.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


/* harmony default export */ var GraphMiniToolBar = ({
  name: 'GraphMiniToolBar',
  props: {
    graphSetting: {
      mustUseProp: true,
      default: () => {
        return {};
      },
      type: Object
    }
  },
  data() {
    return {
      height: 275,
      hits: 0,
      downloadPanelWidth: 106
    };
  },
  // watch: {
  //   'graphSetting.layoutName': function(newV, oldV) {
  //     console.log('change layout:', newV, oldV)
  //     SeeksRGLayouters.switchLayout(newV, this.graphSetting)
  //     this.refresh()
  //   }
  // },
  mounted() {
    if (this.$parent.onDownloadExcel !== null) {
      this.downloadPanelWidth += 50;
    }
    if (this.graphSetting.layouts.length > 1) {
      this.height -= 40;
    }
  },
  methods: {
    refresh() {
      this.$parent.refresh();
    },
    switchLayout(layoutConfig) {
      if (window.SeeksGraphDebug) console.log('change layout:', layoutConfig);
      core4vue_SeeksRGLayouters.switchLayout(layoutConfig, this.graphSetting);
      this.refresh();
    },
    toggleAutoLayout() {
      // console.log('this.graphSetting.autoLayouting', this.graphSetting.autoLayouting)
      this.graphSetting.autoLayouting = !this.graphSetting.autoLayouting;
      if (this.graphSetting.autoLayouting) {
        if (!this.graphSetting.layouter.autoLayout) {
          console.log('当前布局不支持自动布局！');
        } else {
          this.graphSetting.layouter.autoLayout(true);
        }
      } else {
        if (!this.graphSetting.layouter.stop) {
          console.log('当前布局不支持自动布局stop！');
        } else {
          this.graphSetting.layouter.stop();
        }
      }
    },
    printGraphJsonData() {
      this.hits++;
      setTimeout(() => {
        if (this.hits > 0) this.hits--;
      }, 2000);
      if (this.hits > 5) {
        this.hits = 0;
        this.$parent.printGraphJsonData();
      }
    }
  }
});
// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{"id":"data-v-3cfdb1cf","hasScoped":true,"buble":{"transforms":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/GraphMiniToolBar.vue
var GraphMiniToolBar_render = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticClass: "c-mini-toolbar",
    style: {
      "margin-left": _vm.graphSetting.viewELSize.width - 50 + "px",
      "margin-top": (_vm.graphSetting.viewELSize.height - 260) / 2 + "px"
    }
  }, [_c("div", {
    staticClass: "c-mb-button",
    staticStyle: { "margin-top": "0px" },
    on: {
      click: function ($event) {
        _vm.graphSetting.fullscreen = !_vm.graphSetting.fullscreen;
      }
    }
  }, [_c("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [_c("use", { attrs: { "xlink:href": "#icon-resize-" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v(_vm._s(_vm.graphSetting.fullscreen ? "退出" : "全屏"))])]), _vm._v(" "), _vm.graphSetting.allowShowZoomMenu ? _c("div", {
    staticClass: "c-mb-button",
    on: {
      click: function ($event) {
        return _vm.$parent.zoom(20);
      }
    }
  }, [_c("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [_c("use", { attrs: { "xlink:href": "#icon-fangda" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("放大")])]) : _vm._e(), _vm._v(" "), _vm.graphSetting.allowShowZoomMenu ? _c("div", {
    staticStyle: {
      float: "left",
      "margin-top": "0px",
      height: "20px",
      width: "40px",
      "border-top": "0px",
      "border-bottom": "0px",
      "background-color": "#efefef",
      color: "#262626",
      "font-size": "10px",
      "text-align": "center",
      "line-height": "20px"
    },
    on: { click: _vm.printGraphJsonData }
  }, [_vm._v(_vm._s(_vm.graphSetting.canvasZoom) + "%")]) : _vm._e(), _vm._v(" "), _vm.graphSetting.allowShowZoomMenu ? _c("div", {
    staticClass: "c-mb-button",
    staticStyle: { "margin-top": "0px" },
    on: {
      click: function ($event) {
        return _vm.$parent.zoom(-20);
      }
    }
  }, [_c("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [_c("use", { attrs: { "xlink:href": "#icon-suoxiao" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("缩小")])]) : _vm._e(), _vm._v(" "), _vm.graphSetting.layouts.length > 1 ? _c("div", { staticClass: "c-mb-button" }, [_c("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [_c("use", { attrs: { "xlink:href": "#icon-yuanquanfenxiang" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("布局")]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-child-panel",
    style: {
      width: _vm.graphSetting.layouts.length * 70 + 6 + "px",
      "margin-left": _vm.graphSetting.layouts.length * -70 - 5 + "px"
    }
  }, _vm._l(_vm.graphSetting.layouts, function (thisLayoutSetting) {
    return _c("div", {
      key: thisLayoutSetting.label,
      staticClass: "c-mb-button c-mb-button-c",
      class: {
        "c-mb-button-on": _vm.graphSetting.layoutLabel === thisLayoutSetting.label
      },
      staticStyle: { width: "70px" },
      on: {
        click: function ($event) {
          return _vm.switchLayout(thisLayoutSetting);
        }
      }
    }, [_c("svg", {
      staticClass: "rg-icon",
      attrs: { "aria-hidden": "true" }
    }, [_c("use", {
      attrs: { "xlink:href": "#icon-yuanquanfenxiang" }
    })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v(_vm._s(thisLayoutSetting.label))])]);
  }), 0)]) : _vm._e(), _vm._v(" "), _vm.graphSetting.allowSwitchLineShape ? _c("div", { staticClass: "c-mb-button" }, [_c("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [_c("use", { attrs: { "xlink:href": "#icon-hj2" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("线条")]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-child-panel",
    staticStyle: { width: "256px", "margin-left": "-255px" }
  }, [_c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    class: {
      "c-mb-button-on": _vm.graphSetting.defaultLineShape === 1
    },
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        _vm.graphSetting.defaultLineShape = 1;
      }
    }
  }, [_c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", { attrs: { "xlink:href": "#icon-hj2" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("直线")])]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    class: {
      "c-mb-button-on": _vm.graphSetting.defaultLineShape === 2
    },
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        _vm.graphSetting.defaultLineShape = 2;
      }
    }
  }, [_c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", {
    attrs: { "xlink:href": "#icon-lianjieliu" }
  })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("简洁")])]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    class: {
      "c-mb-button-on": _vm.graphSetting.defaultLineShape === 6
    },
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        _vm.graphSetting.defaultLineShape = 6;
      }
    }
  }, [_c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", {
    attrs: { "xlink:href": "#icon-lianjieliu" }
  })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("生动")])]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    class: {
      "c-mb-button-on": _vm.graphSetting.defaultLineShape === 5
    },
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        _vm.graphSetting.defaultLineShape = 5;
      }
    }
  }, [_c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", {
    attrs: { "xlink:href": "#icon-lianjieliu" }
  })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("鱼尾")])]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    class: {
      "c-mb-button-on": _vm.graphSetting.defaultLineShape === 4
    },
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        _vm.graphSetting.defaultLineShape = 4;
      }
    }
  }, [_c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", { attrs: { "xlink:href": "#icon-hj2" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("折线")])])])]) : _vm._e(), _vm._v(" "), _vm.graphSetting.allowSwitchJunctionPoint ? _c("div", { staticClass: "c-mb-button" }, [_c("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [_c("use", {
    attrs: { "xlink:href": "#icon-lianjie_connecting5" }
  })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("连接点")]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-child-panel",
    staticStyle: { width: "206px", "margin-left": "-205px" }
  }, [_c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    class: {
      "c-mb-button-on": _vm.graphSetting.defaultJunctionPoint === "border"
    },
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        _vm.graphSetting.defaultJunctionPoint = "border";
      }
    }
  }, [_c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", {
    attrs: { "xlink:href": "#icon-lianjie_connecting5" }
  })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("边缘")])]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    class: {
      "c-mb-button-on": _vm.graphSetting.defaultJunctionPoint === "ltrb"
    },
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        _vm.graphSetting.defaultJunctionPoint = "ltrb";
      }
    }
  }, [_c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", {
    attrs: { "xlink:href": "#icon-lianjie_connecting5" }
  })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("四点")])]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    class: {
      "c-mb-button-on": _vm.graphSetting.defaultJunctionPoint === "tb"
    },
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        _vm.graphSetting.defaultJunctionPoint = "tb";
      }
    }
  }, [_c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", {
    attrs: { "xlink:href": "#icon-lianjie_connecting5" }
  })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("上下")])]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    class: {
      "c-mb-button-on": _vm.graphSetting.defaultJunctionPoint === "lr"
    },
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        _vm.graphSetting.defaultJunctionPoint = "lr";
      }
    }
  }, [_c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", {
    attrs: { "xlink:href": "#icon-lianjie_connecting5" }
  })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("左右")])])])]) : _vm._e(), _vm._v(" "), _vm.graphSetting.isNeedShowAutoLayoutButton ? _c("div", {
    staticClass: "c-mb-button",
    class: { "c-mb-button-on": _vm.graphSetting.autoLayouting },
    attrs: {
      title: _vm.graphSetting.autoLayouting ? "点击停止自动布局" : "点击开始自动调整布局"
    },
    on: { click: _vm.toggleAutoLayout }
  }, [!_vm.graphSetting.autoLayouting ? _c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", { attrs: { "xlink:href": "#icon-zidong" } })]) : _c("svg", {
    staticClass: "c-loading-icon rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", {
    attrs: { "xlink:href": "#icon-lianjiezhong" }
  })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("自动")])]) : _vm._e(), _vm._v(" "), _c("div", { staticClass: "c-mb-button", on: { click: _vm.refresh } }, [_c("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [_c("use", { attrs: { "xlink:href": "#icon-ico_reset" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("刷新")])]), _vm._v(" "), _c("div", { staticClass: "c-mb-button" }, [_c("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [_c("use", { attrs: { "xlink:href": "#icon-ziyuan" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("下载")]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-child-panel",
    style: {
      width: _vm.downloadPanelWidth + "px",
      "margin-left": _vm.downloadPanelWidth * -1 + "px"
    }
  }, [_c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        return _vm.$parent.downloadAsImage("png");
      }
    }
  }, [_c("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [_c("use", { attrs: { "xlink:href": "#icon-tupian" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("PNG")])]), _vm._v(" "), _c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        return _vm.$parent.downloadAsImage("jpg");
      }
    }
  }, [_c("svg", { staticClass: "rg-icon", attrs: { "aria-hidden": "true" } }, [_c("use", { attrs: { "xlink:href": "#icon-tupian" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("JPG")])]), _vm._v(" "), typeof _vm.$parent.onDownloadExcel === "function" ? _c("div", {
    staticClass: "c-mb-button c-mb-button-c",
    staticStyle: { width: "50px" },
    on: {
      click: function ($event) {
        return _vm.$parent.onDownloadExcel();
      }
    }
  }, [_c("svg", {
    staticClass: "rg-icon",
    attrs: { "aria-hidden": "true" }
  }, [_c("use", { attrs: { "xlink:href": "#icon-ziyuan" } })]), _vm._v(" "), _c("span", { staticClass: "c-mb-text" }, [_vm._v("Excel")])]) : _vm._e()])])]);
};
var GraphMiniToolBar_staticRenderFns = [];
GraphMiniToolBar_render._withStripped = true;
var GraphMiniToolBar_esExports = { render: GraphMiniToolBar_render, staticRenderFns: GraphMiniToolBar_staticRenderFns };
/* harmony default export */ var selectortype_template_index_0_src_GraphMiniToolBar = (GraphMiniToolBar_esExports);
if (false) {
  module.hot.accept();
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api").rerender("data-v-3cfdb1cf", GraphMiniToolBar_esExports);
  }
}
// CONCATENATED MODULE: ./src/GraphMiniToolBar.vue
var GraphMiniToolBar_disposed = false
function GraphMiniToolBar_injectStyle (ssrContext) {
  if (GraphMiniToolBar_disposed) return
  __webpack_require__(20)
}
var GraphMiniToolBar_normalizeComponent = __webpack_require__(2)
/* script */


/* template */

/* template functional */
var GraphMiniToolBar___vue_template_functional__ = false
/* styles */
var GraphMiniToolBar___vue_styles__ = GraphMiniToolBar_injectStyle
/* scopeId */
var GraphMiniToolBar___vue_scopeId__ = "data-v-3cfdb1cf"
/* moduleIdentifier (server only) */
var GraphMiniToolBar___vue_module_identifier__ = null
var GraphMiniToolBar_Component = GraphMiniToolBar_normalizeComponent(
  GraphMiniToolBar,
  selectortype_template_index_0_src_GraphMiniToolBar,
  GraphMiniToolBar___vue_template_functional__,
  GraphMiniToolBar___vue_styles__,
  GraphMiniToolBar___vue_scopeId__,
  GraphMiniToolBar___vue_module_identifier__
)
GraphMiniToolBar_Component.options.__file = "src/GraphMiniToolBar.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-3cfdb1cf", GraphMiniToolBar_Component.options)
  } else {
    hotAPI.reload("data-v-3cfdb1cf", GraphMiniToolBar_Component.options)
  }
  module.hot.dispose(function (data) {
    GraphMiniToolBar_disposed = true
  })
})()}

/* harmony default export */ var src_GraphMiniToolBar = (GraphMiniToolBar_Component.exports);

// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&index=0!./src/GraphMiniNameFilter.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

/* harmony default export */ var GraphMiniNameFilter = ({
  name: 'GraphMiniNameFilter',
  props: {
    graphSetting: {
      mustUseProp: true,
      default: () => {
        return {};
      },
      type: Object
    }
  },
  data() {
    return {};
  },
  mounted() {},
  methods: {}
});
// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{"id":"data-v-7c68081f","hasScoped":true,"buble":{"transforms":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/GraphMiniNameFilter.vue
var GraphMiniNameFilter_render = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticClass: "c-mini-namefilter",
    style: { "margin-left": _vm.graphSetting.viewELSize.width - 350 + "px" }
  });
};
var GraphMiniNameFilter_staticRenderFns = [];
GraphMiniNameFilter_render._withStripped = true;
var GraphMiniNameFilter_esExports = { render: GraphMiniNameFilter_render, staticRenderFns: GraphMiniNameFilter_staticRenderFns };
/* harmony default export */ var selectortype_template_index_0_src_GraphMiniNameFilter = (GraphMiniNameFilter_esExports);
if (false) {
  module.hot.accept();
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api").rerender("data-v-7c68081f", GraphMiniNameFilter_esExports);
  }
}
// CONCATENATED MODULE: ./src/GraphMiniNameFilter.vue
var GraphMiniNameFilter_disposed = false
function GraphMiniNameFilter_injectStyle (ssrContext) {
  if (GraphMiniNameFilter_disposed) return
  __webpack_require__(22)
}
var GraphMiniNameFilter_normalizeComponent = __webpack_require__(2)
/* script */


/* template */

/* template functional */
var GraphMiniNameFilter___vue_template_functional__ = false
/* styles */
var GraphMiniNameFilter___vue_styles__ = GraphMiniNameFilter_injectStyle
/* scopeId */
var GraphMiniNameFilter___vue_scopeId__ = "data-v-7c68081f"
/* moduleIdentifier (server only) */
var GraphMiniNameFilter___vue_module_identifier__ = null
var GraphMiniNameFilter_Component = GraphMiniNameFilter_normalizeComponent(
  GraphMiniNameFilter,
  selectortype_template_index_0_src_GraphMiniNameFilter,
  GraphMiniNameFilter___vue_template_functional__,
  GraphMiniNameFilter___vue_styles__,
  GraphMiniNameFilter___vue_scopeId__,
  GraphMiniNameFilter___vue_module_identifier__
)
GraphMiniNameFilter_Component.options.__file = "src/GraphMiniNameFilter.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-7c68081f", GraphMiniNameFilter_Component.options)
  } else {
    hotAPI.reload("data-v-7c68081f", GraphMiniNameFilter_Component.options)
  }
  module.hot.dispose(function (data) {
    GraphMiniNameFilter_disposed = true
  })
})()}

/* harmony default export */ var src_GraphMiniNameFilter = (GraphMiniNameFilter_Component.exports);

// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&index=0!./src/GraphBottomPanel.vue
//
//
//
//
//
//

// import SeeksRGStore from './core4vue/SeeksRGStore'
// import { mapState } from 'vuex'
// var _parent = this.$parent
// console.log('GraphSettingPanel.vue:', _parent)
/* harmony default export */ var GraphBottomPanel = ({
  name: 'GraphBottomPanel',
  props: {
    graphSetting: {
      mustUseProp: true,
      default: () => {
        return {};
      },
      type: Object
    }
  },
  data() {
    return {
      height: 50,
      search_text: ''
    };
  },
  mounted() {
    this.$nextTick(() => {
      this.height = this.$slots['bottomPanel'][0].elm.offsetHeight;
      if (window.SeeksGraphDebug) console.log('SeeksGraph bootomPanel height:', this.height);
    });
  },
  methods: {}
});
// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{"id":"data-v-161dbae4","hasScoped":true,"buble":{"transforms":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/GraphBottomPanel.vue
var GraphBottomPanel_render = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    staticClass: "c-rg-bottom-panel",
    style: {
      "margin-topd": _vm.graphSetting.viewSize.height - _vm.height + "px",
      height: _vm.height + "px",
      "margin-top": -_vm.height + "px"
    }
  }, [_vm._t("bottomPanel")], 2);
};
var GraphBottomPanel_staticRenderFns = [];
GraphBottomPanel_render._withStripped = true;
var GraphBottomPanel_esExports = { render: GraphBottomPanel_render, staticRenderFns: GraphBottomPanel_staticRenderFns };
/* harmony default export */ var selectortype_template_index_0_src_GraphBottomPanel = (GraphBottomPanel_esExports);
if (false) {
  module.hot.accept();
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api").rerender("data-v-161dbae4", GraphBottomPanel_esExports);
  }
}
// CONCATENATED MODULE: ./src/GraphBottomPanel.vue
var GraphBottomPanel_disposed = false
function GraphBottomPanel_injectStyle (ssrContext) {
  if (GraphBottomPanel_disposed) return
  __webpack_require__(24)
}
var GraphBottomPanel_normalizeComponent = __webpack_require__(2)
/* script */


/* template */

/* template functional */
var GraphBottomPanel___vue_template_functional__ = false
/* styles */
var GraphBottomPanel___vue_styles__ = GraphBottomPanel_injectStyle
/* scopeId */
var GraphBottomPanel___vue_scopeId__ = "data-v-161dbae4"
/* moduleIdentifier (server only) */
var GraphBottomPanel___vue_module_identifier__ = null
var GraphBottomPanel_Component = GraphBottomPanel_normalizeComponent(
  GraphBottomPanel,
  selectortype_template_index_0_src_GraphBottomPanel,
  GraphBottomPanel___vue_template_functional__,
  GraphBottomPanel___vue_styles__,
  GraphBottomPanel___vue_scopeId__,
  GraphBottomPanel___vue_module_identifier__
)
GraphBottomPanel_Component.options.__file = "src/GraphBottomPanel.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-161dbae4", GraphBottomPanel_Component.options)
  } else {
    hotAPI.reload("data-v-161dbae4", GraphBottomPanel_Component.options)
  }
  module.hot.dispose(function (data) {
    GraphBottomPanel_disposed = true
  })
})()}

/* harmony default export */ var src_GraphBottomPanel = (GraphBottomPanel_Component.exports);

// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=script&index=0!./src/index.vue
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//















/* harmony default export */ var selectortype_script_index_0_src = ({
  name: 'SeeksRelationGraph',
  components: { GraphBottomPanel: src_GraphBottomPanel, GraphMiniNameFilter: src_GraphMiniNameFilter, GraphMiniToolBar: src_GraphMiniToolBar, GraphMiniView: src_GraphMiniView, SeeksRGNode: src_core4vue_SeeksRGNode, SeeksRGLink: src_core4vue_SeeksRGLink, GraphSettingPanel: src_GraphSettingPanel },
  props: {
    options: {
      mustUseProp: false,
      default: () => {
        return {};
      },
      type: Object
    },
    onNodeClick: {
      mustUseProp: false,
      default: () => {
        return () => {};
      },
      type: Function
    },
    onNodeExpand: {
      mustUseProp: false,
      default: () => {
        return () => {};
      },
      type: Function
    },
    onNodeCollapse: {
      mustUseProp: false,
      default: () => {
        return () => {};
      },
      type: Function
    },
    onLineClick: {
      mustUseProp: false,
      default: () => {
        return () => {};
      },
      type: Function
    },
    onDownloadExcel: {
      mustUseProp: false,
      default: null,
      type: Function
    },
    beforeDownloadImage: {
      mustUseProp: false,
      default: null,
      type: Function
    }
  },
  data() {
    var wheelEvent = {};
    // console.log('this.options.disableZoom:', this.options.disableZoom)
    // if (this.options.disableZoom) {
    //   wheelEvent = {
    //     'mousewheel':this.mouseListener
    //   }
    // } else {
    //   wheelEvent = {
    //     'mousewheel':this.mouseListener
    //   }
    //   console.log('wheelEvent:', wheelEvent)
    // }
    return {
      wheelEvent,
      version: '1.1.0',
      el: {
        offsetWidth: 500,
        offsetHeight: 500,
        offsetTop: 0,
        offsetLeft: 0
      },
      canvasBackgroundColor: 'transparent',
      isNeedFixedTools: false,
      isNeedFixedTools4Bottom: false,
      seeksNodeIdIndex: 1,
      search_text: '',
      instanceId: '',
      SeeksRGStore: null,
      graphSetting: {},
      graphData: {
        nodes: [],
        lines: [],
        rootNode: null,
        nodes_map: {},
        lines_map: {}
      },
      nodeViewList: [],
      lineViewList: [],
      allLineColors: [],
      viewOffset: {
        windowHeight: 500,
        positionTop: 100,
        left: 0,
        top: 0
      },
      viewSizeIsInited: false,
      isShowZoomCenter: false,
      debugPanelPosition: true,
      zoomCenter_of_newSize: { x: 0, y: 0 },
      currentZoomSet: null,
      newZoomSet: null,
      alive: true
    };
  },
  computed: {
    canvasSizeAndPosition() {
      return {
        'width': this.graphSetting.canvasSize.width + 'px',
        'height': this.graphSetting.canvasSize.height + 'px',
        'margin-left': this.graphSetting.canvasOffset.x + 'px',
        'margin-top': this.graphSetting.canvasOffset.y + 'px',
        'background-color': this.canvasBackgroundColor,
        'transform': 'scale(' + this.graphSetting.canvasZoom / 100 + ',' + this.graphSetting.canvasZoom / 100 + ')'
        // 'transform-origin': (this.graphSetting.canvasOffset.zoom_buff_x * 100).toFixed(2) + '% ' + (this.graphSetting.canvasOffset.zoom_buff_y * 100).toFixed(2) + '%'
      };
    }
  },
  watch: {
    'graphSetting.fullscreen': function (newV, oldV) {
      if (oldV === true || oldV === false) {
        external___root___screenfull___commonjs___screenfull___commonjs2___screenfull___amd___screenfull___default.a.toggle(this.$refs.seeksRelationGraph);
      }
    }
  },
  created() {
    this.SeeksRGStore = core4vue_SeeksRGStore.createNewStore(this.options || {});
    this.graphSetting = this.SeeksRGStore.graphSetting;
    this.graphSetting.instanceId = 'SRG' + parseInt(Math.random() * 100000);
    console.log(`%c relation-graph %c Version v${this.version} %c More info: https://github.com/seeksdream/relation-graph %c`, 'background:#35495e ; padding: 1px; border-radius: 3px 0 0 3px;  color: #fff', 'background:#41b883 ; padding: 1px; border-radius: 0 3px 3px 0;  color: #fff', 'background:#fff ; padding: 1px; border-radius: 0 3px 3px 0;  color: #41b883', 'background:transparent');
    if (external___root___Vue___commonjs___vue___commonjs2___vue___amd___vue___default.a.version.substring(0, 4) === '2.5.') {
      console.log('注意：当你使用的vue版本低于2.6时，你只能通过插槽slot[node]来显示节点内容，示例请参考：http://relation-graph.com/#/demo/adv-slot');
    }
  },
  mounted() {
    this.init();
    window.addEventListener('scroll', function () {
      this.syncToolsPosition();
    }.bind(this));
    // setInterval(function() {
    //   this.showZoomCenter()
    // }.bind(this), 1000)
  },
  beforeDestroy() {
    this.alive = false;
    const elx = this.$refs.seeksRelationGraph;
    elx.remove();
  },
  show() {
    this.resetViewSize();
    this.refreshNVAnalysisInfo();
    this.syncToolsPosition();
  },
  methods: {
    // getCanvasSizeAndPosition() {
    //   console.log('重新计算:getCanvasSizeAndPosition')
    //   return {
    //     'width': this.graphSetting.canvasSize.width + 'px',
    //     'height': this.graphSetting.canvasSize.height + 'px',
    //     'margin-left': (this.graphSetting.canvasOffset.x) + 'px',
    //     'margin-top': (this.graphSetting.canvasOffset.y) + 'px',
    //     'background-color': this.canvasBackgroundColor,
    //     'transform': 'scale(' + this.graphSetting.canvasZoom / 100 + ',' + this.graphSetting.canvasZoom / 100 + ')'
    //     // 'transform-origin': (this.graphSetting.canvasOffset.zoom_buff_x * 100).toFixed(2) + '% ' + (this.graphSetting.canvasOffset.zoom_buff_y * 100).toFixed(2) + '%'
    //   }
    // },
    init() {
      this.$refs.rgCanvas.style.setProperty('--stroke', 'url(\'#' + this.graphSetting.instanceId + '-lineStyle\')');
      this.$refs.rgCanvas.style.setProperty('--markerEnd', 'url(\'#' + this.graphSetting.instanceId + '-arrow-default\')');
      this.$refs.rgCanvas.style.setProperty('--markerEndChecked', 'url(\'#' + this.graphSetting.instanceId + '-arrow-checked\')');
      // console.log('#############Seeks graph viewSize:', this.graphSetting.viewSize.width, this.graphSetting.viewSize.height)
      this.cycleTask();
      this.resetViewSize();
      this.refreshNVAnalysisInfo();
      this.syncToolsPosition();
    },
    cycleTask() {
      if (this.alive) {
        var _box = this.$refs.seeksRelationGraph.getBoundingClientRect();
        if (_box.width !== this.graphSetting.viewSize.width || _box.height !== this.graphSetting.viewSize.height) {
          if (window.SeeksGraphDebug) console.log('relation-graph:view-size-changed:', [this.graphSetting.viewSize.width, this.graphSetting.viewSize.height], [_box.width, _box.height]);
          this.graphSetting.viewSize.width = _box.width;
          this.graphSetting.viewSize.height = _box.height;
          this.resetViewSize();
          this.refreshNVAnalysisInfo();
          this.wow();
          if (this.viewSizeIsInited && this.graphSetting.moveToCenterWhenResize) {
            if (window.SeeksGraphDebug) console.log('relation-graph:move to center:', [this.graphSetting.viewSize.width, this.graphSetting.viewSize.height], [_box.width, _box.height]);
            this.$nextTick(() => {
              // this.focusRootNode()
              var _min_x = 9999999;
              var _min_y = 9999999;
              var _max_x = 0;
              var _max_y = 0;
              this.nodeViewList.forEach(thisNode => {
                if (thisNode.x < _min_x) {
                  _min_x = thisNode.x;
                }
                if (thisNode.x > _max_x) {
                  _max_x = thisNode.x + thisNode.el.offsetWidth;
                }
                if (thisNode.y < _min_y) {
                  _min_y = thisNode.y;
                }
                if (thisNode.y > _max_y) {
                  _max_y = thisNode.y + thisNode.el.offsetHeight;
                }
              });
              var _stuff_width = _max_x - _min_x + 50;
              var _stuff_height = _max_y - _min_y + 50;
              var _final_x = (this.graphSetting.viewSize.width - _stuff_width) / 2 - _min_x;
              var _final_y = (this.graphSetting.viewSize.height - _stuff_height) / 2 - _min_y;
              // if (window.SeeksGraphDebug) console.log('_min_x, _min_y, _stuff_width, _stuff_height:', _min_x, _min_y, _stuff_width, _stuff_height)
              // var _final_x = -_min_x
              // var _final_y = -_min_y
              this.animateGoto(_final_x, _final_y, 500, () => {
                // this.graphSetting.checkedNodeId = thisNode.id
                this.refreshNVAnalysisInfo();
              });
            });
          }
        }
        setTimeout(() => {
          this.cycleTask();
        }, 1000);
      }
    },
    setOptions(options, callback) {
      this.SeeksRGStore = core4vue_SeeksRGStore.createNewStore(options);
      this.graphSetting = this.SeeksRGStore.graphSetting;
      this.graphSetting.instanceId = 'SRG' + parseInt(Math.random() * 100000);
      this.init();
      if (this.graphSetting.layouts && this.graphSetting.layouts.length > 0) {
        var _defaultLayoutSetting = this.graphSetting.layouts[0];
        if (window.SeeksGraphDebug) console.log('创建默认布局器：', this.graphSetting.layoutName);
        if (_defaultLayoutSetting.layouter) {
          this.graphSetting.layouter = _defaultLayoutSetting.layouter;
        } else {
          this.graphSetting.layouter = core4vue_SeeksRGLayouters.createLayout(_defaultLayoutSetting, this.graphSetting);
        }
      } else {
        console.log('你需要设置layouts来指定当前图谱可以使用的布局器！');
      }
      this.doLayout();
      callback(this);
    },
    moveDebugPanel() {
      this.debugPanelPosition = !this.debugPanelPosition;
    },
    mouseListenerEmpty() {
      console.log('mouseListenerEmpty');
    },
    mouseListener(e) {
      // if (e.target !== this.$refs.seeksRGCanvas) {
      //   return
      // }
      // e.stopPropagation()
      // console.log('mouseListener')
      if (this.graphSetting.disableZoom) {
        e.cancelBubble = false;
        return true;
      }
      try {
        e.cancelBubble = true;
        e.preventDefault();
        e.stopPropagation();
      } catch (e) {
        // xxx
      }
      var userZoomCenter = {
        x: e.clientX,
        y: e.clientY
        // console.log('---- center:', userZoomCenter.x, userZoomCenter.y)
      };var _isMac = /macintosh|mac os x/i.test(navigator.userAgent);
      var _deltaY = e.deltaY;
      if (_deltaY === undefined) {
        _deltaY = e.wheelDelta;
      }
      // console.log('mouseListenerEmpty:', _isMac, e.deltaY, e.wheelDelta, e.which, e.detail)
      var _zoomDirection = _isMac ? 1 : -1;
      if (_deltaY > 0) {
        this.zoom(5 * _zoomDirection, userZoomCenter);
      } else {
        this.zoom(-5 * _zoomDirection, userZoomCenter);
      }
    },
    getPositionOfCanvas(e) {
      var userZoomCenter = {
        x: e.offsetX,
        y: e.offsetY
      };
      if (window.SeeksGraphDebug) console.log('[F]', userZoomCenter.x, userZoomCenter.y);
      var currentNode = e.target.parentNode;
      for (var i = 0; i < 8; i++) {
        if (i > 6) {
          if (window.SeeksGraphDebug) console.log('getPositionOfCanvas error', e);
        }
        if (currentNode.classList.contains('rel-map-canvas')) {
          if (window.SeeksGraphDebug) console.log('[S]', currentNode.tagName + '.' + currentNode.className);
          break;
        } else {
          userZoomCenter.x += currentNode.offsetLeft || 0;
          userZoomCenter.y += currentNode.offsetTop || 0;
          if (window.SeeksGraphDebug) console.log('[' + i + ']', currentNode.tagName + '.' + currentNode.className, ':', currentNode.offsetLeft, currentNode.offsetTop);
          currentNode = currentNode.parentNode;
        }
      }
      if (window.SeeksGraphDebug) console.log('[F]', userZoomCenter.x, userZoomCenter.y);
      return userZoomCenter;
    },
    zoom(buff, userZoomCenter) {
      if (this.graphSetting.canvasZoom + buff < 10) {
        return;
      }
      var __new_zoom_value = this.graphSetting.canvasZoom + buff;
      var zoomCenter = this.showZoomCenter(userZoomCenter, buff);
      // console.log('zoomCenter:', zoomCenter.x, zoomCenter.y)
      // if (userZoomCenter) return
      // this.graphSetting.canvasOffset.zoom_buff_x = zoomCenter.buff_x
      // this.graphSetting.canvasOffset.zoom_buff_y = zoomCenter.buff_y
      // var _buff_x = this.canvasCenter.x - zoomCenter.x
      // var _buff_y = this.canvasCenter.y - zoomCenter.y
      // console.log('offset buff:', _buff_x.toFixed(0), _buff_y.toFixed(0))
      // this.graphSetting.canvasOffset.zoom_buff_x = _buff_x * ((this.graphSetting.canvasZoom - 100) / 100)
      // this.graphSetting.canvasOffset.zoom_buff_y = _buff_y * ((this.graphSetting.canvasZoom - 100) / 100)
      this.graphSetting.canvasOffset.x += zoomCenter.buff_x;
      this.graphSetting.canvasOffset.y += zoomCenter.buff_y;
      this.graphSetting.canvasZoom = __new_zoom_value;
      this.refreshNVAnalysisInfo();
    },
    showZoomCenter(userZoomCenter, zoomBuff) {
      if (!this.$refs.seeksRelationGraph) {
        return;
      }
      var _current_zoom = this.graphSetting.canvasZoom / 100;
      var _new_zoom = (this.graphSetting.canvasZoom + zoomBuff) / 100;
      this.currentZoomSet = this.analysisByZoom(_current_zoom, userZoomCenter);
      this.newZoomSet = this.analysisByZoom(_new_zoom, userZoomCenter);
      // console.log('this.currentZoomSet:', this.currentZoomSet)
      // console.log('this.currentZoomSet:', this.newZoomSet)
      const a = _new_zoom / _current_zoom;
      const b = 0;
      const c = 0;
      const d = _new_zoom / _current_zoom;
      var e = 0;
      var f = 0;
      this.zoomCenter_of_newSize.x = a * this.currentZoomSet.NMViewBuff.x + c * this.currentZoomSet.NMViewBuff.y + e;
      this.zoomCenter_of_newSize.y = b * this.currentZoomSet.NMViewBuff.x + d * this.currentZoomSet.NMViewBuff.y + f;
      var buff_x = this.currentZoomSet.NMViewBuff.x - this.zoomCenter_of_newSize.x;
      var buff_y = this.currentZoomSet.NMViewBuff.y - this.zoomCenter_of_newSize.y;
      this.zoomCenter_of_newSize.x += this.currentZoomSet.NMCanvasCenter.x;
      this.zoomCenter_of_newSize.y += this.currentZoomSet.NMCanvasCenter.y;
      // e = this.currentZoomSet.NMViewBuff.x
      // f = this.currentZoomSet.NMViewBuff.y
      // new start
      var old_x = this.currentZoomSet.NMCanvasStart.x - this.currentZoomSet.NMCanvasCenter.x;
      var old_y = this.currentZoomSet.NMCanvasStart.y - this.currentZoomSet.NMCanvasCenter.y;
      var new_x = a * old_x + c * old_y + e;
      var new_y = b * old_x + d * old_y + f;
      this.newZoomSet.NMCanvasStart.x = buff_x + this.currentZoomSet.NMCanvasCenter.x + new_x;
      this.newZoomSet.NMCanvasStart.y = buff_x + this.currentZoomSet.NMCanvasCenter.y + new_y;
      // new end
      old_x = this.currentZoomSet.NMCanvasEnd.x - this.currentZoomSet.NMCanvasCenter.x;
      old_y = this.currentZoomSet.NMCanvasEnd.y - this.currentZoomSet.NMCanvasCenter.y;
      new_x = a * old_x + c * old_y + e;
      new_y = b * old_x + d * old_y + f;
      this.newZoomSet.NMCanvasEnd.x = buff_x + this.currentZoomSet.NMCanvasCenter.x + new_x;
      this.newZoomSet.NMCanvasEnd.y = buff_x + this.currentZoomSet.NMCanvasCenter.y + new_y;
      this.currentZoomSet.NMCanvasOffsetBuff.x = buff_x;
      this.currentZoomSet.NMCanvasOffsetBuff.y = buff_y;
      // this.isShowZoomCenter = true
      return {
        buff_x, buff_y
      };
    },
    refreshNVAnalysisInfo() {
      if (!this.$refs.seeksRelationGraph) {
        console.error('cannot get view size !');
        return;
      }
      // console.log('reanalysis NV info...')
      var result = {
        NMCanvasCenter: { x: 0, y: 0 }
      };
      var _view_info = this.$refs.seeksRelationGraph.getBoundingClientRect();
      this.graphSetting.viewNVInfo.x = _view_info.left;
      this.graphSetting.viewNVInfo.y = _view_info.top;
      this.graphSetting.viewNVInfo.width = _view_info.width;
      this.graphSetting.viewNVInfo.height = _view_info.height;
      var _NM_canvas_width = this.graphSetting.canvasSize.width * (this.graphSetting.canvasZoom / 100);
      var _NM_canvas_height = this.graphSetting.canvasSize.height * (this.graphSetting.canvasZoom / 100);
      result.NMCanvasCenter.x = this.graphSetting.canvasOffset.x + this.graphSetting.canvasSize.width / 2;
      result.NMCanvasCenter.y = this.graphSetting.canvasOffset.y + this.graphSetting.canvasSize.height / 2;
      this.graphSetting.canvasNVInfo.x = result.NMCanvasCenter.x - _NM_canvas_width / 2;
      this.graphSetting.canvasNVInfo.y = result.NMCanvasCenter.y - _NM_canvas_height / 2;
      this.graphSetting.canvasNVInfo.width = _NM_canvas_width;
      this.graphSetting.canvasNVInfo.height = _NM_canvas_height;
      this.graphSetting.viewELSize.width = _view_info.width;
      this.graphSetting.viewELSize.height = _view_info.height;
      this.graphSetting.viewELSize.left = _view_info.left;
      this.graphSetting.viewELSize.top = _view_info.top;
    },
    analysisByZoom(zoom, userZoomCenter) {
      var result = {
        NMViewPosition: { x: 0, y: 0 },
        NMViewCenter: { x: 0, y: 0 },
        NMCanvasCenter: { x: 0, y: 0 },
        NMCanvasStart: { x: 0, y: 0 },
        NMCanvasEnd: { x: 0, y: 0 },
        NMZoomCenter: { x: 0, y: 0 },
        NMViewBuff: { x: 0, y: 0 },
        NMCanvasOffsetBuff: { x: 0, y: 0 },
        NMCanvasSize: { width: 0, height: 0 }
      };
      const windowWidth = this.getWindowWidth();
      const windowHeight = this.getWindowHeight();
      var _view_info = this.$refs.seeksRelationGraph.getBoundingClientRect();
      result.NMViewPosition.x = _view_info.left;
      result.NMViewPosition.y = _view_info.top;
      if (_view_info.width + result.NMViewPosition.x > windowWidth) {
        result.NMViewCenter.x = (windowWidth - _view_info.left) / 2;
      } else {
        result.NMViewCenter.x = _view_info.width / 2;
      }
      if (_view_info.height + result.NMViewPosition.y > windowHeight) {
        result.NMViewCenter.y = (windowHeight - _view_info.top) / 2;
      } else {
        result.NMViewCenter.y = _view_info.height / 2;
      }
      var _NM_canvas_width = this.graphSetting.canvasSize.width * zoom;
      var _NM_canvas_height = this.graphSetting.canvasSize.height * zoom;
      result.NMCanvasCenter.x = this.graphSetting.canvasOffset.x + this.graphSetting.canvasSize.width / 2; // + (this.graphSetting.canvasOffset.zoom_buff_x * _NM_canvas_width)
      result.NMCanvasCenter.y = this.graphSetting.canvasOffset.y + this.graphSetting.canvasSize.height / 2; // + (this.graphSetting.canvasOffset.zoom_buff_y * _NM_canvas_height)
      result.NMCanvasStart.x = result.NMCanvasCenter.x - _NM_canvas_width / 2;
      result.NMCanvasStart.y = result.NMCanvasCenter.y - _NM_canvas_height / 2;
      result.NMCanvasEnd.x = result.NMCanvasCenter.x + _NM_canvas_width / 2;
      result.NMCanvasEnd.y = result.NMCanvasCenter.y + _NM_canvas_height / 2;
      result.NMZoomCenter.x = result.NMViewCenter.x;
      result.NMZoomCenter.y = result.NMViewCenter.y;
      if (userZoomCenter) {
        result.NMZoomCenter.x = userZoomCenter.x - result.NMViewPosition.x;
        result.NMZoomCenter.y = userZoomCenter.y - result.NMViewPosition.y;
      }
      var _NM_buff_x = result.NMViewCenter.x - result.NMCanvasCenter.x;
      var _NM_buff_y = result.NMViewCenter.y - result.NMCanvasCenter.y;
      if (userZoomCenter) {
        _NM_buff_x = result.NMZoomCenter.x - result.NMCanvasCenter.x;
        _NM_buff_y = result.NMZoomCenter.y - result.NMCanvasCenter.y;
      }
      result.NMViewBuff.x = _NM_buff_x;
      result.NMViewBuff.y = _NM_buff_y;
      result.NMCanvasSize.width = _NM_canvas_width;
      result.NMCanvasSize.height = _NM_canvas_height;
      return result;
    },
    syncToolsPosition() {
      if (window.SeeksGraphDebug) console.log('on scroll...');
      if (!this.$refs.seeksRelationGraph) return;
      const windowHeight = this.getWindowHeight();
      var _box_info = this.$refs.seeksRelationGraph.getBoundingClientRect();
      if (window.SeeksGraphDebug) console.log('syncToolsPosition...');
      // console.log('change layout:', __top, this.$refs.seeksRelationGraph.offsetHeight)
      // console.log(_box_info.top, this.viewOffset.positionTop, (this.viewOffset.windowHeight - this.viewOffset.top))
      var __top = _box_info.top;
      if (this.isNeedFixedTools === false) {
        if (__top + this.$refs.seeksRelationGraph.offsetHeight < 0) {
          this.isNeedFixedTools = false;
        } else {
          if (__top < 0) {
            this.isNeedFixedTools = true;
          }
        }
      } else {
        if (__top > 0) {
          this.isNeedFixedTools = false;
        }
        if (__top + this.$refs.seeksRelationGraph.offsetHeight < 0) {
          this.isNeedFixedTools = false;
        }
      }
      if (__top + this.$refs.seeksRelationGraph.offsetHeight > windowHeight) {
        this.isNeedFixedTools4Bottom = true;
      } else {
        this.isNeedFixedTools4Bottom = false;
      }
    },
    getWindowWidth() {
      return window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
    },
    getWindowHeight() {
      return window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;
    },
    getNodePositionTop(node) {
      if (!node.offsetTop) return 0;
      return node.offsetTop + (node.parentNode ? this.getNodePositionTop(node.parentNode) : 0);
    },
    getNodePositionLeft(node) {
      if (!node.offsetLeft) return 0;
      return node.offsetLeft + (node.parentNode ? this.getNodePositionLeft(node.parentNode) : 0);
    },
    resetViewSize() {
      this.graphSetting.viewSize.width = this.$refs.seeksRelationGraph.getBoundingClientRect().width;
      this.graphSetting.viewSize.height = this.$refs.seeksRelationGraph.getBoundingClientRect().height;
      this.graphSetting.canvasZoom = 100;
      this.SeeksRGStore.resetViewSize();
      this.refreshNVAnalysisInfo();
    },
    loadNodes(_nodes) {
      _nodes.forEach(thisNodeJson => {
        let thisNode = core4vue_SeeksRGUtils.json2Node(thisNodeJson);
        let __isNew = false;
        if (this.graphData.nodes_map[thisNode.id]) {
          thisNode = this.graphData.nodes_map[thisNode.id];
        } else {
          __isNew = true;
        }
        if (__isNew) {
          this.graphData.nodes_map[thisNode.id] = thisNode;
          this.graphData.nodes.push(thisNode);
          thisNode.seeks_id = this.seeksNodeIdIndex++;
          thisNode.appended = false;
        }
      });
    },
    loadLinks(_links) {
      _links.forEach(thisLinkJson => {
        let __isNew = false;
        var __from;
        var __to;
        if (typeof thisLinkJson.from === 'object') {
          __from = thisLinkJson.from;
        } else {
          __from = this.graphData.nodes_map[thisLinkJson.from];
        }
        if (typeof thisLinkJson.to === 'object') {
          __to = thisLinkJson.to;
        } else {
          __to = this.graphData.nodes_map[thisLinkJson.to];
        }
        if (!__from) {
          console.error('找不到from:', thisLinkJson);
          return;
        }
        if (!__to) {
          console.error('找不到to:', thisLinkJson);
          return;
        }
        // console.log('[add link]', __from.text, __to.text, __from.seeks_id, __to.seeks_id, thisLink)
        const lineId1 = __from.seeks_id + '-' + __to.seeks_id;
        const lineId2 = __to.seeks_id + '-' + __from.seeks_id;
        var thisLink = core4vue_SeeksRGUtils.json2Link(thisLinkJson);
        var thisLine;
        var thisLinkIsReserve = false;
        if (this.graphData.lines_map[lineId1]) {
          thisLine = this.graphData.lines_map[lineId1];
        } else {
          if (this.graphData.lines_map[lineId2]) {
            thisLine = this.graphData.lines_map[lineId2];
            thisLinkIsReserve = true;
          } else {
            __isNew = true;
            thisLine = {
              seeks_id: lineId1,
              fromNode: __from,
              toNode: __to,
              appended: false,
              relations: []
            };
          }
        }
        // console.log('new Line Color:', thisLine.color, thisLine.arrow)
        var _arrow = thisLink.arrow;
        if (thisLink.isHideArrow) {
          // do nothing
        } else {
          _arrow = this.getLineArrow(thisLink.color);
        }
        if (!__from.targetNodes) __from.targetNodes = [];
        if (!__to.targetNodes) __to.targetNodes = [];
        if (__from.targetNodes.indexOf(__to) === -1) {
          __from.targetNodes.push(__to);
        }
        if (__to.targetNodes.indexOf(__from) === -1) {
          __to.targetNodes.push(__from);
        }
        if (__from.targetTo.indexOf(__to) === -1) {
          __from.targetTo.push(__to);
        }
        if (__to.targetFrom.indexOf(__from) === -1) {
          __to.targetFrom.push(__from);
        }
        var isDuplicate = false;
        for (var i = 0; i < thisLine.relations.length; i++) {
          if (thisLine.relations[i].id === thisLink.id) {
            isDuplicate = true;
            break;
          }
        }
        if (isDuplicate === false) {
          if (!thisLink.id) thisLink.id = thisLine.seeks_id + '-' + thisLine.relations.length;
          thisLink.isReverse = thisLinkIsReserve;
          thisLink.arrow = _arrow;
          thisLink.textPositon = { x: 0, y: 0 };
          thisLine.relations.push(thisLink);
        }
        // console.log('addLine:', thisLine)
        if (__isNew) {
          this.graphData.lines.push(thisLine);
          this.graphData.lines_map[lineId1] = thisLine;
          thisLine.appended = false;
        }
      });
    },
    getLineArrow(_color) {
      if (_color) {
        var thisColorId = core4vue_SeeksRGUtils.getColorId(_color);
        if (this.allLineColors.map(thisColorObj => {
          return thisColorObj.id;
        }).indexOf(thisColorId) === -1) {
          this.allLineColors.push({ id: thisColorId, color: _color });
        }
        return this.graphSetting.instanceId + '-arrow-' + thisColorId;
      } else {
        return this.graphSetting.instanceId + '-arrow-default';
      }
    },
    flatNodeData(orign_nodes, parentNode, nodes_collect, links_collect) {
      orign_nodes.forEach(thisOrignNode => {
        if (!thisOrignNode.flated) {
          thisOrignNode.flated = true;
          nodes_collect.push(thisOrignNode);
          if (parentNode) {
            links_collect.push({
              from: parentNode.id,
              to: thisOrignNode.id
            });
          }
          var _childs = thisOrignNode.childs || thisOrignNode.children;
          if (_childs && _childs.length > 0) {
            this.flatNodeData(_childs, thisOrignNode, nodes_collect, links_collect);
          }
        }
      });
    },
    loadGraphJsonData(jsonData) {
      // 兼容以前的配置
      if (!jsonData.links) jsonData.links = jsonData.lines;
      if (!jsonData.links) jsonData.links = jsonData.relations;
      var _orign_nodes = jsonData.nodes;
      var _nodes = [];
      var _links = [];
      this.flatNodeData(_orign_nodes, null, _nodes, _links);
      jsonData.links = _links.concat(jsonData.links);
      this.loadNodes(_nodes);
      if (window.SeeksGraphDebug) console.log('节点预处理完毕');
      this.loadLinks(jsonData.links);
    },
    setJsonData(jsonData, callback) {
      this.viewSizeIsInited = true;
      this.nodeViewList = [];
      this.lineViewList = [];
      this.graphData.nodes = [];
      this.graphData.lines = [];
      this.graphData.nodes_map = {};
      this.graphData.lines_map = {};
      this.graphData.rootNode = null;
      console.log('set jsonData::', jsonData);
      this.resetViewSize();
      if (this.graphSetting.layouts && this.graphSetting.layouts.length > 0) {
        var _defaultLayoutSetting = this.graphSetting.layouts[0];
        if (window.SeeksGraphDebug) console.log('创建默认布局器：', this.graphSetting.layoutName);
        if (_defaultLayoutSetting.layouter) {
          this.graphSetting.layouter = _defaultLayoutSetting.layouter;
        } else {
          this.graphSetting.layouter = core4vue_SeeksRGLayouters.createLayout(_defaultLayoutSetting, this.graphSetting);
        }
      } else {
        console.log('你需要设置layouts来指定当前图谱可以使用的布局器！');
      }
      var __root_id = jsonData['rootId'];
      this.loadGraphJsonData(jsonData);
      // console.log('graphData:', this.graphData)
      if (__root_id) {
        this.graphData.rootNode = this.graphData.nodes_map[__root_id];
      }
      if (!this.graphData.rootNode && this.graphData.nodes.length > 0) {
        this.graphData.rootNode = this.graphData.nodes[0];
      }
      this.applyNewDataToCanvas();
      this.resetViewSize();
      this.doLayout();
      if (callback) callback(this);
    },
    applyNewDataToCanvas() {
      this.graphData.nodes.forEach(thisNode => {
        if (thisNode.appended === false) {
          thisNode.appended = true;
          this.nodeViewList.push(thisNode);
        }
      });
      this.graphData.lines.forEach(thisLine => {
        if (thisLine.appended === false) {
          thisLine.appended = true;
          this.lineViewList.push(thisLine);
        }
      });
      if (this.graphData.rootNode) {
        if (this.graphSetting.defaultFocusRootNode) {
          this.graphSetting.checkedNodeId = this.graphData.rootNode.id;
        }
      } else {
        throw Error('没有设置根节点[rootId]！也无法获取根节点!');
      }
    },
    appendJsonData(jsonData, isRelayout, callback) {
      if (arguments.length === 2 && typeof isRelayout === 'function') {
        callback = isRelayout;
        isRelayout = true;
      }
      console.log('appendData:', jsonData);
      this.loadGraphJsonData(jsonData);
      this.applyNewDataToCanvas();
      // this.resetViewSize()
      if (isRelayout) this.doLayout();
      if (callback) callback(this);
    },
    doLayout() {
      if (this.graphSetting.layouter && this.graphData.rootNode) {
        console.log('需要布局的节点数量：', this.graphData.nodes.length);
        this.graphSetting.layouter.placeNodes(this.graphData.nodes, this.graphData.rootNode, this.graphSetting);
      }
      document.body.addEventListener('mousemove', this.wow);
      // document.body.removeEventListener('mousemove', this.graphOnClick)
    },
    refresh() {
      this.resetViewSize();
      this.$nextTick(() => {
        this.graphSetting.layouter.refresh();
        this.refreshNVAnalysisInfo();
        document.body.addEventListener('mousemove', this.wow);
      });
    },
    onDragStart(e) {
      core4vue_SeeksRGUtils.startDrag(e, this.graphSetting.canvasOffset, this.onDragEnd);
    },
    onDragEnd() {
      this.refreshNVAnalysisInfo();
    },
    addEventClick() {
      // window.addEventListener('click', this.graphOnClick)
    },
    // graphOnClick(evt) {
    //   console.log('click graph')
    // },
    wow() {
      if (window.SeeksGraphDebug) console.log('wow.....');
      this.graphSetting.canvasOffset.x = this.graphSetting.canvasOffset.x + 1;
      this.graphSetting.canvasOffset.y = this.graphSetting.canvasOffset.y + 1;
      this.graphSetting.canvasOffset.x = this.graphSetting.canvasOffset.x - 1;
      this.graphSetting.canvasOffset.y = this.graphSetting.canvasOffset.y - 1;
      document.body.removeEventListener('mousemove', this.wow);
    },
    onRGNodeClick(nodeData, e) {
      if (this.onNodeClick) {
        this.onNodeClick(nodeData, e);
      }
      // for (let i = 0; i < this.lineViewList.length; i++) {
      //   var thisLine = this.lineViewList[i]
      //   if (thisLine.fromNode.id === nodeData.id || thisLine.toNode.id === nodeData.id) {
      //     thisLine.flash = thisLine.flash + 1
      //   }
      // }
    },
    onRGLineClick(lineData, e) {
      if (this.onLineClick) {
        this.onLineClick(lineData, e);
      }
      // for (let i = 0; i < this.lineViewList.length; i++) {
      //   var thisLine = this.lineViewList[i]
      //   if (thisLine.fromNode.id === nodeData.id || thisLine.toNode.id === nodeData.id) {
      //     thisLine.flash = thisLine.flash + 1
      //   }
      // }
    },
    getNodeById(nodeId) {
      for (let i = 0; i < this.nodeViewList.length; i++) {
        if (this.nodeViewList[i].id === nodeId) {
          return this.nodeViewList[i];
        }
      }
    },
    removeNodeById(nodeId) {
      let __removed_lines = 0;
      for (let i = 0; i < this.lineViewList.length; i++) {
        var thisLine = this.lineViewList[i];
        if (thisLine.fromNode.id === nodeId || thisLine.toNode.id === nodeId) {
          // console.log(this.lineViewList[i])
          thisLine.hidden = true;
          this.lineViewList.splice(i, 1);
          i--;
          __removed_lines++;
          // console.log(this.lineViewList[i])
        }
      }
      console.log('删除对应的线个数：', nodeId, __removed_lines);
      let __removed_nodes = 0;
      for (let i = 0; i < this.nodeViewList.length; i++) {
        if (this.nodeViewList[i].id === nodeId) {
          const thisNode = this.nodeViewList[i];
          thisNode.targetNodes.forEach(thisTNode => {
            const t_i = thisTNode.targetNodes.indexOf(thisNode);
            if (t_i !== -1) {
              thisTNode.targetNodes.splice(t_i, 1);
            }
          });
          // thisNode.isShow = false
          this.nodeViewList.splice(i, 1);
          delete this.graphData.nodes_map[thisNode.id];
          const d_i = this.graphData.nodes.findIndex(k => k.id === thisNode.id);
          this.graphData.nodes.splice(d_i, 1);
          __removed_nodes++;
          break;
        }
      }
      console.log('删除对应的节点个数：', nodeId, __removed_nodes);
    },
    dataURLToBlob(dataurl) {
      // ie 图片转格式
      var arr = dataurl.split(',');
      var mime = arr[0].match(/:(.*?);/)[1];
      var bstr = atob(arr[1]);
      var n = bstr.length;
      var u8arr = new Uint8Array(n);
      while (n--) {
        u8arr[n] = bstr.charCodeAt(n);
      }
      return new Blob([u8arr], { type: mime });
    },
    downloadAsImage(format) {
      if (this.beforeDownloadImage) {
        this.beforeDownloadImage();
      }
      // console.log('window.navigator.msSaveOrOpenBlob:', window.navigator.msSaveOrOpenBlob)
      // console.log('window.navigator.msSaveBlob：', window.navigator.msSaveBlob)
      // if (!!window.ActiveXObject || 'ActiveXObject' in window) {
      //   this.$message('无法生成并下载图片，请使用非IE浏览器!')
      //   return
      // }
      if (this.nodeViewList.length === 0) {
        throw Error('没有节点，没有内容需要导出！');
      }
      if (!format) format = 'png';
      this.graphSetting.checkedNodeId = '';
      this.graphSetting.canvasZoom = 100;
      const exportDom = this.$refs.seeksRGCanvas;
      var orign_width = exportDom.clientWidth; // 获取dom 宽度
      var orign_height = exportDom.clientHeight; // 获取dom 高度
      var _min_x = 999999;
      var _min_y = 999999;
      var _max_x = 0;
      var _max_y = 0;
      var _padding = 100;
      this.nodeViewList.forEach(thisNode => {
        if (thisNode.x < _min_x) {
          _min_x = thisNode.x;
        }
        if (thisNode.x > _max_x) {
          _max_x = thisNode.x + thisNode.el.offsetWidth;
        }
        if (thisNode.y < _min_y) {
          _min_y = thisNode.y;
        }
        if (thisNode.y > _max_y) {
          _max_y = thisNode.y + thisNode.el.offsetHeight;
        }
      });
      this.nodeViewList.forEach(thisNode => {
        thisNode.x = thisNode.x - _min_x + _padding;
        thisNode.y = thisNode.y - _min_y + _padding;
      });
      var _origin_offset_x = this.graphSetting.canvasOffset.x + _min_x - _padding;
      var _origin_offset_y = this.graphSetting.canvasOffset.y + _min_y - _padding;
      this.graphSetting.canvasOffset.x = _padding * -1;
      this.graphSetting.canvasOffset.y = _padding * -1;
      console.log('offset:', { _origin_offset_x, _origin_offset_y, _min_x, _min_y, _max_x, _max_y });

      var _image_width = _max_x - _min_x + 200 + _padding * 2;
      var _image_height = _max_y - _min_y + 100 + _padding * 2;
      var pixelRatio = window.devicePixelRatio; // 定义任意放大倍数 支持小数
      this.graphSetting.canvasSize.width = _image_width * pixelRatio;
      this.graphSetting.canvasSize.height = _image_height * pixelRatio;
      this.canvasBackgroundColor = '#ffffff';

      var relationGraphPosition = {
        left: this.$refs.seeksRelationGraph.offsetLeft - exportDom.getBoundingClientRect().left,
        top: this.$refs.seeksRelationGraph.offsetTop - exportDom.getBoundingClientRect().top,
        canvas_offsetLeft: exportDom.offsetLeft,
        canvas_offsetTop: exportDom.offsetTop,
        canvas_left: exportDom.getBoundingClientRect().left,
        canvas_top: exportDom.getBoundingClientRect().top
        // exportDom.style.position ='absolute'
        // exportDom.style.left ='0px'
        // exportDom.style.top ='0px'
        // exportDom.style.zIndex ='999'
      };window.scrollTo(0, 0);
      console.log('export image:', { relationGraphPosition, orign_width, orign_height, _image_width, _image_height, _min_x, _min_y, _max_x, _max_y, devicePixelRatio: window.devicePixelRatio });
      this.$nextTick(() => {
        var fileName = 'SeeksRelationGraph-' + (Math.random() * 100000).toFixed(0);
        var canvas = document.createElement('canvas'); // 创建一个canvas节点
        canvas.width = _image_width * pixelRatio; // 定义canvas 宽度 * 缩放
        canvas.height = _image_height * pixelRatio; // 定义canvas高度 *缩放
        canvas.style.width = _image_width * pixelRatio + 'px';
        canvas.style.height = _image_height * pixelRatio + 'px';
        canvas.getContext('2d').scale(1, 1); // 获取context,设置scale
        const opts = {
          backgroundColor: null,
          scale: pixelRatio, // 添加的scale 参数
          canvas: canvas, // 自定义 canvas
          logging: true, // 日志开关，便于查看html2canvas的内部执行流程
          // windowWidth: _image_width,
          // windowHeight: _image_height,
          width: _image_width, // dom 原始宽度
          height: _image_height,
          // x: relationGraphPosition.left,
          // y: relationGraphPosition.top,
          useCORS: true // 【重要】开启跨域配置
        };
        console.log('html2canvas:', opts);
        external___root___html2canvas___commonjs___html2canvas___commonjs2___html2canvas___amd___html2canvas___default()(exportDom, opts).then(canvas => {
          const dom = document.body.appendChild(canvas);
          // console.log('canvas:', fileName, dom)
          dom.style.display = 'none';
          const blob = this.dataURLToBlob(dom.toDataURL('image/' + format));
          document.body.removeChild(dom);
          const a = document.createElement('a');
          a.style.display = 'none';
          try {
            if (window.navigator.msSaveOrOpenBlob) {
              window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + format);
              // console.log('this is IE');
              // var URL=window.URL;
              // var BlobBuilder = window.MSBlobBuilder;
              // navigator.saveBlob=navigator.msSaveBlob;
              // var imgBlob = canvas.msToBlob();
              // if (BlobBuilder && navigator.saveBlob) {
              //   var showSave =  function (data, name, mimetype) {
              //     var builder = new BlobBuilder();
              //     builder.append(data);
              //     var blob = builder.getBlob(mimetype||"application/octet-stream");
              //     if (!name)
              //       name = "Download.bin";
              //     navigator.saveBlob(blob, name);
              //   };
              //   showSave(imgBlob, 'barchart.png',"image/png");
              // }
            } else {
              a.setAttribute('href', URL.createObjectURL(blob));
              a.setAttribute('download', fileName + '.' + format);
              document.body.appendChild(a);
              // console.log('click to download:', opts)
              a.click();
              console.log('click ok!');
              URL.revokeObjectURL(blob);
              console.log('revokeObjectURL ok!');
              document.body.removeChild(a);
              console.log('removeChild ok!');
            }
            this.graphSetting.canvasSize.width = orign_width;
            this.graphSetting.canvasSize.height = orign_height;
            this.graphSetting.canvasOffset.x = _origin_offset_x;
            this.graphSetting.canvasOffset.y = _origin_offset_y;
            this.canvasBackgroundColor = 'transparent';
          } catch (e) {
            console.log('[SEEKS Graph]Create and download image error:', e);
          }
        });
      });
    },
    querySearchAsync(queryString, callback) {
      console.log('fetch-suggestions', queryString);
      queryString = queryString.trim();
      if (queryString === '') {
        return;
      }
      var rst = [];
      this.nodeViewList.forEach(thisNode => {
        console.log('fetch:', thisNode.text);
        if (thisNode.text.indexOf(queryString) !== -1) {
          rst.push(thisNode);
        }
      });
      console.log('fetched:', rst.length);
      callback(rst);
    },
    focusRootNode() {
      if (window.SeeksGraphDebug) console.log('relation-graph:focusRootNode');
      this.handleSelect(this.graphData.rootNode);
    },
    focusNodeById(nodeId) {
      this.graphData.nodes.forEach(thisNode => {
        if (thisNode.id === nodeId) {
          this.handleSelect(thisNode);
        }
      });
    },
    handleSelect(thisNode) {
      console.log('checked:', thisNode);
      scrollTo({
        top: this.$refs.seeksRelationGraph.offsetTop
      });
      this.animateToZoom(100, 300, () => {
        var _n_width = thisNode.width || 50;
        var _n_height = thisNode.height || 50;
        var _final_x = thisNode.x * -1 + this.graphSetting.viewSize.width / 2 - _n_width / 2;
        var _final_y = thisNode.y * -1 + this.graphSetting.viewSize.height / 2 - _n_height / 2;
        this.animateGoto(_final_x, _final_y, 500, () => {
          this.graphSetting.checkedNodeId = thisNode.id;
          this.refreshNVAnalysisInfo();
        });
      });
    },
    animateGoto(x, y, time, callback) {
      var _distance_x = x - this.graphSetting.canvasOffset.x;
      var _distance_y = y - this.graphSetting.canvasOffset.y;
      var _allTime = time;
      var _allStepNum = 5;
      var _speed_x = parseInt(_distance_x / _allStepNum);
      var _speed_y = parseInt(_distance_y / _allStepNum);
      var _perDelay = _allTime / _allStepNum;
      this.animateStepAction(0, _perDelay, _allStepNum, () => {
        this.graphSetting.canvasOffset.x += _speed_x;
        this.graphSetting.canvasOffset.y += _speed_y;
      }, () => {
        // console.log('分解完毕....')
        callback();
      });
    },
    animateToZoom(finalZoom, time, callback) {
      var _zoom_distance = finalZoom - this.graphSetting.canvasZoom;
      var _allTime = time;
      var _allStepNum = 5;
      var _speed = parseInt(_zoom_distance / _allStepNum);
      var _perDelay = _allTime / _allStepNum;
      this.animateStepAction(0, _perDelay, _allStepNum, () => {
        this.zoom(_speed);
      }, () => {
        // console.log('分解完毕....')
        callback();
      });
    },
    animateStepAction(stepIndex, delay, allStepNum, stepCallback, finalCallback) {
      // console.log(Date.now() + '步骤[' + stepIndex + ']')
      if (stepIndex < allStepNum) {
        stepCallback(stepIndex, allStepNum);
        setTimeout(() => {
          this.animateStepAction(stepIndex + 1, delay, allStepNum, stepCallback, finalCallback);
        }, delay);
      } else {
        finalCallback();
      }
    },
    getNodes() {
      return this.nodeViewList;
    },
    getLines() {
      return this.lineViewList;
    },
    onNodeExpandEvent(node, e) {
      console.log('onNodeExpand:', node);
      if (this.onNodeExpand) {
        this.onNodeExpand(node, e);
      }
    },
    onNodeCollapseEvent(node, e) {
      console.log('onNodeCollapse:', node);
      if (this.onNodeCollapse) {
        this.onNodeCollapse(node, e);
      }
    },
    getGraphJsonData() {
      var _nodes = [];
      var _links = [];
      this.graphData.nodes.forEach(thisNode => {
        core4vue_SeeksRGUtils.transNodeToJson(thisNode, _nodes);
      });
      this.graphData.lines.forEach(thisLine => {
        core4vue_SeeksRGUtils.transLineToJson(thisLine, _links);
      });
      return {
        rootId: this.graphData.rootNode ? this.graphData.rootNode.id : '',
        nodes: _nodes,
        links: _links
      };
    },
    getGraphJsonOptions() {
      return this.SeeksRGStore.getOptions();
    },
    printGraphJsonData() {
      console.log('graph options:', JSON.stringify(this.getGraphJsonOptions()));
      console.log('graph json data:', JSON.stringify(this.getGraphJsonData()));
    }
  }
});
// CONCATENATED MODULE: ./node_modules/_babel-loader@7.1.5@babel-loader/lib!./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{"id":"data-v-2964abc9","hasScoped":true,"buble":{"transforms":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/index.vue
var selectortype_template_index_0_src_render = function () {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c("div", {
    ref: "seeksRelationGraph",
    staticStyle: { "box-sizing": "border-box" },
    style: { width: "100%", height: "100%" },
    on: {
      resize: function ($event) {
        return _vm.refreshNVAnalysisInfo();
      }
    }
  }, [_vm.graphSetting.allowShowSettingPanel ? _c("GraphSettingPanel", {
    attrs: { "graph-setting": _vm.graphSetting },
    scopedSlots: _vm._u([{
      key: "settingPanelPlus",
      fn: function (ref) {
        var setting = ref.setting;
        return _c("div", {}, [_vm._t("settingPanelPlus", null, { setting: setting })], 2);
      }
    }], null, true)
  }) : _vm._e(), _vm._v(" "), _c("graph-mini-name-filter", {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: _vm.graphSetting.allowShowMiniNameFilter === true,
      expression: "graphSetting.allowShowMiniNameFilter===true"
    }],
    attrs: { "graph-setting": _vm.graphSetting }
  }), _vm._v(" "), _c("graph-mini-tool-bar", {
    directives: [{
      name: "show",
      rawName: "v-show",
      value: _vm.graphSetting.allowShowMiniToolBar === true,
      expression: "graphSetting.allowShowMiniToolBar===true"
    }],
    attrs: { "graph-setting": _vm.graphSetting }
  }), _vm._v(" "), _vm.graphSetting.allowShowMiniView === true ? _c("graph-mini-view", {
    attrs: { "graph-setting": _vm.graphSetting }
  }) : _vm._e(), _vm._v(" "), _vm._t("graphPlug", null, { graph: this }), _vm._v(" "), _c("div", {
    staticClass: "rel-map",
    class: [_vm.graphSetting.layoutClassName, _vm.graphSetting.backgrounImageNoRepeat ? "rel-map-background-norepeat" : ""],
    style: {
      width: "100%",
      height: "100%",
      "background-image": "url(" + _vm.graphSetting.backgrounImage + ")"
    },
    on: {
      mousedown: function ($event) {
        if (!$event.type.indexOf("key") && _vm._k($event.keyCode, "left", 37, $event.key, ["Left", "ArrowLeft"])) {
          return null;
        }
        if ("button" in $event && $event.button !== 0) {
          return null;
        }
        $event.stopPropagation();
        return _vm.onDragStart($event);
      },
      mousewheel: _vm.mouseListener
    }
  }, [_c("div", {
    ref: "seeksRGCanvas",
    staticClass: "rel-map-canvas",
    style: _vm.canvasSizeAndPosition
  }, [_c("div", { staticClass: "rel-nodediv rel-nodediv-for-webkit" }, _vm._l(_vm.nodeViewList, function (thisNode) {
    return _c("SeeksRGNode", {
      key: thisNode.seeks_id,
      attrs: {
        "node-props": thisNode,
        "on-node-click": _vm.onRGNodeClick,
        "graph-setting": _vm.graphSetting
      },
      scopedSlots: _vm._u([{
        key: "node",
        fn: function (ref) {
          var node = ref.node;
          return [_vm._t("node", null, { node: node })];
        }
      }], null, true)
    });
  }), 1), _vm._v(" "), _c("div", {
    ref: "rgCanvas",
    staticClass: "rel-linediv",
    staticStyle: { overflow: "visible" }
  }, [_c("svg", {
    staticStyle: { overflow: "visible" },
    style: {
      width: _vm.graphSetting.canvasSize.width + "px",
      height: _vm.graphSetting.canvasSize.height + "px"
    },
    attrs: {
      xmlns: "http://www.w3.org/2000/svg",
      version: "1.1"
    }
  }, [_c("defs", [_c("linearGradient", {
    attrs: {
      id: _vm.graphSetting.instanceId + "-lineStyle",
      x1: "1",
      y1: "0",
      x2: "0",
      y2: "0"
    }
  }, [_c("stop", {
    attrs: { offset: "0%", "stop-color": "#e52c5c" }
  }), _vm._v(" "), _c("stop", {
    attrs: {
      offset: "100%",
      "stop-color": "#FD8B37"
    }
  })], 1), _vm._v(" "), _c("marker", {
    attrs: {
      id: _vm.graphSetting.instanceId + "-arrow-default",
      markerWidth: _vm.graphSetting.defaultLineMarker.markerWidth,
      markerHeight: _vm.graphSetting.defaultLineMarker.markerHeight,
      refX: _vm.graphSetting.defaultLineMarker.refX,
      refY: _vm.graphSetting.defaultLineMarker.refY,
      "marker-units": "strokeWidth",
      orient: "auto",
      viewBox: "0 0 12 12"
    }
  }, [_c("path", {
    style: {
      fill: _vm.graphSetting.defaultLineColor
    },
    attrs: {
      d: _vm.graphSetting.defaultLineMarker.data
    }
  })]), _vm._v(" "), _c("marker", {
    attrs: {
      id: _vm.graphSetting.instanceId + "-arrow-checked",
      markerUnits: "strokeWidth",
      markerWidth: "12",
      markerHeight: "12",
      viewBox: "0 0 12 12",
      refX: "6",
      refY: "6",
      orient: "auto"
    }
  }, [_c("path", {
    style: { fill: "#FD8B37" },
    attrs: { d: "M2,2 L10,6 L2,10 L6,6 L2,2" }
  })]), _vm._v(" "), _vm._l(_vm.allLineColors, function (thisColor) {
    return _c("marker", {
      key: thisColor.id,
      attrs: {
        id: _vm.graphSetting.instanceId + "-arrow-" + thisColor.id,
        markerWidth: _vm.graphSetting.defaultLineMarker.markerWidth,
        markerHeight: _vm.graphSetting.defaultLineMarker.markerHeight,
        refX: _vm.graphSetting.defaultLineMarker.refX,
        refY: _vm.graphSetting.defaultLineMarker.refY,
        "marker-units": "strokeWidth",
        orient: "auto"
      }
    }, [_c("path", {
      attrs: {
        fill: _vm.graphSetting.defaultLineMarker.color || thisColor.color,
        d: _vm.graphSetting.defaultLineMarker.data
      }
    })]);
  })], 2), _vm._v(" "), _vm._l(_vm.lineViewList, function (thisLine) {
    return _c("SeeksRGLink", {
      key: thisLine.seeks_id,
      attrs: {
        "line-props": thisLine,
        "graph-setting": _vm.graphSetting,
        "on-line-click": _vm.onRGLineClick
      }
    });
  })], 2)])])]), _vm._v(" "), _vm.$scopedSlots.bottomPanel ? _c("graph-bottom-panel", { attrs: { "graph-setting": _vm.graphSetting } }, [_c("template", { slot: "bottomPanel" }, [_vm._t("bottomPanel", null, { graph: this })], 2)], 2) : _vm._e(), _vm._v(" "), _c("div", { staticStyle: { clear: "both", height: "1px" } }), _vm._v(" "), _vm.isShowZoomCenter ? _c("div", {
    staticStyle: {
      position: "fixed",
      top: "0px",
      right: "0px",
      "font-size": "12px",
      "background-color": "#333333",
      color: "#ffffff",
      "z-index": "9999",
      padding: "20px"
    },
    style: {
      left: _vm.debugPanelPosition ? "" : "0px",
      right: _vm.debugPanelPosition ? "0px" : ""
    },
    on: { click: _vm.moveDebugPanel }
  }, [_c("div", [_c("pre", [_vm._v(_vm._s(JSON.stringify(_vm.graphSetting.canvasOffset, null, 2)))])]), _vm._v(" "), _c("div", [_c("pre", [_vm._v(_vm._s(JSON.stringify(_vm.graphSetting.viewNVInfo, null, 2)))])]), _vm._v(" "), _c("div", [_c("pre", [_vm._v(_vm._s(JSON.stringify(_vm.graphSetting.canvasNVInfo, null, 2)))])])]) : _vm._e(), _vm._v(" "), _vm.isShowZoomCenter ? _c("div", {
    staticStyle: {
      position: "fixed",
      top: "0px",
      width: "2px",
      height: "2000px",
      "z-index": "99999",
      "border-left": "blue dotted 2px",
      opacity: "0.6"
    },
    style: {
      left: _vm.graphSetting.canvasNVInfo.x + _vm.graphSetting.viewNVInfo.x + "px",
      top: _vm.graphSetting.viewNVInfo.y + "px"
    }
  }) : _vm._e(), _vm._v(" "), _vm.isShowZoomCenter ? _c("div", {
    staticStyle: {
      position: "fixed",
      left: "0px",
      height: "2px",
      width: "2000px",
      "z-index": "99999",
      "border-top": "blue dotted 2px",
      opacity: "0.6"
    },
    style: {
      top: _vm.graphSetting.canvasNVInfo.y + _vm.graphSetting.viewNVInfo.y + "px",
      left: _vm.graphSetting.viewNVInfo.x + "px"
    }
  }) : _vm._e(), _vm._v(" "), _vm.isShowZoomCenter ? _c("div", {
    staticStyle: {
      position: "fixed",
      top: "0px",
      width: "4px",
      height: "2000px",
      "z-index": "99999",
      "border-left": "green dotted 2px",
      opacity: "0.4"
    },
    style: {
      left: _vm.graphSetting.canvasNVInfo.x + _vm.graphSetting.canvasNVInfo.width / 2 + _vm.graphSetting.viewNVInfo.x + "px",
      top: _vm.graphSetting.viewNVInfo.y + "px"
    }
  }) : _vm._e(), _vm._v(" "), _vm.isShowZoomCenter ? _c("div", {
    staticStyle: {
      position: "fixed",
      left: "0px",
      height: "4px",
      width: "2000px",
      "z-index": "99999",
      "border-top": "green dotted 2px",
      opacity: "0.4"
    },
    style: {
      top: _vm.graphSetting.canvasNVInfo.y + _vm.graphSetting.canvasNVInfo.height / 2 + _vm.graphSetting.viewNVInfo.y + "px",
      left: _vm.graphSetting.viewNVInfo.x + "px"
    }
  }) : _vm._e(), _vm._v(" "), _vm.isShowZoomCenter ? _c("div", {
    staticStyle: {
      position: "fixed",
      top: "0px",
      width: "2px",
      height: "2000px",
      "z-index": "99999",
      "border-left": "blue dotted 2px",
      opacity: "0.6"
    },
    style: {
      left: _vm.graphSetting.canvasNVInfo.x + _vm.graphSetting.canvasNVInfo.width + _vm.graphSetting.viewNVInfo.x + "px",
      top: _vm.graphSetting.viewNVInfo.y + "px"
    }
  }) : _vm._e(), _vm._v(" "), _vm.isShowZoomCenter ? _c("div", {
    staticStyle: {
      position: "fixed",
      left: "0px",
      height: "2px",
      width: "2000px",
      "z-index": "99999",
      "border-top": "blue dotted 2px",
      opacity: "0.6"
    },
    style: {
      top: _vm.graphSetting.canvasNVInfo.y + _vm.graphSetting.canvasNVInfo.height + _vm.graphSetting.viewNVInfo.y + "px",
      left: _vm.graphSetting.viewNVInfo.x + "px"
    }
  }) : _vm._e()], 2);
};
var selectortype_template_index_0_src_staticRenderFns = [];
selectortype_template_index_0_src_render._withStripped = true;
var selectortype_template_index_0_src_esExports = { render: selectortype_template_index_0_src_render, staticRenderFns: selectortype_template_index_0_src_staticRenderFns };
/* harmony default export */ var selectortype_template_index_0_src = (selectortype_template_index_0_src_esExports);
if (false) {
  module.hot.accept();
  if (module.hot.data) {
    require("vue-loader/node_modules/vue-hot-reload-api").rerender("data-v-2964abc9", selectortype_template_index_0_src_esExports);
  }
}
// CONCATENATED MODULE: ./src/index.vue
var src_disposed = false
function src_injectStyle (ssrContext) {
  if (src_disposed) return
  __webpack_require__(5)
}
var src_normalizeComponent = __webpack_require__(2)
/* script */


/* template */

/* template functional */
var src___vue_template_functional__ = false
/* styles */
var src___vue_styles__ = src_injectStyle
/* scopeId */
var src___vue_scopeId__ = "data-v-2964abc9"
/* moduleIdentifier (server only) */
var src___vue_module_identifier__ = null
var src_Component = src_normalizeComponent(
  selectortype_script_index_0_src,
  selectortype_template_index_0_src,
  src___vue_template_functional__,
  src___vue_styles__,
  src___vue_scopeId__,
  src___vue_module_identifier__
)
src_Component.options.__file = "src/index.vue"

/* hot reload */
if (false) {(function () {
  var hotAPI = require("vue-loader/node_modules/vue-hot-reload-api")
  hotAPI.install(require("vue"), false)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-2964abc9", src_Component.options)
  } else {
    hotAPI.reload("data-v-2964abc9", src_Component.options)
  }
  module.hot.dispose(function (data) {
    src_disposed = true
  })
})()}

/* harmony default export */ var src = (src_Component.exports);

// CONCATENATED MODULE: ./src/index.js

src.install = function (Vue) {
    Vue.component('relation-graph', src);
    Vue.component('seeks-relation-graph', src);
};
/* harmony default export */ var src_0 = __webpack_exports__["default"] = (src);

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(6);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(1)("7abd5e14", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2964abc9\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./index.vue", function() {
     var newContent = require("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-2964abc9\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./index.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)(false);
// imports


// module
exports.push([module.i, "\n.rel-map[data-v-2964abc9]{\n  background-color: #ffffff;\n  /*background-image: url(\"/static/images/graph-bg.png\");*/\n  overflow:hidden;\n  cursor: default;\n  user-select: none;\n}\n.rel-map-background-norepeat[data-v-2964abc9]{\n  background-repeat: no-repeat;\n  background-position:right bottom;\n}\n.rel-nodediv-for-webkit[data-v-2964abc9]{\n  position: absolute;\n  width:100%;\n  top:0px;\n  left:0px;\n  z-index: 1000\n}\n.rel-map-canvas[data-v-2964abc9]{\n  position:relative;\n  top:0px;\n  left:0px;\n  /*overflow:hidden;*/\n  border: 0px;\n  z-index: 3;\n  /*background-color: #efefef;*/\n  /*border-top: #efefef dashed 1px;*/\n  /*border-left: #efefef dashed 1px;*/\n  /*width:30px;*/\n  /*height:30px;*/\n}\nsvg[data-v-2964abc9] {\n  height: 100%;\n  width: 100%;\n}\n.rel-linediv[data-v-2964abc9]{\n  --stroke:url('#lineStyle');\n  --markerEnd:url('#arrow-default');\n  --markerEndChecked:url('#arrow-checked');\n}\n.rel-linediv svg[data-v-2964abc9]{\n  overflow: visible\n}\n.rel-linediv[data-v-2964abc9] .c-rg-line-checked {\n  /*stroke: var(--stroke);*/\n  /*marker-end: var(--markerEndChecked) !important;*/\n  stroke-width: 2px;\n  stroke-dasharray: 5,5,5;\n  stroke-dashoffset: 3px;\n  stroke-linecap: butt;\n  /*stroke: #FD8B37;*/\n  stroke-linejoin: bevel;\n  /* firefox bug fix - won't rotate at 90deg angles */\n  -moz-transform: rotate(-89deg) translateX(-190px);\n  animation-timing-function:linear;\n  animation: ACTRGLineChecked 10s;\n}\n.rel-map[data-v-2964abc9] img{\n  -webkit-user-drag: none;\n  -webkit-user-select: none;\n}\n", ""]);

// exports


/***/ }),
/* 7 */
/***/ (function(module, exports) {

/**
 * Translates the list format produced by css-loader into something
 * easier to manipulate.
 */
module.exports = function listToStyles (parentId, list) {
  var styles = []
  var newStyles = {}
  for (var i = 0; i < list.length; i++) {
    var item = list[i]
    var id = item[0]
    var css = item[1]
    var media = item[2]
    var sourceMap = item[3]
    var part = {
      id: parentId + ':' + i,
      css: css,
      media: media,
      sourceMap: sourceMap
    }
    if (!newStyles[id]) {
      styles.push(newStyles[id] = { id: id, parts: [part] })
    } else {
      newStyles[id].parts.push(part)
    }
  }
  return styles
}


/***/ }),
/* 8 */
/***/ (function(module, exports) {

/* eslint-disable */
!function (c) {
  var a,
      l,
      t,
      i,
      o,
      h,
      e = '<svg><symbol id="icon-iconset0444" viewBox="0 0 1024 1024"><path d="M960 682.666667l-106.666667 0C844.8 569.6 763.733333 42.666667 64 42.666667 51.2 42.666667 42.666667 51.2 42.666667 64c0 12.8 8.533333 21.333333 21.333333 21.333333 219.733333 0 377.6 106.666667 465.066667 315.733333 51.2 123.733333 64 236.8 66.133333 281.6L490.666667 682.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333 0 6.4 2.133333 10.666667 6.4 14.933333l234.666667 256c4.266667 4.266667 8.533333 6.4 14.933333 6.4 6.4 0 10.666667-2.133333 14.933333-6.4l234.666667-256c4.266667-4.266667 6.4-8.533333 6.4-14.933333C981.333333 691.2 972.8 682.666667 960 682.666667zM725.333333 928 539.733333 725.333333 618.666667 725.333333c12.8 0 21.333333-8.533333 21.333333-21.333333l0-21.333333c-4.266667-87.466667-38.4-396.8-273.066667-554.666667C755.2 251.733333 804.266667 588.8 810.666667 682.666667l0 21.333333c0 12.8 8.533333 21.333333 21.333333 21.333333l78.933333 0L725.333333 928z"  ></path></symbol><symbol id="icon-iconset0445" viewBox="0 0 1024 1024"><path d="M974.933333 305.066667l-234.666667-256C736 44.8 731.733333 42.666667 725.333333 42.666667c-6.4 0-10.666667 2.133333-14.933333 6.4l-234.666667 256C471.466667 309.333333 469.333333 313.6 469.333333 320c0 12.8 8.533333 21.333333 21.333333 21.333333l104.533333 0c-2.133333 44.8-14.933333 157.866667-66.133333 281.6C441.6 832 283.733333 938.666667 64 938.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333 0 12.8 8.533333 21.333333 21.333333 21.333333 699.733333 0 780.8-526.933333 789.333333-640l106.666667 0c12.8 0 21.333333-8.533333 21.333333-21.333333C981.333333 313.6 979.2 309.333333 974.933333 305.066667zM832 298.666667c-12.8 0-21.333333 8.533333-21.333333 21.333333l0 21.333333c-6.4 93.866667-55.466667 430.933333-443.733333 554.666667 234.666667-157.866667 268.8-467.2 273.066667-554.666667l0-21.333333c0-12.8-8.533333-21.333333-21.333333-21.333333l-78.933333 0L725.333333 96l185.6 202.666667L832 298.666667z"  ></path></symbol><symbol id="icon-yuanquanfenxiang" viewBox="0 0 1024 1024"><path d="M751.148705 578.773799c-61.987796 0-117.066229 30.121018-151.388942 76.488045L398.287145 536.382317c1.991354-10.171664 3.046383-20.673855 3.046383-31.419594 0-18.776645-3.196809-36.817534-9.058306-53.621245l193.486736-107.492176c31.949666 58.566884 94.104261 98.391914 165.386748 98.391914 103.803157 0 188.254571-84.450391 188.254571-188.254571S854.951863 65.73105 751.148705 65.73105c-103.804181 0-188.255595 84.450391-188.255595 188.254571 0 14.246469 1.600451 28.125571 4.613064 41.4746L368.032074 406.279167c-29.841655-39.193651-76.976162-64.544015-129.927141-64.544015-90.004897 0-163.228595 73.223698-163.228595 163.228595 0 90.003873 73.223698 163.228595 163.228595 163.228595 60.882626 0 114.078175-33.510208 142.134161-83.049484L575.173808 700.16452c-7.925507 20.788465-12.280698 43.325761-12.280698 66.86385 0 103.803157 84.450391 188.254571 188.255595 188.254571 103.803157 0 188.254571-84.450391 188.254571-188.254571S854.951863 578.773799 751.148705 578.773799zM751.148705 116.89636c75.590606 0 137.089261 61.498656 137.089261 137.089261s-61.498656 137.089261-137.089261 137.089261c-75.591629 0-137.090285-61.498656-137.090285-137.089261S675.557076 116.89636 751.148705 116.89636zM238.105956 617.026008c-61.791321 0-112.063285-50.27094-112.063285-112.063285 0-61.791321 50.27094-112.063285 112.063285-112.063285s112.063285 50.27094 112.063285 112.063285C350.168218 566.755068 299.897278 617.026008 238.105956 617.026008zM751.148705 904.117632c-75.591629 0-137.090285-61.498656-137.090285-137.089261s61.498656-137.089261 137.090285-137.089261c75.590606 0 137.089261 61.498656 137.089261 137.089261S826.739311 904.117632 751.148705 904.117632z"  ></path></symbol><symbol id="icon-hj2" viewBox="0 0 1024 1024"><path d="M963.66 256.607c0-0.244 0-0.607-0.126-0.851 0-0.369 0-0.614-0.119-0.978 0-0.369-0.119-0.733-0.119-1.104 0-0.244 0-0.487-0.126-0.725 0-0.369-0.119-0.859-0.244-1.222 0-0.244-0.119-0.369-0.119-0.613-0.126-0.365-0.126-0.852-0.245-1.216 0-0.244-0.126-0.369-0.126-0.613-0.119-0.365-0.244-0.734-0.364-1.222-0.126-0.244-0.126-0.49-0.244-0.609l-0.369-1.095c-0.119-0.245-0.119-0.49-0.244-0.734-0.121-0.369-0.245-0.613-0.365-0.978-0.126-0.244-0.244-0.613-0.369-0.851-0.119-0.244-0.238-0.613-0.364-0.859-0.119-0.364-0.244-0.607-0.364-0.977l-0.371-0.734c-0.119-0.364-0.364-0.725-0.487-0.971-0.119-0.245-0.244-0.371-0.364-0.614-0.244-0.364-0.369-0.733-0.614-1.097-0.119-0.126-0.244-0.369-0.364-0.487l-0.733-1.097c-0.119-0.126-0.244-0.369-0.365-0.487-0.244-0.369-0.487-0.733-0.733-0.978-0.126-0.244-0.244-0.369-0.487-0.613-0.245-0.238-0.49-0.607-0.734-0.851-0.244-0.245-0.487-0.49-0.607-0.734-0.244-0.244-0.369-0.487-0.614-0.733-0.851-0.972-1.829-1.83-2.681-2.682-0.245-0.244-0.49-0.369-0.734-0.614-0.244-0.244-0.487-0.487-0.733-0.607-0.245-0.244-0.614-0.487-0.859-0.733-0.238-0.121-0.364-0.365-0.607-0.49-0.365-0.244-0.734-0.487-0.978-0.733-0.119-0.119-0.364-0.244-0.487-0.365l-1.097-0.733c-0.119-0.119-0.364-0.244-0.487-0.364-0.365-0.244-0.734-0.369-1.097-0.614-0.244-0.119-0.369-0.244-0.613-0.364-0.365-0.126-0.734-0.369-0.972-0.487l-0.734-0.369c-0.369-0.121-0.613-0.245-0.977-0.365-0.244-0.126-0.614-0.244-0.859-0.369-0.244-0.119-0.607-0.238-0.851-0.364-0.365-0.119-0.609-0.244-0.978-0.364-0.244-0.126-0.487-0.126-0.733-0.245l-1.097-0.369c-0.244-0.119-0.487-0.119-0.609-0.244-0.369-0.119-0.733-0.244-1.22-0.364-0.245 0-0.371-0.126-0.614-0.126-0.364-0.119-0.851-0.244-1.216-0.244-0.244 0-0.487-0.121-0.613-0.121-0.364-0.126-0.852-0.126-1.222-0.244-0.244 0-0.482-0.126-0.725-0.126-0.369 0-0.734-0.119-1.104-0.119-0.364 0-0.607 0-0.978-0.126-0.244 0-0.607 0-0.851-0.119h-242.407c-21.604 0-39.062 17.456-39.062 39.062 0 21.604 17.458 39.055 39.062 39.055h146.102l-3.171 3.177-217.27 217.265 0.369 0.369-49.676 49.676-155.87-155.87c-7.694-7.689-17.827-11.472-27.953-11.472-10.13-0.126-20.263 3.659-27.952 11.472l-282.446 282.322c-15.258 15.258-15.258 40.041 0 55.298 15.258 15.258 40.033 15.258 55.291 0l255.108-255.11 155.746 155.751c7.813 7.815 17.945 11.593 28.076 11.474 10.126 0.119 20.382-3.659 28.070-11.474l182.964-182.969c0.734-0.734 1.347-1.342 1.956-2.075l111.564-111.564v146.109c0 21.604 17.451 39.060 39.055 39.060s39.062-17.456 39.062-39.060v-235.085c0-0.244 0.126-0.49 0.126-0.614 0-0.244 0.119-0.487 0.119-0.733 0-0.364 0.119-0.734 0.119-1.097s0-0.607 0.126-0.977c0-0.245 0-0.609 0.119-0.852-0.122-1.466-0.122-2.807-0.122-4.030v0zM963.66 256.607z"  ></path></symbol><symbol id="icon-circleyuanquan" viewBox="0 0 1024 1024"><path d="M150.1184 150.1184C250.2656 50.0736 370.8928 0 512 0c141.1072 0 261.7344 50.0736 361.8816 150.1184C973.9264 250.2656 1024 370.8928 1024 512c0 141.2096-50.0736 261.8368-150.1184 361.8816C773.7344 973.9264 653.1072 1024 512 1024c-141.1072 0-261.7344-50.0736-361.8816-150.1184C50.0736 773.8368 0 653.2096 0 512 0 370.8928 50.0736 250.2656 150.1184 150.1184zM512 41.8816c-85.2992 0-164.1472 20.8896-236.3392 62.7712C203.4688 146.432 146.432 203.4688 104.6528 275.6608 62.7712 347.9552 41.8816 426.7008 41.8816 512c0 129.6384 45.9776 240.4352 137.8304 332.288C271.5648 936.2432 382.3616 982.1184 512 982.1184c129.6384 0 240.4352-45.8752 332.288-137.8304C936.2432 752.4352 982.1184 641.6384 982.1184 512c0-129.6384-45.9776-240.3328-137.8304-332.288C752.4352 87.7568 641.6384 41.8816 512 41.8816zM512 256c-36.1472 0-70.144 7.0656-102.1952 20.8896C377.856 290.9184 349.4912 309.3504 324.9152 332.288c-22.9376 24.576-41.472 52.9408-55.3984 84.8896S248.6272 483.328 248.6272 519.3728c0 36.1472 6.9632 70.144 20.8896 102.1952s32.4608 60.3136 55.3984 84.8896C349.4912 729.4976 377.856 747.9296 409.8048 761.856 441.856 775.7824 475.8528 782.7456 512 782.7456c36.1472 0 70.144-6.9632 102.1952-20.8896C646.144 747.9296 674.5088 729.4976 699.0848 706.4576c22.9376-24.576 41.472-52.9408 55.3984-84.8896s20.8896-66.048 20.8896-102.1952c0-36.0448-6.9632-70.144-20.8896-102.1952S722.0224 356.9664 699.0848 332.288C674.5088 309.3504 646.144 290.9184 614.1952 276.8896 582.144 263.0656 548.1472 256 512 256z"  ></path></symbol><symbol id="icon-bhjlink" viewBox="0 0 1024 1024"><path d="M901.920618 465.785468c-50.993571 0-94.522533 32.698367-110.688942 78.273953L702.244627 544.059421c1.764013-10.590222 2.890616-21.423121 2.890616-32.694527 0-72.177856-40.480145-134.923579-99.898281-166.857822l34.099901-112.776268c8.829281 2.126492 18.1347 3.327588 27.724265 3.327588 64.833817 0 117.472367-52.597848 117.472367-117.589097C784.532727 52.594008 731.894177 0 667.06036 0c-64.911381 0-117.509229 52.594008-117.509229 117.470063 0 49.305587 30.248562 91.349307 73.177745 108.842756l-33.419485 110.692013c-22.548956-9.588797-47.462473-14.807112-73.540224-14.807112-49.18732 0-93.841349 18.658451-127.540374 49.309426L213.348053 196.583401l-1.886119 2.008226c19.940183-21.103648 32.256788-49.588197 32.256788-81.003297 0-64.872983-52.517212-117.470063-117.470063-117.470063-64.913685 0-117.511533 52.59708-117.511533 117.470063 0 65.034255 52.59708 117.592169 117.511533 117.592169 31.412796 0 59.898881-12.358075 80.921125-32.335888l-6.179038 6.056931 174.960609 174.879973c-30.729308 33.66293-49.506025 78.47516-49.506025 127.661712 0 43.008283 14.401627 82.685138 38.593258 114.501114l-149.845117 120.999625c-21.503757-28.044506-55.285722-46.218372-93.357532-46.218372-64.874519 0-117.430897 52.719186-117.430897 117.592169 0 64.833049 52.556378 117.470063 117.430897 117.470063 64.872983 0 117.549163-52.637014 117.549163-117.470063 0-20.541499-5.335813-39.878062-14.602834-56.68956l151.369526-122.203792c34.584487 37.633303 84.29095 61.384123 139.618142 61.384123 28.082136 0 54.602234-6.057699 78.553492-17.091805l52.716114 119.514383c-35.585143 20.222026-59.497236 58.335306-59.497236 102.106945 0 64.912149 52.637014 117.549163 117.592169 117.549163 64.872983 0 117.388659-52.637014 117.388659-117.549163 0-64.833049-52.516444-117.513069-117.388659-117.513069-15.047485 0-29.248673 2.929782-42.446133 7.903885l-52.798286-120.034294c42.807844-24.554878 75.182898-65.518073 88.46253-114.221576l88.222926 0c-1.405374 7.018422-1.96522 14.241123-1.96522 21.743362 0 64.872983 52.557914 117.509997 117.387123 117.509997 64.995089 0 117.596009-52.637014 117.596009-117.509997C1019.508947 518.383316 966.994039 465.785468 901.920618 465.785468L901.920618 465.785468zM901.920618 465.785468"  ></path></symbol><symbol id="icon-lianjie_connecting5" viewBox="0 0 1024 1024"><path d="M801.25952 251.74016l-28.9792-28.99968-150.79424 150.8352-35.1232-35.10272-99.14368 99.16416 99.14368 99.16416 99.16416-99.16416-35.10272-35.1232zM487.19872 476.8768l-29.94176 29.94176-19.61984-19.61984-99.16416 99.16416 35.10272 35.1232-150.8352 150.79424 28.95872 28.95872 150.8352-150.79424 35.10272 35.10272 99.14368-99.14368-19.61984-19.64032 29.96224-29.96224-59.92448-59.92448z m-15.48288 44.4416l15.4624-15.4624 30.98624 30.98624-15.4624 15.44192-30.98624-30.96576z" fill="" ></path></symbol><symbol id="icon-xiazai" viewBox="0 0 1024 1024"><path d="M840.5 900.3h-657c-16.5 0-29.9 13.4-29.9 29.9s13.4 29.9 29.9 29.9h657.1c16.5 0 29.9-13.4 29.9-29.9-0.1-16.6-13.5-29.9-30-29.9zM631.5 123.7V541.8H763.1L512 769.9l-251.2-228h131.7V123.7h239m0-59.7h-239c-33 0-59.7 26.7-59.7 59.7v358.4H183.5c-26.6 0-39.9 32.2-21.1 51l328.5 298.2c5.8 5.8 13.5 8.7 21.1 8.7s15.3-2.9 21.1-8.7l328.5-298.2c18.8-18.8 5.5-51-21.1-51H691.2V123.7c0-33-26.7-59.7-59.7-59.7z"  ></path></symbol><symbol id="icon-ico_reset" viewBox="0 0 1024 1024"><path d="M925.97087933 277.33133334a479.997 479.997 0 1 0 54.33566 255.9984H916.05094133a415.9974 415.9974 0 1 1-64.191599-255.9984h74.047537z"  ></path><path d="M978.64255033 61.01268534L725.33213333 371.09074734h297.59814z"  ></path></symbol><symbol id="icon-fangda" viewBox="0 0 1024 1024"><path d="M768 448a320 320 0 1 0-320 320 320 320 0 0 0 320-320z m64 0A384 384 0 1 1 448 64a384 384 0 0 1 384 384z"  ></path><path d="M681.28 726.72a32 32 0 0 1 45.44-45.44l160 160a32 32 0 0 1-45.44 45.44zM320 480a32 32 0 0 1 0-64h256a32 32 0 0 1 0 64z"  ></path><path d="M480 576a32 32 0 0 1-64 0V320a32 32 0 0 1 64 0z"  ></path></symbol><symbol id="icon-zidong" viewBox="0 0 1024 1024"><path d="M131.3 363.3c-19.2 47.3-28.9 97.3-28.9 148.7 0 51.3 9.7 101.3 28.9 148.7 7 17.2 15.1 33.8 24.3 49.7l15.8-49.1 42.8 13.8-39.8 123.8-42.8-13.9-80.9-26 13.8-42.8 52.3 16.8c-98-168.4-74.8-387.9 69.4-532.1C342.4 44.7 586.9 30.5 759.1 158.3l-32.2 32.2c-25.1-18-52.1-32.9-80.9-44.6-47.3-19.2-97.3-28.9-148.7-28.9-51.3 0-101.3 9.7-148.7 28.9-49 19.9-92.9 49.1-130.6 86.8s-66.9 81.7-86.7 130.6z m828.3-60.2l13.8-42.8-80.9-26-42.8-13.8-39.8 123.8 42.8 13.8 15-46.7c9.8 16.6 18.4 34 25.8 52.1 19.2 47.3 28.9 97.3 28.9 148.7 0 51.3-9.7 101.3-28.9 148.7-19.9 49-49.1 92.9-86.8 130.6C768.9 829 725 858.2 676 878.1c-47.3 19.2-97.3 28.9-148.7 28.9-51.3 0-101.3-9.7-148.7-28.9-28.8-11.7-55.9-26.6-80.9-44.6l-32.2 32.2c126.3 93.7 382.6 147.7 572.9-42.6 145.8-145.8 167.9-368.6 66.1-537.7l55.1 17.7zM474 241.2L295 730.4h64.8l50.5-148.2h195.3l54 148.2h70.3L539.6 241.2H474z m-45.9 288.3L479.8 386c11-30.9 19.4-62.1 25.4-93.4 6.9 26 17.9 59.9 32.8 101.5l48.2 135.5H428.1z" fill="" ></path></symbol><symbol id="icon-quanping" viewBox="0 0 1024 1024"><path d="M795.5 192H581c-19.6 0-35.6 15.7-36 35.3-0.4 20.3 16.4 36.7 36.7 36.7h128.4L581 393.1c-14 14-14 36.9 0 50.9s36.9 14 50.9 0L760 315.9v129c0 19.6 15.8 35.6 35.3 36 20.2 0.4 36.7-16.4 36.7-36.7V228.5c0-20.1-16.3-36.5-36.5-36.5zM442.2 760H313.8L443 630.9c14-14 14-36.9 0-50.9s-36.9-14-50.9 0L264 708.1V579c0-19.6-15.8-35.6-35.3-36-20.2-0.4-36.7 16.4-36.7 36.7v215.6c0 20.3 16.4 36.7 36.7 36.7H443c19.6 0 35.6-15.7 36-35.3 0.3-20.3-16.5-36.7-36.8-36.7z"  ></path><path d="M838 136c27.6 0 50 22.4 50 50v652c0 27.6-22.4 50-50 50H186c-27.6 0-50-22.4-50-50V186c0-27.6 22.4-50 50-50h652m0-72H186c-16.4 0-32.4 3.2-47.5 9.6-14.5 6.1-27.6 14.9-38.8 26.1-11.2 11.2-20 24.2-26.1 38.8-6.4 15.1-9.6 31.1-9.6 47.5v652c0 16.4 3.2 32.4 9.6 47.5 6.1 14.5 14.9 27.6 26.1 38.8 11.2 11.2 24.2 20 38.8 26.1 15.1 6.4 31.1 9.6 47.5 9.6h652c16.4 0 32.4-3.2 47.5-9.6 14.5-6.1 27.6-14.9 38.8-26.1 11.2-11.2 20-24.2 26.1-38.8 6.4-15.1 9.6-31.1 9.6-47.5V186c0-16.4-3.2-32.4-9.6-47.5-6.1-14.5-14.9-27.6-26.1-38.8-11.2-11.2-24.2-20-38.8-26.1-15.1-6.4-31.1-9.6-47.5-9.6z"  ></path></symbol><symbol id="icon-lianjieliu" viewBox="0 0 1024 1024"><path d="M280.224 425.856h348.608a29.536 29.536 0 1 0 0-59.072H280.224c-52.448 0-93.152-34.304-93.152-73.856s40.704-73.856 93.152-73.856h140.128C432.096 258.816 468.448 288 512 288s79.904-29.184 91.648-68.928h178.08a29.536 29.536 0 1 0 0-59.072h-179.584C588.896 122.784 553.728 96 512 96s-76.896 26.784-90.112 64H280.224C197.184 160 128 218.272 128 292.928s69.184 132.928 152.224 132.928z"  ></path><path d="M895.936 415.2A96 96 0 1 0 800 512c30.656 0 57.632-14.624 75.2-36.992 10.56 12.064 16.832 26.56 16.832 41.92 0 39.552-40.704 73.856-93.152 73.856H306.016A95.584 95.584 0 0 0 224 544a95.68 95.68 0 0 0-95.232 88.352C89.888 656.224 64 695.424 64 740.928c0 74.656 69.184 132.928 152.224 132.928h241.728A95.808 95.808 0 0 0 544 928a96 96 0 1 0 0-192 95.904 95.904 0 0 0-94.272 78.752H216.224c-52.448 0-93.152-34.304-93.152-73.856 0-17.504 8.32-33.792 21.76-46.72A95.808 95.808 0 0 0 224 736a95.68 95.68 0 0 0 95.008-86.144h479.84c83.072 0 152.224-58.272 152.224-132.928 0.032-41.536-21.824-77.568-55.136-101.728z"  ></path></symbol><symbol id="icon-shuaxin" viewBox="0 0 1024 1024"><path d="M512 919.552c-224.768 0-407.552-182.784-407.552-407.552 0-8.704 0.512-17.408 1.024-26.112l71.68 4.608c-0.512 7.168-0.512 14.336-0.512 21.504 0 185.344 150.528 335.872 335.872 335.872 86.528 0 168.448-32.768 230.912-92.16l49.152 52.224C716.288 880.128 616.96 919.552 512 919.552zM919.552 512h-71.68c0-11.776-0.512-23.552-2.048-35.328-17.92-171.52-161.28-300.544-334.336-300.544-67.584 0-132.096 19.968-187.904 57.344L284.16 174.08c67.072-45.568 145.92-69.632 227.84-69.632 209.408 0 384 156.672 405.504 365.056 1.536 13.824 2.048 28.16 2.048 42.496z" fill="#707070" ></path><path d="M140.288 290.816L28.16 491.52c-3.072 5.12 1.024 11.776 6.656 11.776H258.56c6.144 0 9.728-6.144 6.656-11.776L153.6 290.816c-3.072-5.632-10.752-5.632-13.312 0zM870.4 675.84L758.272 475.136c-3.072-5.12 1.024-11.776 6.656-11.776h223.744c6.144 0 9.728 6.144 6.656 11.776L883.712 675.84c-2.56 5.12-10.24 5.12-13.312 0zM270.336 202.24a35.84 35.84 0 1 0 71.68 0 35.84 35.84 0 1 0-71.68 0zM728.576 784.896a35.84 35.84 0 1 0 71.68 0 35.84 35.84 0 1 0-71.68 0z" fill="#707070" ></path></symbol><symbol id="icon-resize-" viewBox="0 0 1024 1024"><path d="M410.816 673.514667L230.997333 853.333333H384v85.333334H85.333333V640h85.333334v153.002667l179.818666-179.84 60.330667 60.373333z m-53.632-256L170.666667 230.997333V384H85.333333V85.333333h298.666667v85.333334h-153.002667l186.517334 186.517333-60.330667 60.330667z m234.666667-45.696L793.002667 170.666667H640V85.333333h298.666667v298.666667h-85.333334v-153.002667l-201.152 201.173334-60.330666-60.373334z m67.029333 226.709333L853.333333 793.002667V640h85.333334v298.666667H640v-85.333334h153.002667l-194.474667-194.453333 60.352-60.352z"  ></path></symbol><symbol id="icon-guanxitu" viewBox="0 0 1024 1024"><path d="M209.003789 401.084632l29.749895-44.948211 107.843369 71.464421-29.749895 44.894316zM682.469053 546.600421l-14.551579-51.846737 124.496842-35.031579 14.551579 51.846737zM315.068632 812.840421l-40.367158-35.678316 85.692631-96.902737 40.421053 35.732211zM597.962105 390.251789l-46.672842-26.947368 43.11579-74.64421 46.672842 26.947368zM615.639579 728.764632l41.121684-34.816 83.536842 98.735157-41.121684 34.816z" fill="#444A5C" ></path><path d="M501.221053 765.305263c-118.568421 0-215.578947-97.010526-215.578948-215.578947s97.010526-215.578947 215.578948-215.578948 215.578947 97.010526 215.578947 215.578948-97.010526 215.578947-215.578947 215.578947z m0-377.263158c-91.621053 0-161.684211 70.063158-161.684211 161.684211s70.063158 161.684211 161.684211 161.68421 161.684211-70.063158 161.68421-161.68421-75.452632-161.684211-161.68421-161.684211zM167.073684 452.715789c-59.284211 0-107.789474-48.505263-107.789473-107.789473s48.505263-107.789474 107.789473-107.789474 107.789474 48.505263 107.789474 107.789474-48.505263 107.789474-107.789474 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894737 53.894737-21.557895 53.894737-53.894737-26.947368-53.894737-53.894737-53.894737zM253.305263 948.547368c-59.284211 0-107.789474-48.505263-107.789474-107.789473s48.505263-107.789474 107.789474-107.789474 107.789474 48.505263 107.789474 107.789474-48.505263 107.789474-107.789474 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894737 53.894737-21.557895 53.894737-53.894737-21.557895-53.894737-53.894737-53.894737zM856.926316 576.673684c-59.284211 0-107.789474-48.505263-107.789474-107.789473s48.505263-107.789474 107.789474-107.789474 107.789474 48.505263 107.789473 107.789474-48.505263 107.789474-107.789473 107.789473z m0-161.68421c-32.336842 0-53.894737 21.557895-53.894737 53.894737s21.557895 53.894737 53.894737 53.894736 53.894737-21.557895 53.894737-53.894736-21.557895-53.894737-53.894737-53.894737zM662.905263 350.315789C592.842105 350.315789 528.168421 291.031579 528.168421 215.578947s59.284211-134.736842 134.736842-134.736842 134.736842 59.284211 134.736842 134.736842-59.284211 134.736842-134.736842 134.736842z m0-215.578947c-43.115789 0-80.842105 37.726316-80.842105 80.842105s37.726316 80.842105 80.842105 80.842106 80.842105-37.726316 80.842105-80.842106-32.336842-80.842105-80.842105-80.842105zM749.136842 921.6c-43.115789 0-80.842105-37.726316-80.842105-80.842105s37.726316-80.842105 80.842105-80.842106 80.842105 37.726316 80.842105 80.842106-37.726316 80.842105-80.842105 80.842105z m0-107.789474c-16.168421 0-26.947368 10.778947-26.947368 26.947369s10.778947 26.947368 26.947368 26.947368 26.947368-10.778947 26.947369-26.947368-10.778947-26.947368-26.947369-26.947369z" fill="#444A5C" ></path></symbol><symbol id="icon-tupian" viewBox="0 0 1024 1024"><path d="M938.666667 553.92V768c0 64.8-52.533333 117.333333-117.333334 117.333333H202.666667c-64.8 0-117.333333-52.533333-117.333334-117.333333V256c0-64.8 52.533333-117.333333 117.333334-117.333333h618.666666c64.8 0 117.333333 52.533333 117.333334 117.333333v297.92z m-64-74.624V256a53.333333 53.333333 0 0 0-53.333334-53.333333H202.666667a53.333333 53.333333 0 0 0-53.333334 53.333333v344.48A290.090667 290.090667 0 0 1 192 597.333333a286.88 286.88 0 0 1 183.296 65.845334C427.029333 528.384 556.906667 437.333333 704 437.333333c65.706667 0 126.997333 16.778667 170.666667 41.962667z m0 82.24c-5.333333-8.32-21.130667-21.653333-43.648-32.917333C796.768 511.488 753.045333 501.333333 704 501.333333c-121.770667 0-229.130667 76.266667-270.432 188.693334-2.730667 7.445333-7.402667 20.32-13.994667 38.581333-7.68 21.301333-34.453333 28.106667-51.370666 13.056-16.437333-14.634667-28.554667-25.066667-36.138667-31.146667A222.890667 222.890667 0 0 0 192 661.333333c-14.464 0-28.725333 1.365333-42.666667 4.053334V768a53.333333 53.333333 0 0 0 53.333334 53.333333h618.666666a53.333333 53.333333 0 0 0 53.333334-53.333333V561.525333zM320 480a96 96 0 1 1 0-192 96 96 0 0 1 0 192z m0-64a32 32 0 1 0 0-64 32 32 0 0 0 0 64z"  ></path></symbol><symbol id="icon-juhejiedian" viewBox="0 0 1024 1024"><path d="M533.333333 725.333333a64 64 0 1 1-64 64 64 64 0 0 1 64-64m0-85.333333a149.333333 149.333333 0 1 0 149.333334 149.333333 149.333333 149.333333 0 0 0-149.333334-149.333333z" fill="#666666" ></path><path d="M533.333333 277.333333m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M277.333333 320m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M789.333333 320m-106.666666 0a106.666667 106.666667 0 1 0 213.333333 0 106.666667 106.666667 0 1 0-213.333333 0Z" fill="#666666" ></path><path d="M512 341.333333h42.666667v384h-42.666667z" fill="#666666" ></path><path d="M741.290667 357.504l30.165333 30.165333-225.066667 225.066667-30.165333-30.165333z" fill="#666666" ></path><path d="M558.08 582.016l-30.165333 30.165333-228.693334-228.693333 30.165334-30.165333z" fill="#666666" ></path></symbol><symbol id="icon-ziyuan" viewBox="0 0 1024 1024"><path d="M236.615854 752.86913h-0.484162A241.500139 241.500139 0 0 1 0.538332 527.733676a238.78883 238.78883 0 0 1 64.684079-180.011531 242.081134 242.081134 0 0 1 149.025146-74.367324 298.534454 298.534454 0 0 1 596.003751 25.951097V300.95207a221.262156 221.262156 0 0 1 213.031398 233.075715 222.714643 222.714643 0 0 1-221.262156 209.1581h-3.098639a27.500417 27.500417 0 0 1 0-54.904001h2.711309A167.520145 167.520145 0 0 0 968.378705 531.219644a166.261323 166.261323 0 0 0-166.16449-175.363573 151.058627 151.058627 0 0 0-18.204502 1.065157 27.500417 27.500417 0 0 1-30.211725-30.308558 240.822312 240.822312 0 0 0 1.549319-27.306752 243.727285 243.727285 0 0 0-487.357738 0 27.500417 27.500417 0 0 1-27.403584 27.500417 185.627813 185.627813 0 0 0-185.240484 197.538205A186.30564 186.30564 0 0 0 237.100016 697.965129a27.500417 27.500417 0 0 1-0.484162 54.904001z"  ></path><path d="M513.266174 1021.869686a27.500417 27.500417 0 0 1-27.500417-27.403584v-484.162268a27.500417 27.500417 0 1 1 54.904001 0v484.162268a27.403584 27.403584 0 0 1-27.403584 27.403584z"  ></path><path d="M513.266174 1024a27.500417 27.500417 0 0 1-19.366491-8.037094L342.260061 864.129619a27.500417 27.500417 0 1 1 38.732981-38.732981L513.266174 957.766602l130.530147-130.336483a27.500417 27.500417 0 0 1 38.732981 38.732982L532.632664 1015.962906a27.403584 27.403584 0 0 1-19.36649 8.037094z"  ></path></symbol><symbol id="icon-add-select" viewBox="0 0 1024 1024"><path d="M544 213.333333v266.666667H810.666667v64H544V810.666667h-64V544H213.333333v-64h266.666667V213.333333z"  ></path></symbol><symbol id="icon-sami-select" viewBox="0 0 1024 1024"><path d="M810.666667 480v64H213.333333v-64z"  ></path></symbol><symbol id="icon-icon_shuaxin" viewBox="0 0 1024 1024"><path d="M512 938.666667c-55.371852 0-109.226667-10.903704-159.857778-32.237037-48.924444-20.66963-92.823704-50.251852-130.465185-87.988149-37.736296-37.736296-67.318519-81.635556-87.988148-130.465185-21.428148-50.631111-32.237037-104.391111-32.237037-159.857777s10.903704-109.226667 32.237037-159.857778c20.66963-48.924444 50.251852-92.823704 87.988148-130.465185 37.736296-37.736296 81.635556-67.318519 130.465185-87.988149 50.631111-21.428148 104.391111-32.237037 159.857778-32.237037 63.81037 0 125.060741 14.222222 181.854815 42.382223 54.139259 26.832593 102.684444 66.085926 140.325926 113.682963 7.300741 9.197037 5.783704 22.660741-3.508148 29.961481-9.197037 7.300741-22.660741 5.783704-29.961482-3.508148-70.257778-88.936296-175.502222-139.946667-288.711111-139.946667-202.808889 0-367.881481 165.072593-367.881481 367.881482s165.072593 367.881481 367.881481 367.881481 367.881481-165.072593 367.881481-367.881481c0-11.757037 9.576296-21.333333 21.333334-21.333334S922.548148 516.361481 922.548148 528.118519c0 55.371852-10.903704 109.226667-32.237037 159.857777-20.66963 48.924444-50.251852 92.823704-87.988148 130.465185-37.736296 37.736296-81.635556 67.318519-130.465185 87.988149-50.631111 21.428148-104.485926 32.237037-159.857778 32.237037z"  ></path><path d="M817.398519 308.242963c-11.757037 0-21.333333-9.576296-21.333334-21.333333V106.666667c0-11.757037 9.576296-21.333333 21.333334-21.333334s21.333333 9.576296 21.333333 21.333334v180.242963c0 11.757037-9.481481 21.333333-21.333333 21.333333z"  ></path><path d="M817.398519 308.242963H637.155556c-11.757037 0-21.333333-9.576296-21.333334-21.333333s9.576296-21.333333 21.333334-21.333334h180.242963c11.757037 0 21.333333 9.576296 21.333333 21.333334s-9.481481 21.333333-21.333333 21.333333z"  ></path></symbol><symbol id="icon-lianjiezhong" viewBox="0 0 1024 1024"><path d="M883.396923 298.141538a99.721846 99.721846 0 0 1-142.414769 0 103.187692 103.187692 0 0 1 0-144.423384 99.721846 99.721846 0 0 1 142.414769 0 103.187692 103.187692 0 0 1 0 144.423384zM285.144615 760.438154a87.276308 87.276308 0 0 0-124.652307 0 90.269538 90.269538 0 0 0 0 126.385231c34.422154 34.894769 90.230154 34.894769 124.652307 0a90.269538 90.269538 0 0 0 0-126.424616z m482.579693 108.307692a64.472615 64.472615 0 0 1 0-90.269538 62.345846 62.345846 0 0 1 89.00923 0c24.576 24.930462 24.576 65.378462 0 90.269538a62.345846 62.345846 0 0 1-89.00923 0zM294.006154 298.141538a103.187692 103.187692 0 0 0 0-144.423384 99.721846 99.721846 0 0 0-142.454154 0 103.187692 103.187692 0 0 0 0 144.423384 99.721846 99.721846 0 0 0 142.454154 0z m324.214154-196.01723c0 56.438154-45.095385 102.163692-100.745846 102.163692-55.611077 0-100.706462-45.725538-100.706462-102.163692C416.768 45.725538 461.863385 0 517.474462 0c55.650462 0 100.745846 45.725538 100.745846 102.124308zM517.474462 870.793846c-41.747692 0-75.539692 34.264615-75.539693 76.603077 0 42.299077 33.831385 76.603077 75.539693 76.603077 41.747692 0 75.539692-34.264615 75.539692-76.603077 0-42.299077-33.792-76.603077-75.539692-76.603077z m416.768-294.990769c-27.805538 0-50.333538-22.843077-50.333539-51.042462 0-28.199385 22.528-51.042462 50.333539-51.042461 27.844923 0 50.412308 22.843077 50.372923 51.042461 0 28.199385-22.567385 51.081846-50.372923 51.081847zM201.452308 524.8c0-56.398769-45.095385-102.124308-100.745846-102.124308C45.095385 422.596923 0 468.283077 0 524.760615c0 56.398769 45.095385 102.124308 100.706462 102.124308 55.650462 0 100.745846-45.686154 100.745846-102.124308z"  ></path></symbol><symbol id="icon-loading" viewBox="0 0 1024 1024"><path d="M563.2 819.2a102.4 102.4 0 1 1 0 204.8 102.4 102.4 0 0 1 0-204.8z m-320.4608-153.6a128 128 0 1 1 0 256 128 128 0 0 1 0-256z m592.7936 25.6a102.4 102.4 0 1 1 0 204.8 102.4 102.4 0 0 1 0-204.8zM947.2 477.1328a76.8 76.8 0 1 1 0 153.6 76.8 76.8 0 0 1 0-153.6zM128 307.2a128 128 0 1 1 0 256 128 128 0 0 1 0-256z m782.6432-40.6016a51.2 51.2 0 1 1 0 102.4 51.2 51.2 0 0 1 0-102.4zM409.6 0a153.6 153.6 0 1 1 0 307.2 153.6 153.6 0 0 1 0-307.2z m384 153.6a25.6 25.6 0 1 1 0 51.2 25.6 25.6 0 0 1 0-51.2z" fill="#555555" ></path></symbol><symbol id="icon-tupushujuyuan" viewBox="0 0 1024 1024"><path d="M851.456 588.288c-13.312 0-25.6 2.048-37.888 5.12l-90.112-155.648 55.296-31.744c18.944 17.92 44.032 29.184 72.192 29.184 57.344 0 103.936-46.592 103.936-103.936s-46.592-103.936-103.936-103.936c-57.344 0-103.936 46.592-103.936 103.936 0 5.12 0.512 10.24 1.536 15.36l-58.368 33.792-82.944-143.872c26.112-25.088 41.984-59.904 41.984-98.816 0-75.776-61.44-137.216-137.216-137.216s-137.216 61.44-137.216 137.216c0 38.912 15.872 73.728 41.984 98.816l-84.992 146.944-56.832-32.768c1.024-6.144 2.048-12.8 2.048-19.456 0-57.344-46.592-103.936-103.936-103.936-57.344 0-103.936 46.592-103.936 103.936s46.592 103.936 103.936 103.936c26.624 0 51.2-10.24 69.12-26.624l56.32 32.768-88.064 152.576c-11.776-3.584-24.576-5.12-37.888-5.12-75.776 0-137.216 61.44-137.216 137.216s61.44 137.216 137.216 137.216c64.512 0 118.272-44.544 133.12-103.936h173.056v61.44c-40.96 13.824-70.656 52.736-70.656 98.816 0 57.344 46.592 103.936 103.936 103.936s103.936-46.592 103.936-103.936c0-46.08-29.696-84.48-70.656-98.816v-61.44h173.056c14.848 59.904 69.12 103.936 133.12 103.936 75.776 0 137.216-61.44 137.216-137.216s-61.44-137.728-137.216-137.728z m-410.112-450.048c0-38.912 31.744-70.656 70.656-70.656s70.656 31.744 70.656 70.656c0 13.824-4.096 26.624-10.752 37.376-12.288 19.456-33.28 32.256-57.856 33.28h-5.12c-24.576-1.024-45.568-13.824-57.856-33.28-6.144-10.752-9.728-24.064-9.728-37.376z m32.768 132.096c11.776 3.584 24.576 5.12 37.888 5.12s25.6-2.048 37.888-5.12l82.944 143.872-124.416 72.192-118.784-68.608 84.48-147.456z m-301.568 526.336c-38.912 0-70.656-31.744-70.656-70.656 0-38.912 31.744-70.656 70.656-70.656h2.56c24.576 1.024 45.568 13.824 57.856 33.28 1.024 1.536 1.536 2.56 2.56 4.096 5.12 9.728 8.192 20.992 8.192 33.28 0 11.776-3.072 23.552-8.192 33.28-12.288 22.016-35.84 37.376-62.976 37.376z m133.12-103.936c-6.144-25.6-19.456-48.128-37.888-65.536l88.064-152.576 122.88 70.656v146.944h-173.056z m239.616-151.552l120.832-69.632 90.112 155.648c-18.432 17.408-31.744 39.936-37.888 65.536h-173.056v-151.552z m306.176 255.488c-27.136 0-50.688-15.36-62.464-37.376-5.12-9.728-8.192-21.504-8.192-33.28 0-12.288 3.072-23.552 8.192-33.28 0.512-1.536 1.536-3.072 2.56-4.096 12.288-19.456 33.28-32.768 57.856-33.28h2.56c38.912 0 70.656 31.744 70.656 70.656-0.512 38.912-32.256 70.656-71.168 70.656z"  ></path></symbol><symbol id="icon-jiedian" viewBox="0 0 1024 1024"><path d="M882.1914 744.849921c-60.501005 0-112.097749 38.645092-131.425292 92.560342H244.912146c-80.468136 0-145.955927-62.61964-145.955926-139.570043 0-77.000371 65.487791-139.570043 145.955926-139.570043h136.312143c19.497433 53.585462 70.934281 91.950735 131.205434 91.950735 60.241173 0 111.688014-38.375266 131.205434-91.950735h136.452052C914.210763 558.280171 1023.340425 453.92743 1023.340425 325.660102S914.210763 93.040033 780.077216 93.040033H273.093982c-19.197627-54.165089-70.944274-93.040033-131.595182-93.040033C64.508422 0 1.928757 62.569672 1.928757 139.560049c0 76.950403 62.579665 139.570043 139.570043 139.570043 60.640915 0 112.377569-38.894931 131.585189-93.040033h506.993227c80.468136 0 145.955927 62.61964 145.955927 139.570043 0 77.000371-65.487791 139.570043-145.955927 139.570043H644.414655c-18.887826-54.734722-70.924287-94.139324-131.974938-94.139325-61.090625 0-113.097105 39.394609-131.974938 94.139325H244.912146c-134.133547 0-243.263209 104.352741-243.263209 232.620069 0 128.267328 109.129663 232.620069 243.263209 232.620069h505.524174c19.057717 54.394941 70.9043 93.529717 131.75508 93.529717 76.950403 0 139.570043-62.61964 139.570043-139.570043 0.009994-77.000371-62.61964-139.580036-139.570043-139.580036zM141.428845 207.036558c-37.166045 0-67.376574-30.230515-67.376574-67.376573 0-37.166045 30.210528-67.376574 67.376574-67.376574 37.146058 0 67.376574 30.210528 67.376573 67.376574 0 37.146058-30.230515 67.376574-67.376573 67.376573z m371.000878 236.257725c37.146058 0 67.376574 30.210528 67.376574 67.376574 0 37.146058-30.230515 67.376574-67.376574 67.376573-37.166045 0-67.376574-30.230515-67.376574-67.376573 0.009994-37.176039 30.210528-67.376574 67.376574-67.376574z m369.761677 508.502254c-37.166045 0-67.376574-30.230515-67.376574-67.376573 0-37.166045 30.210528-67.376574 67.376574-67.376574 37.146058 0 67.376574 30.210528 67.376574 67.376574 0 37.146058-30.230515 67.376574-67.376574 67.376573z"  ></path></symbol><symbol id="icon-shitujiedianxianshi" viewBox="0 0 1367 1024"><path d="M1235.403267 512.03593a130.596433 130.596433 0 0 0-42.68749 7.796802l-193.295715-290.430872A149.113837 149.113837 0 1 0 724.647767 149.48464a151.777744 151.777744 0 0 0 37.229729 97.849864l-194.920048 357.873209a220.519548 220.519548 0 0 0-55.162374-8.511508 207.914718 207.914718 0 0 0-114.807909 34.046035L240.401393 443.683967a126.763005 126.763005 0 0 0-75.564005-182.380192 127.737605 127.737605 0 1 0 12.99467 239.816633l157.625345 188.422713A213.307506 213.307506 0 1 0 643.23616 643.282096l190.956674-350.856087a164.187654 164.187654 0 0 0 39.56877 6.172468 143.591102 143.591102 0 0 0 60.555162-12.99467l192.516034 288.026859a121.760057 121.760057 0 0 0-18.582377 64.973349 128.127445 128.127445 0 1 0 127.152844-126.568085zM129.621832 448.362048a68.157044 68.157044 0 1 1 68.157044-68.092071A68.157044 68.157044 0 0 1 129.621832 448.362048z m528.948039 365.670011a145.86517 145.86517 0 1 1-145.86517-145.86517 145.86517 145.86517 0 0 1 145.86517 145.86517z m215.12676-577.937944a87.389155 87.389155 0 1 1 87.389155-87.389155 87.389155 87.389155 0 0 1-87.389155 87.389155z m365.085251 474.305451a68.157044 68.157044 0 1 1 68.222017-68.416937 68.157044 68.157044 0 0 1-68.222017 68.157044z"  ></path></symbol><symbol id="icon-shituxianshiquanbujiedian" viewBox="0 0 1367 1024"><path d="M1235.403267 512.03593a130.596433 130.596433 0 0 0-42.68749 7.796802l-193.295715-290.430872A149.113837 149.113837 0 1 0 724.647767 149.48464a151.777744 151.777744 0 0 0 37.229729 97.849864l-194.920048 357.873209a220.519548 220.519548 0 0 0-55.162374-8.511508 207.914718 207.914718 0 0 0-114.807909 34.046035L240.401393 443.683967a126.763005 126.763005 0 0 0-75.564005-182.380192 127.737605 127.737605 0 1 0 12.99467 239.816633l157.625345 188.422713A213.307506 213.307506 0 1 0 643.23616 643.282096l190.956674-350.856087a164.187654 164.187654 0 0 0 39.56877 6.172468 143.591102 143.591102 0 0 0 60.555162-12.99467l192.516034 288.026859a121.760057 121.760057 0 0 0-18.582377 64.973349 128.127445 128.127445 0 1 0 127.152844-126.568085zM129.621832 448.362048a68.157044 68.157044 0 1 1 68.157044-68.092071A68.157044 68.157044 0 0 1 129.621832 448.362048z m528.948039 365.670011a145.86517 145.86517 0 1 1-145.86517-145.86517 145.86517 145.86517 0 0 1 145.86517 145.86517z m215.12676-577.937944a87.389155 87.389155 0 1 1 87.389155-87.389155 87.389155 87.389155 0 0 1-87.389155 87.389155z m365.085251 474.305451a68.157044 68.157044 0 1 1 68.222017-68.416937 68.157044 68.157044 0 0 1-68.222017 68.157044z"  ></path></symbol><symbol id="icon-suoxiao" viewBox="0 0 1024 1024"><path d="M768 448a320 320 0 1 0-320 320 320 320 0 0 0 320-320z m64 0A384 384 0 1 1 448 64a384 384 0 0 1 384 384z"  ></path><path d="M681.28 726.72a32 32 0 0 1 45.44-45.44l160 160a32 32 0 0 1-45.44 45.44zM288 480a32 32 0 0 1 0-64h320a32 32 0 0 1 0 64z"  ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1024 1024"><path d="M922.243 97.755c11.49 11.489 11.673 30.002 0.547 41.713l-0.547 0.562-109.119 109.1c57.22 78.348 42.673 195.388-35.778 273.839l-92.83 92.585c-11.572 11.54-30.264 11.653-41.97 0.253l-45.746-44.55-18.089 18.086a29.891 29.891 0 0 1-7.171 5.3l48.764 47.489c11.947 11.638 12.06 30.804 0.248 42.585l-95.875 95.629c-77.416 77.417-192.412 92.603-270.72 38.004L144.04 928.245c-11.676 11.673-30.606 11.673-42.282 0-11.49-11.489-11.673-30.002-0.547-41.713l0.547-0.562 109.677-109.657c-55.981-78.335-41.131-194.413 36.833-272.377l92.831-92.585c11.571-11.54 30.263-11.653 41.969-0.254l42.587 41.474a29.935 29.935 0 0 1 3.678-4.741l0.548-0.562 19.54-19.538-44.11-42.957c-11.828-11.522-12.057-30.422-0.6-42.23l0.351-0.355 95.875-95.63c76.927-76.926 190.96-92.408 269.23-39.03L879.961 97.755c11.676-11.673 30.606-11.673 42.282 0zM362.451 474.49l-71.916 71.727-1.884 1.911c-61.822 63.545-67.916 156.289-16.185 208.02C324.72 808.4 418.82 801.655 482.43 738.044l74.422-74.234-194.401-189.32z m129.807-5.04l-20.096 20.094a30.035 30.035 0 0 1-4.643 3.8l63.25 61.595a29.82 29.82 0 0 1 5.113-7.308l0.547-0.561 17.532-17.531-61.703-60.089z m260.889-198.691c-52.254-52.254-146.353-45.509-209.964 18.102l-74.422 74.234 194.4 189.322 71.939-71.75 1.862-1.888c61.822-63.545 67.916-156.29 16.185-208.02z" fill="#333333" ></path></symbol><symbol id="icon-xiantiao" viewBox="0 0 1024 1024"><path d="M827.076923 157.538462a39.384615 39.384615 0 1 1-14.375385 76.051692L233.590154 812.701538a39.384615 39.384615 0 1 1-22.291692-22.291692L790.409846 211.298462A39.384615 39.384615 0 0 1 827.076923 157.538462z" fill="#333333" ></path></symbol></svg>',
      s = (s = document.getElementsByTagName("script"))[s.length - 1].getAttribute("data-injectcss");if (s && !c.__iconfont__svg__cssinject__) {
    c.__iconfont__svg__cssinject__ = !0;try {
      document.write("<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>");
    } catch (c) {
      console && console.log(c);
    }
  }function n() {
    o || (o = !0, t());
  }a = function () {
    var c, a, l, t;(t = document.createElement("div")).innerHTML = e, e = null, (l = t.getElementsByTagName("svg")[0]) && (l.setAttribute("aria-hidden", "true"), l.style.position = "absolute", l.style.width = 0, l.style.height = 0, l.style.overflow = "hidden", c = l, (a = document.body).firstChild ? (t = c, (l = a.firstChild).parentNode.insertBefore(t, l)) : a.appendChild(c));
  }, document.addEventListener ? ~["complete", "loaded", "interactive"].indexOf(document.readyState) ? setTimeout(a, 0) : (l = function () {
    document.removeEventListener("DOMContentLoaded", l, !1), a();
  }, document.addEventListener("DOMContentLoaded", l, !1)) : document.attachEvent && (t = a, i = c.document, o = !1, (h = function () {
    try {
      i.documentElement.doScroll("left");
    } catch (c) {
      return void setTimeout(h, 50);
    }n();
  })(), i.onreadystatechange = function () {
    "complete" == i.readyState && (i.onreadystatechange = null, n());
  });
}(window);

/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_9__;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_10__;

/***/ }),
/* 11 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_11__;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(13);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(1)("73745c30", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-a252e0a6\",\"scoped\":false,\"hasInlineConfig\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./SeeksRGNode.vue", function() {
     var newContent = require("!!../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-a252e0a6\",\"scoped\":false,\"hasInlineConfig\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./SeeksRGNode.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)(false);
// imports


// module
exports.push([module.i, "\n.rg-icon {\n  width: 19px;\n  height: 19px;\n  vertical-align: 0px;\n  fill: currentColor;\n  overflow: hidden;\n}\n.el-icon-remove,.el-icon-circle-plus{\n  cursor: pointer;\n}\n.rel-node-peel{\n  clear: both;\n  padding:8px;\n  position: absolute;\n  font-size: 14px;\n  /*border:green solid 1px;*/\n}\n.rel-node{\n  text-align: center;\n}\n.rel-node-shape-1{\n  /*border: #FD8B37 solid 1px;*/\n  border-radius: 8px;\n  padding:5px;\n  padding-left:15px;\n  padding-right:15px;\n}\n.c-node-text{\n  height:100%;\n  width:100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.rel-node-shape-0{\n  padding:10px;\n}\n.rel-node-shape-0{\n  width:80px;\n  height:80px;\n  border-radius: 50%;\n  /*border: #FD8B37 solid 2px;*/\n  /*text-align: left;*/\n  /*padding:10px;*/\n  /*white-space: nowrap;*/\n  /*text-overflow: ellipsis;*/\n  /*overflow: hidden;*/\n  /*word-break: break-all;*/\n}\n.rel-node-shape-0:hover{\n  /*overflow: visible;*/\n  /*text-overflow: inherit;*/\n  box-shadow: 0px 0px 5px #FFC5A6;\n}\n/*.rel-node{*/\n  /*display: table;*/\n/*}*/\n/*.rel-node span{*/\n  /*display: table-cell;*/\n  /*vertical-align:middle;*/\n/*}*/\n.rel-node-type-button{\n  border-radius: 25px;\n  color: blue;\n  cursor: pointer;\n}\n.rel-node-hover{\n}\n.rel-node-checked{\n  box-shadow: 0px 0px 10px #FD8B37;\n  /*border-color: #BA7909;*/\n  /*background-color: #FD8B37;*/\n  /*color: #ffffff;*/\n  /* firefox bug fix - won't rotate at 90deg angles */\n  -moz-transform: rotate(-89deg) translateX(-190px);\n  animation-timing-function:linear;\n  animation: ACTRGNodeInit 2s;\n}\n.rel-node-selected{\n  box-shadow: 0px 0px 10px #FD8B37;\n  /*border-color: #BA7909;*/\n  /*background-color: #FD8B37;*/\n  /*color: #ffffff;*/\n  /* firefox bug fix - won't rotate at 90deg angles */\n  -moz-transform: rotate(-89deg) translateX(-190px);\n  animation-timing-function:linear;\n  animation: ACTRGNodeInit 2s;\n}\n.rel-node-vtree-2 {\n  transform-origin:0 0;/* 设置旋转中心为左上角*/\n  /*transform-origin:50% 50%;!* 设置放大中心为元素中心 *!*/\n  transform: rotate(30deg) translateX(0px);\n}\n.rel-node-vtree {\n  width:130px;\n  height:45px;\n  text-align: left;\n}\n/*.c-node-text{*/\n  /*font-size: 12px;*/\n  /*display: inline-block;*/\n  /*width:100px;*/\n  /*height:16px;*/\n  /*margin-top:40px;*/\n  /*margin-left:-25px;*/\n  /*position:absolute;*/\n  /*word-break:keep-all;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;*/\n  /*text-align:center;*/\n/*}*/\n.c-btn-open-close{\n  position: absolute;\n  height:100%;\n  width:19px;\n  /*border:red solid 1px;*/\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  /*border:#ff0000 solid 1px;*/\n}\n.c-btn-open-close span{\n  width: 19px;\n  height:19px;\n  display: inline-block;\n  text-align: center;\n  border-radius: 15px;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 19px;\n  line-height: 16px;\n  background-size: 100% 100%;\n}\n.c-expanded{\n  background-image: url(data:image/svg+xml;%20charset=utf8,%3Csvg%20t=%221606310217820%22%20viewBox=%220%200%201024%201024%22%20version=%221.1%22%20xmlns=%22http://www.w3.org/2000/svg%22%20p-id=%223373%22%20width=%2232%22%20height=%2232%22%3E%3Cpath%20d=%22M853.333333%20480H544V170.666667c0-17.066667-14.933333-32-32-32s-32%2014.933333-32%2032v309.333333H170.666667c-17.066667%200-32%2014.933333-32%2032s14.933333%2032%2032%2032h309.333333V853.333333c0%2017.066667%2014.933333%2032%2032%2032s32-14.933333%2032-32V544H853.333333c17.066667%200%2032-14.933333%2032-32s-14.933333-32-32-32z%22%20p-id=%223374%22%20fill=%22white%22%3E%3C/path%3E%3C/svg%3E);\n}\n.c-collapsed{\n  background-image: url(data:image/svg+xml;%20charset=utf8,%3Csvg%20t=%221606310454619%22%20class=%22icon%22%20viewBox=%220%200%201024%201024%22%20version=%221.1%22%20xmlns=%22http://www.w3.org/2000/svg%22%20p-id=%223662%22%20width=%22128%22%20height=%22128%22%3E%3Cpath%20d=%22M853.333333%20554.666667H170.666667c-23.466667%200-42.666667-19.2-42.666667-42.666667s19.2-42.666667%2042.666667-42.666667h682.666666c23.466667%200%2042.666667%2019.2%2042.666667%2042.666667s-19.2%2042.666667-42.666667%2042.666667z%22%20p-id=%223663%22%20fill=%22white%22%3E%3C/path%3E%3C/svg%3E);\n}\n.c-expand-positon-left{\n  margin-top:-8px;\n  margin-left:-18px;\n}\n.c-expand-positon-right{\n  height:100%;\n  width:100%;\n  justify-content: center;\n}\n.c-expand-positon-right span{\n  margin-top:-18px;\n  margin-right:-18px;\n  margin-left:100%;\n}\n.c-expand-positon-bottom{\n  height:100%;\n  width:100%;\n  margin-top:7px;\n  margin-left:-8px;\n  align-items: flex-end;\n  justify-content: center;\n}\n.c-expand-positon-top{\n  height:18px;\n  width:100%;\n  margin-top:-20px;\n  margin-left:-6px;\n  align-items: flex-end;\n  justify-content: center;\n}\n@keyframes ACTRGNodeInit {\nfrom {\n    box-shadow: 0px 0px 15px #FD8B37;\n}\n15% {\n    box-shadow: 0px 0px 1px rgb(46, 78, 143);\n}\n30% {\n    box-shadow: 0px 0px 15px #FD8B37;\n}\n45% {\n    box-shadow: 0px 0px 1px rgb(46, 78, 143);\n}\n60% {\n    box-shadow: 0px 0px 15px #FD8B37;\n}\nto {\n    box-shadow: 0px 0px 1px rgb(46, 78, 143);\n}\n}\n.rel-diy-node{\n  padding:0px;\n}\n", ""]);

// exports


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(15);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(1)("696294ae", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-99d854b6\",\"scoped\":false,\"hasInlineConfig\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./SeeksRGLink.vue", function() {
     var newContent = require("!!../../node_modules/_css-loader@0.28.11@css-loader/index.js!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-99d854b6\",\"scoped\":false,\"hasInlineConfig\":false}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./SeeksRGLink.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)(false);
// imports


// module
exports.push([module.i, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*.RGLine-enter-active {*/\n  /*transition: all .3s ease;*/\n/*}*/\n/*.RGLine-leave-active {*/\n  /*transition: all .8s cubic-bezier(1.0, 0.5, 0.8, 1.0);*/\n/*}*/\n.c-rg-link-text {\n  fill: #888888;\n  font-size: 12px;\n}\n.c-rg-line {\n  z-index: 1000;\n  fill-rule: nonzero;\n  /*marker-end: url('#arrow');*/\n  /* firefox bug fix - won't rotate at 90deg angles */\n  /*-moz-transform: rotate(-89deg) translateX(-190px);*/\n  /*animation-timing-function:linear;*/\n  /*animation: ACTRGLineInit 1s;*/\n}\n.c-rg-line-tool {\n  stroke-dasharray: 5,5,5;\n}\n.c-rg-line-flash {\n  /* firefox bug fix - won't rotate at 90deg angles */\n  -moz-transform: rotate(-89deg) translateX(-190px);\n  animation-timing-function:linear;\n  animation: ACTRGLineChecked 10s;\n}\n@keyframes ACTRGLineInit {\nfrom {\n    stroke-dashoffset: 10px;\n    stroke-dasharray: 20,20,20;\n}\nto {\n    stroke-dashoffset: 0;\n    stroke-dasharray: 0,0,0;\n}\n}\n@keyframes ACTRGLineChecked {\nfrom {\n    stroke-dashoffset: 352px;\n}\nto {\n    stroke-dashoffset: 0;\n}\n}\n", ""]);

// exports


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(17);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(1)("7451c2ef", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-337fb259\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./GraphSettingPanel.vue", function() {
     var newContent = require("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-337fb259\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./GraphSettingPanel.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)(false);
// imports


// module
exports.push([module.i, "\n.c-setting-panel[data-v-337fb259]{\n  --height:500px;\n  --width:500px;\n  width:500px;\n  height:500px;\n  position: absolute;\n  margin-left:10px;\n  margin-top:5px;\n  font-size: 12px;\n  color: rgb(58, 91, 178);\n  padding:10px;\n  overflow: hidden;\n  box-shadow: 0px 0px 5px rgb(58, 91, 178);\n  border-radius: 5px;\n  z-index: 1000;\n  background-color: #ffffff;\n  border: rgb(58, 91, 178) solid 1px;\n  padding-top:60px;\n}\n.c-setting-panel-button[data-v-337fb259]{\n  height:45px;\n  width:45px;\n  font-size: 20px;\n  line-height: 45px;\n  text-align: center;\n  border-radius: 50%;\n  position: absolute;\n  margin-left:25px;\n  margin-top:20px;\n  background-color: rgb(58, 91, 178);\n  color: #ffffff;\n  cursor: pointer;\n  z-index: 1001;\n  box-shadow: 0px 0px 8px rgb(46, 78, 143);\n}\n.c-setting-panel-button[data-v-337fb259]:hover{\n  box-shadow: 0px 0px 20px #FFA20A;\n  border:#ffffff solid 1px;\n  color: #FFA20A;\n  -moz-transform: rotate(-89deg) translateX(-190px);\n  animation-timing-function:linear;\n  animation: flashButton-data-v-337fb259 2s infinite;\n}\n.c-fixedLayout[data-v-337fb259]{\n  position: fixed;\n  top: 125px\n}\n@keyframes flashButton-data-v-337fb259 {\nfrom {\n    box-shadow: 0px 0px 8px rgb(46, 78, 143);\n}\n30% {\n    box-shadow: 0px 0px 20px #FFA20A;\n}\nto {\n    box-shadow: 0px 0px 8px rgb(46, 78, 143);\n}\n}\n", ""]);

// exports


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(19);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(1)("5939241a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-fe70423e\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./GraphMiniView.vue", function() {
     var newContent = require("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-fe70423e\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./GraphMiniView.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)(false);
// imports


// module
exports.push([module.i, "\n.c-mini-graph[data-v-fe70423e]{\n  height:100px;\n  width:100px;\n  position: absolute;\n  margin-left: 60px;\n  margin-top:100px;\n  z-index: 999;\n}\n.c-fixedLayout[data-v-fe70423e]{\n  position: fixed;\n  top:100px;\n}\n.c-mini-canvas[data-v-fe70423e]{\n  background-color: #AACBFF;\n  border: #7BA8FF solid 1px;\n  opacity: 0.8;\n  position: absolute;\n}\n.c-mini-view[data-v-fe70423e]{\n  background-color: #F5A565;\n  border: #C03639 solid 1px;\n  opacity: 0.5;\n  color: #ffffff;\n  font-size: 14px;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n}\n.c-mini-node[data-v-fe70423e]{\n  position: absolute;\n  width:2px;\n  height:2px;\n  background-color: #000000;\n  border-radius: 1px;\n}\n", ""]);

// exports


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(21);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(1)("1c471178", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3cfdb1cf\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./GraphMiniToolBar.vue", function() {
     var newContent = require("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-3cfdb1cf\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./GraphMiniToolBar.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)(false);
// imports


// module
exports.push([module.i, "\n.rg-icon[data-v-3cfdb1cf] {\n  width: 16px;\n  height: 16px;\n  vertical-align: -3px;\n  fill: currentColor;\n  overflow: hidden;\n}\n.c-mini-toolbar[data-v-3cfdb1cf]{\n  width:44px;\n  position: absolute;\n  margin-top:170px;\n  margin-right:10px;\n  z-index: 999;\n  border: #bbbbbb solid 1px;\n  background-color: #ffffff;\n  box-shadow: 0px 0px 8px #cccccc;\n  box-sizing:border-box;\n}\n.c-fixedLayout[data-v-3cfdb1cf]{\n  position: fixed;\n  top:100px;\n}\n.c-mb-button[data-v-3cfdb1cf]{\n  height:44px;\n  width:42px;\n  margin-top:0px;\n  background-color: #ffffff;\n  border-top: #efefef solid 1px;\n  opacity: 1;\n  text-align: center;\n  padding-top:3px;\n  cursor: pointer;\n  color: #999999;\n  font-size: 18px;\n  float: left;\n  box-sizing:border-box;\n  line-height: 21px;\n}\n.c-mb-button .c-mb-text[data-v-3cfdb1cf]{\n  display: inline-block;\n  height:14px;\n  width:42px;\n  font-size: 12px;\n  line-height: 12px;\n  margin-top:24px;\n  margin-left:-28px;\n  position: absolute;\n  color: #262626;\n}\n.c-mb-button-on[data-v-3cfdb1cf]{\n  background-color: #2E74B5;\n  border-top: #2E4E8F solid 1px;\n  color: #ffffff;\n}\n.c-mb-button[data-v-3cfdb1cf]:hover{\n  background-color: #2E4E8F;\n  border-top: #2E4E8F solid 1px;\n  color: #ffffff;\n}\n.c-mb-button:hover .c-mb-text[data-v-3cfdb1cf],.c-mb-button-on .c-mb-text[data-v-3cfdb1cf]{\n  color: #ffffff;\n}\n.c-mb-button .c-mb-child-panel[data-v-3cfdb1cf]{\n  height:46px;position: absolute;margin-top: -26px;background-color: #ffffff;\n  display: none;\n  border: #bbbbbb solid 1px;\n  box-shadow: 0px 0px 8px #cccccc;\n  box-sizing:border-box;\n}\n.c-mb-button:hover .c-mb-child-panel[data-v-3cfdb1cf]{\n  display: block;\n}\n.c-mb-button .c-mb-button[data-v-3cfdb1cf]{\n  height:44px;\n  width: 42px;\n  margin:0px;\n  border: none;\n}\n.c-mb-button-c .c-mb-text[data-v-3cfdb1cf]{\n  color: #262626 !important;\n}\n.c-mb-button-c:hover .c-mb-text[data-v-3cfdb1cf],.c-mb-button-on .c-mb-text[data-v-3cfdb1cf]{\n  color: #ffffff !important;\n}\n.c-loading-icon[data-v-3cfdb1cf]{\n  animation:turn-data-v-3cfdb1cf 1s linear infinite;\n}\n@keyframes turn-data-v-3cfdb1cf{\n0%{-webkit-transform:rotate(0deg);\n}\n25%{-webkit-transform:rotate(90deg);\n}\n50%{-webkit-transform:rotate(180deg);\n}\n75%{-webkit-transform:rotate(270deg);\n}\n100%{-webkit-transform:rotate(360deg);\n}\n}\n", ""]);

// exports


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(23);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(1)("3ca01a9a", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7c68081f\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./GraphMiniNameFilter.vue", function() {
     var newContent = require("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-7c68081f\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./GraphMiniNameFilter.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)(false);
// imports


// module
exports.push([module.i, "\n.c-mini-namefilter[data-v-7c68081f]{\n  height:60px;\n  position: absolute;\n  margin-top:10px;\n  z-index: 999;\n}\n.c-fixedLayout[data-v-7c68081f]{\n  position: fixed;\n  top:145px;\n}\n", ""]);

// exports


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(25);
if(typeof content === 'string') content = [[module.i, content, '']];
if(content.locals) module.exports = content.locals;
// add the styles to the DOM
var update = __webpack_require__(1)("3c57a372", content, false, {});
// Hot Module Replacement
if(false) {
 // When the styles change, update the <style> tags
 if(!content.locals) {
   module.hot.accept("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-161dbae4\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./GraphBottomPanel.vue", function() {
     var newContent = require("!!../node_modules/_css-loader@0.28.11@css-loader/index.js!../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index.js?{\"vue\":true,\"id\":\"data-v-161dbae4\",\"scoped\":true,\"hasInlineConfig\":false}!../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=styles&index=0!./GraphBottomPanel.vue");
     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
     update(newContent);
   });
 }
 // When the module is disposed, remove the <style> tags
 module.hot.dispose(function() { update(); });
}

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(0)(false);
// imports


// module
exports.push([module.i, "\n.c-rg-bottom-panel[data-v-161dbae4]{\n  width:100%;\n  margin-left:0px;\n  font-size: 12px;\n  color: #1890ff;\n  padding:0px;\n  overflow: hidden;\n  border-radius: 0px;\n  position: absolute;\n  z-index: 99;\n  opacity: 1;\n}\n.c-fixedLayout[data-v-161dbae4]{\n  position: fixed;\n  bottom:0px;\n}\n", ""]);

// exports


/***/ })
/******/ ])["default"];
});